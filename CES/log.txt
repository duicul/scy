Allow login packets to only generate on server based connections
Run injectSnapshot on the client thread, wait for result and
disconnect when injectSnapshot fails.
Fix DevServer to load MOD_CLASSES
Fix LaunchTesting to properly load log4j2 markers (don't use a
static variable in that class!)

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Exclude PR builds from discord and changelog

Exclude noci branches from travis

Fix being unable to plant nether wart (#5572)


Fix silk touch not working on Ender Chests.

Fix entity spawn packet pitch (reversed yaw/pitch) (#5603)


Fix invalid inventory being sent to ItemCraftedEvent Closes #5580
Fixed custom ingredient network serialization by removing unneeded mark. Closes #5577
Changed HorseArmorType constructor to not prefix vanilla paths to custom armors. Closes #5574
Fix removeBlock being called with invalid canHarvest value. Closes #5570

Add UI for warnings that occurred during loading (#5530)


Fix max entity radius not being settable by making it a instance method on world. Closes #5601
Fix VoidFluidHandler.INSTANCE not being a instance of VoidFluidHandler. Closes #5602
Remove backwards compat code and make IItemHandler.isItemValid non-default. Closes #5598

Add way to publish the reobf Jar with the maven-publish
task. The standard way does not publish reobfuscated
artifacts.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Add in the ability to load modlists from a file.

This is simple: <modfile>.list is a newline separated list
of maven-like coordinates for mods to load into the game.
They are searched for in all known maven roots.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Fix rails not being able to be placed on hoppers.

DimensionManager.registerDimension now returns the DimensionType instance for convienance.
You can still access others in DimensionType.getByName()
Fixed ForgeRegistry rappers not forwarding isEmpty.

Refactor Userdev and Forgedev launching.
Locating mods on the classpath in dev should solve linked MC sources when debugging.
As well as loading deobfed mods.
Rewrote how arguments are handled in dev, so users can overwrite any defaults we provide.
Added basic Yggdrasil auth support. Passing in --username and --password arguments.
ONLY USE IF NECESSARY. Forge is NOT responsible for your login information.

Make userdev parse out the classifier for the Forge jar that is on the classpath.
Should fix debugging Minecraft at dev time.

Tidy up network initialization, and force it to classload early in
modloading lifecycle. Closes #5576

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Tweak log4j2 config and allow access to classdump functionality from
modlauncher.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Fix #5584 by copying the zipped resource to a temporary directory if
paulscode is requesting it. This is so icky.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Log a message as well, when we crash.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Try writing a temporary file to disk when a paulscode thread requests
a resource, because even zipfilesystems return interruptible file channels.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Enforce specversion number for forgeSPI so we don't crash with weird errors later.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Put both LogicalSides on NetworkDirection:
Origination (where it came from) and Reception (where it arrived at).

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Rewrite the FML Handshake packet formats to include actually syncing the registry data and introduce the concept of caching it locally.
Snapshots are not injected yet due top threading issues.

Handle differing network versions for FML gracefully?

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Fix problem with duplicate mods caused by duplicate classes found during scan.

File Scan results are now sets.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Try to fix #5573 by peeling the worldclient fetch into a separate handler.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Tidy up server launch. The JAR will resolve it's libraries from a relative
path. We just need to verify what we need is on the classpath, and
try and handle when it's not, cleanly (by recommending running the
installer).

The manifest now embeds the correct launch arguments to allow FML to
resolve - these were _never_ editable, and belong somewhere out of
the way.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Add missing constructors in KeyBinding to match existing vanilla constructors. (#5480)


Update MDK Readme to describe new FG3 procedures. (#5553)


Fix Custom Entity Data not persisting between world loads. Closes #5562
Fix BlockRailState inverting flexibility flag. Closes #5550
Disable Forge's hooks on dispensing Buckets until Fluid system re-write. Closes #5545
Fix modifier only keybinds. Closes #5544

Fix entity shearing logic (#5566)


Fix droppers not spawning items in world (#5559)


Allow vanilla connections properly, and allow mods to decide.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Patch DimensionSavedDataManager to not spam FS mkdirs requests for
empty files that don't exist yet, and don't contain data. Should
result in a significant performance improvement for those with slower disks.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Fix GUI packet dispatch, add additional blockpos helper for common usecase.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Fix startup Query to actually display (fixed commit).

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Update to 0.10 modlauncher API with performance improvements..

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Hide the webhook address so people don't spam it.

Remove debug leftovers from Jenkinsfile.

Delete old OreDictionary file, fix type in NUGGETS_IRON field name, and ping discord from jenkins.

Merge extra and data jars. As Log4j has issues with it's config being in a different jar then the custom logger.

Add GuiUtils.drawInscribedRect, use in mod list GUI to fix logo rendering

Fix reference to UnsafeHacks in RuntimeEnumExtender

Fix double tall plants not being shearable, add IShearable to seagrass

Closes #5524

Add back missing ItemColors patch (#5474)


Fix entities being killed in one hit. Closes #5511

Fix unloc pattern for tps output
Fix MinecraftForge.initialize not being called.

Fixes UsernameCache and harvest tools
Closes #5529

Make BannerPattern extensible (#5464)


Remove EnumFacing internal ID maps from AT file (#5526)


Fix GuiEnchantment using wrong value to index enchantClue array (#5452)


Fix some minor patch regressions (#5490)



Altered EntityType registry to use a Forge based registry (#5493)


Fix bug with ObfuscationReflectionHelper (#5509)


Move unsafehacks to separate JAR built separately..

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Clean up Entity patches, remove extra method. Closes #5494

Remove now defunct eclipse files from MDK

Add a simple network API..

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

 Refactor forge and example run configs based on MinecraftForge/ForgeGradle#546

- Updated run config formats based on the refactored setup
- Removed old 'runclient' and 'runserver' JavaExec tasks, replacing them by creating the run configs using the refactored setup.
- Set 'assetIndex' environment variable from FG
- Updated MDK for new run config setup
Make SpawnPlacementType extensible, remove from ArmorMaterial

Fix connection to vanilla servers. Generate a default mod server config
for mods connecting to servers.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Fix TPS string

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Change openGui to take a Consumer<PacketBuffer>

Fix author and other strings in the mdk mods toml file, update coremods to 0.3.+

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Fix World crashing on load Fixes #5499 (#5503)


Actually dispatch handleWorldDataSave. Closes #5492

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Merge branch 'pull/5483' into 1.13.x

Fix assetIndexes for 1.13.1

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Fix travis build for 1.13.x branch

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Merge branch 'pull/5484' into 1.13.x

Fix lazy ModContainer evaluation skipping thrown loadingExceptions

Fix formatting

Fixes #5446 Listening for the same registry event in two different mods fails

Tell the mod event bus not to track phasing for events.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Add back missing patch for Item.BLOCK_TO_ITEM

Fix the MDK..

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Fix network syncing of SERVER config. Enable COMMON Config. Fix network
login handling.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Fix serverlang loading issue, by frontloading MC and Forge langs,
so error messaging works.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Use MC VERSION in the dependencies string for the extra jar

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Publish to mainline

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Remove Forge ChunkLoader - vanilla has a new system. API will follow.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Fix Block$Properties AT for new class name

Fix VillagerRegistry

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Add the language providers to the main classloader as well, so
their resources are available to other classes..

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Fix RegistryManager#getRegistry not working for generic registry entries

Fix license headers

Fix GlowstoneFeature patch name

Fix javac compile issues.

Initial 1.13.2 update. Major thing to note is that Dimensions have been completely revamped.
DimensionType is not unique per Dimension. See DimensionManager for more details.
Vanilla now has a chunk loading system, so Forge's will need to be deprecated/adapted.

Actually fix byte array behaviour for openGui.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Fix byte array behaviour for OpenContainer packet

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Clean up the mod loading context objects. There is only one ThreadLocal now.

**BREAKING CHANGE** FMLModLoadingContext is renamed to FMLJavaModLoadingContext.
LanguageProviders can setup additional contextual data.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Implement a GUI packet and GUIFACTORY for triggering from the server.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Merge branch 'pull/5451' into 1.13-pre

# Conflicts:
#	patches/minecraft/net/minecraft/entity/player/EntityPlayer.java.patch

Handle bad formats with an exception. Translators MAKE SURE you watch for this error!

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Handle invalid JAR files more gracefully. Don't crash.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Fix JKS to be stored as binary

Enable https to Let's Encrypt endpoints by using an SSL factory with
the two extra Let's Encrypt root certs installed into an auxiliary
keystore.

The keystore was generated using standard commands, documented in the
FixSSL class.

The Let's Encrypt certificates are not provided by default in Java 8
prior to update 101.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Its 2019. Update licence headers to match.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Fix Terminal Handler and GUI logging on dediserver, hopefully..

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Fix config to use new system properly, without exploding the server.

Separates server specific config into the server config file.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Fix up accidental newline removal that broke the console...

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Fix #5429 properly, without breaking symlinks on linux..

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Move to using Minecrell's terminal logger directly, for better ANSI control and JLine support.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Make a second logger with colour highlighting and control it with a sysproperty:
forge.logging.colourconsole.level (defaults to off)..

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Tidy up modcontainer building and discovery..

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Use a configuration value for the thread count, make it default to
availableProcessors when set to <=0 (default value is -1)

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Revert "Make sure to create entire path for directory, fixes #5429"

This reverts commit 77dd9eb8

This will completely break symlinks on linux.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Port CommandEvent and custom entity selectors to 1.13 (#5411)


Finish off most old patches, fix issue for mounted entities.

Patch direct accesses to Entity.type to use getter instead (#5308)


Tentatively reintroduce a container-opening system

Add synchronized modifier to runtime enhanced enum methods

Add IExtensibleEnum, fix DimensionType create method

Change IRenderHandler to an interface Closes #4640

Made functional interface IChunkGeneratorFactory public (#5395)


Fix leaking unclosed InputStream in Scanner.fileVisitor (#5432)


Invalidate capabilities that we attach to vanilla entities and TileEntities. Closes #5307

'Fix' Specific y-levels in water behaving like you're in air. Closes #5341

Reintroduce ObfuscationReflestionHelper closes #5373

Fixed Crosshair attack indicator texture issue Closes #5442
Add friendlier error message for @Mod annotations with missing mods.toml entry. Closes #5440
Remove Log4J console highlighting. As it doesn't work on many consoles, and prints invalid characters. Closes #5420

Let ItemGroup provide it's own tabs image resource location (#5330)


Allow GuiContainer and ItemGroup to specify slot hover colors (#5332)



Port Minecraft client patch for 'ClientTickEvent' (#5397)


Fix statistics gui crashing when handling input events (#5435)


Properly set context classloader in mod loading threads.

Rework server launching at runtime to include needed default arguments and validate libraries exist.
Move Forge config loading to manual while config system is in development.

Added 'create'-method for EnumCreatureType (#5400)


Fix redstone power calculation (#5433)


Fix wrong grass block being used for comparisons (#5434)


Make sure to create entire path for directory, fixes #5429

Put the FMLModContainer back in it's cage. Delete the ClasspathLocator.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Use the resource pack directly in the GuiModList, skip the resourcepackinfo.

Closes #5418

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Fix inventory items not properly being synced to client. Closes ##5421 & #5417

Expose the ModFile in the scan data, so languages can read it and make
mod construction decisions.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Fix RuntimeEnumExtender creating new enums with incorrect ordinal value (#5402)


Config watching and config events now actually work!
Also fixed small bug with MOD_CLASSES not defaulting to empty string.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

ConfigEvents - the beginning.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Merge branch 'pull/5405' into 1.13-pre

Fix 5408 by making Paths from the default provider (not inside jars)
offer a FileInputStream rather than Files.newInputStream. Fun. Stupid
ancient paulscode.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

More old patch work, cleaned up static methods added to ItemStack, and various networking functions.

Config option implemented

Reimplement update checker

Update for ForgeSPI change, revert back to VersionStatus checking

Bring back the forge beta warning. Use a check to see if the forge minor version is zero, as ForgeVersion.getStatus() is not implemented

Merge branch 'pull/5404' into 1.13-pre

Use recommended approach to applying version data to mdk.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Fix mdk properties - now the mdk offers default console debug logging
with various useful channels for development enabled.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Fixed missed OptionalCapabilityInstance to LazyOptional refactors in patches

Refactor OptionalCapabilityInstance to LazyOptional; clean up

- Move to util package, rename to LazyOptional
- Clean up existing javadocs, add javadocs to everything missing them
- Add more NonNull functional interfaces, and use them everywhere
- Move orEmpty() to Capability, works better here anyways

More logging tweaks, including some aimed at userdev.
`forge.logging.markers=<LIST OF MARKERS>` will enable markers.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Big cleanup of logging. Might do some tweaks of the userdev logging, but this should be good for vanilla..

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Cherry pick mezz's logging improvements..

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Update to 0.9.0 of modlauncher..

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Merge branch 'ichttt-fixDuplicateNamespace' into 1.13-pre

Fix some of minecraft's resources loading twice, as minecraft is on the list of namespaces as minecraft and as an empty string

Fix modsorter to not crash on soft dependencies that don't exist.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Fix resource pack info generator - use the first modid as part of the
pack prefix.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Make MOD_CLASSES available to the forge development environment as well.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Change MOD_CLASSES to support %% separated paths, that are grouped into
<prefix>%%<path> sets. Allows for multiple mods to be located in UserDev.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Fix handing the "minecraft" dependency properly by adding it to the list
of mods.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Send head yaw, use setPositionAndRotation

Add license header

Clean up patch a bit, check for net.minecraft.

Readd modded entity spawning/tracking support

Fix first call to ToolType.get always returning null (#5396)


Fix NPE in ItemGroup concurrency patch

A couple of minor improvements and fixes to ForgeConfigSpec (#5394)

- Use the config file's path instead of the config object in error messages.
 - Print the dotted path of each config key instead of the array version (group.item instead of [group item]).
 - Fix comments causing a config file to be considered incorrect.
 - Pass each list element to the element validator, rather than the whole list.
Add RecipesUpdatedEvent, fired when recipes are downloaded from the server. (#5303)


[1.13] A sweep through deprecations (#5345)


Add a RayTraceResult method to Block that can be can be overridden (#5354)


[1.13] Make Caps, TESR, Entity renderers, and keybinds thread safe to call during parallel init (#5359)


[1.13] Check canSustainPlant for valid ground in BlockBush (#5362)


Repatch missed hasTileEntity redirects. And cleanup related patches. Closes #5369

Fixed fence and iron bars block placement (#5372)


Make ChunkGeneratorType.Settings accessible for modders (#5376)


Make ItemGroup constructor threadsafe (#5384)


Fix item interaction in creative mode. (#5385)


Fix #5365: Some chat messages lose their formatting (#5386)


Fix vanilla trying to load the constants json as an recipe. Closes #5388
Force constant names to use namespace of their json file. To prevent conflicts.

Add recipe types for faster runtime iteration. (#5312)


Fix capability attach event not firing with base type

Port Minecraft client patch for 'RenderTickEvent' (#5329)


Add back several missing patches for FML events (#5390)


Fix dependents not being loaded into mod sorter

Improves topological sort

This can be used for mod sorting, dependencies between registries, etc.
e.g. https://github.com/MinecraftForge/MinecraftForge/pull/4694#issuecomment-412520302

New features:
Now accepts guava graph
Performance improvement: no longer reverse the graph; changed dfs to bfs
Accepets a comparator for secondary order, e.g. natural order, index by map
Now properly reports all cycles in a graph with Tarjan's strongly connected component algorithm
Adds a test to prove the validity of the sort and cycle detection
Modified build.gradle for test source directory and dependencies

Mod loading changes:
Sort mod file info instead of suppliers (we don't have suppliers instances)
Moves cycle error reporting out of topological sort and into mod sorter
Prevent mod file dependencies between mods that share the same file

Signed-off-by: liach <liach@users.noreply.github.com>

Expose a couple of mods.toml properties properly. Half-implemented
override namespace - still needs to be reviewed and determined how this
might work in detail.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Use the reply logical side when enqueing work

When receiving a packet, NetworkDirection.getLogicalSide details where
the packet was the packet was sent from. Therefore, on a client it'll
be SERVER (and vice virsa), and so the work is queued on the sever
thread, instead of using Minecraft.

Use minecraft's util class to open files

Validate mod ids

Fix classcast in autoeventsubscriber, also actually make progression
work properly. This whole thing is a bit of a gross hack.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Fix recipe constants being overridden by a blank map. Closes #5380

Fix case error in AutomaticEventSubscriber

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Tell travis to skip 1.13 builds - they don't work there.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Move Registry Events to the mod event bus.
Add infrastructure to allow parallel or synchronous dispatch of
mod events, and pass-through of events to the dispatch system.

Signed-off-by: cpw <cpw+github@weeksfamily.ca>

Greatly improve DeferredWorkQueue API (#5357)


Add utilities that RuntimeEnumExtender expects to exist

Re-introduce patch for injecting registry mappings during world loading.
And re-introduce registry freezing to ONLY the Register events.
Filter ObjectHolders by registry type and fire between every Register event.

Implement ConfigValue as a wrapper around ForgeConfigSpec results (#5361)


Fix exploded directory locator to actually scan all paths for a file.

Update MDK for new naming scheme

Fix up event naming, move them to sensible packages and document everything a bit.

[1.13] Expand tag deserializer to add optional values and remove values without overwriting everything. (#5350)


Fix mod lifecycle event names

Update a bunch of libs, rename some of the mod events to more
meaningful names.

Add list support to ForgeConfigSpec.
Fix incorrect Supplier used in ForgeConfigSpec.
Port ForgeChunkManager config to new system.
Delete old Configuration classes. It's finally gone!

Add list of so-far skipped 1.12 commits

Add CreativeTabs#getLabelColor

Patch skipped, was already applied in https://github.com/MinecraftForge/MinecraftForge/commit/47a11b9a7e35c2a2273b6828bd802f2cb06f5cd7#diff-0ea0358443c2ecf3b8682228736149b3R71

Allow providing a BufferedImage for banner render generation (#5041)

Ported to 1.13 using NativeImage

Co-authored-by: tterrag <tterrag1098@gmail.com>

Fix Mesa biome entry tags in the BiomeDictionary (#5177)

Patch PotionHelper to use registry delegates (#5142)

Update github stale so issues can be Assigned
Fix MC-136995 - Chunk loading and unloading issue with entities placed in exact positions. (#5160)

This includes three commits from 1.12.x:
https://github.com/MinecraftForge/MinecraftForge/commit/c20a5e8805f64097430cf0722011f20862a8df9c
https://github.com/MinecraftForge/MinecraftForge/commit/93b704b459c6f537d3b1651008c49ce1db2e0ca1
https://github.com/MinecraftForge/MinecraftForge/commit/ee0d43bbde37e258c36de1003436dbe3fcf88077

Scatter gun patches to improve entity tracking and position tracking.
Provided by Aikar through the Paper project, this commit of patches combines the following patches:

https://github.com/PaperMC/Paper/blob/fd1bd5223a461b6d98280bb8f2d67280a30dd24a/Spigot-Server-Patches/0306-Mark-chunk-dirty-anytime-entities-change-to-guarante.patch
https://github.com/PaperMC/Paper/blob/fd1bd5223a461b6d98280bb8f2d67280a30dd24a/Spigot-Server-Patches/0315-Always-process-chunk-registration-after-moving.patch
https://github.com/PaperMC/Paper/blob/fd1bd5223a461b6d98280bb8f2d67280a30dd24a/Spigot-Server-Patches/0335-Ensure-chunks-are-always-loaded-on-hard-position-set.patch
https://github.com/PaperMC/Paper/blob/fd1bd5223a461b6d98280bb8f2d67280a30dd24a/Spigot-Server-Patches/0378-Sync-Player-Position-to-Vehicles.patch

Co-authored-by: Gabriel Harris-Rouquette <github@gabizou.com>

Fix blockstate id map calculation. (#5279)


Move @EventBusSubscriber application to just after construction instead of pre-init.

Make Block.Builder methods accessible. Closes #5310 (#5313)


Fix exception mismatch for entity types (#5344)


Fix datapack walking not working for mod datapacks. Closes #5334 (#5335)


Add missing setSeed calls to ForgeBlockModelRenderer (#5338)


Reimplement @ObjectHolder scanning, and expose system for others to add handlers.
Fix forgedev and userdev run configs.
Fix issue in log functions assuming String arguments.

Fix reference to IForgeDimension.SleepResult being through Dimension, thus causing a Srg2Source issue.
And improper getWorld patch.

Update userdev and runconfigs for ForgeGradle changes.

Fix some translation strings. Will pull a big string update from crowdin too.

Fire registry events before preinit and after construct.

Update to 0.4.0 of modlauncher

Fix classloading properly. ModLoadingClassLoader doesn't work
with the proper delegation model. Abandoned it, in favour of injecting
locators into the Transformer classloader directly.

Fix up some stuff with resource packs, so the guilist works properly.

Update mdk with some tweaks for building

Finish up classloading system. Use ModJARURL to locate resources
and enable ModLauncher to use those instead. This allows all mods to load
within the scope of the game classloader, removing weird conflicts and
class discovery problems.

client and server work standalone and in forge dev. Next up userdev.

Moved some launchplugin code to the launcher. Moved servermain to
the launcher.

server currently needs cmdline arguments  --fml.forgeVersion=24.0.51-1.13-pre --fml.mcVersion=1.13 --fml.mcpVersion=2018.09.12.04.11.00 --fml.forgeGroup=net.minecraftforge.test

fix up some discovery code, and make regular runtime _mostly_ work.
Still WIP and doesn't quite get to main screen yet.

Fix new launcher jar packaging.
Run license checker over new code.

separated fmllauncher code from main forge mod code. This enables much
stronger classloader separation between the two sides. Forge now
loads as a regular mod.

Still needs a bunch of debugging, but structure looks good and game loads
in forge dev.

ResourceLocation Utils for doing things..

Better documentation for IForgeWorldType, TERFast, TERAnimation

Also rename AnimationTESR to TileEntityRendererAnimation

Fix patch mistake in IForgeWorldType: CUSTOMIZED -> BUFFET
Clean progress bar code and fix TextureMap patch (#5304)


Implement GuiScreen events for mouse and keyboard (#5297)


Add the sender to NetworkEvent.Context for server-side event handlers (#5295)


Port most of the world patches (#5294)


Change how Forge itself is located to be loaded similar to a real mod.
Fixes Minecraft/Forge annotation data missing.
Fix Capability injection.

FastTESR -> TileEntityRendererFast

Rendering patches (#5262)


Added JVM argument so lwjgl dll extraction works with unicode os usernames, closes #5282 (#5283)


Change getWorld function name to prevent inheritance change in Chunk

Fix the path handling for mod jar resource packs. (#5228)


Add raytrace logic to the GuiOverlayDebugForge, so that the debug overlay can show the currently targetted block and liquid. (#5278)


Fix typo in patch, that was preventing the key assigned to the chat keybind from working while in a searchable tab in the creative GUI. (#5276)


Fix classloading issues in userdev (and possibly also for things like tests within forgedev) (#5275)


World and TileEntity patch work.
TerrtainGen events are removed, 1.13's world gen re-write invalidates them all.

Create a userdev-specific main, and include it as an injected file in the userdev jar. (#5231)


More entity patch work. ISpecialArmor deleted.

Port some patches to 1.13 (#5267)


Fix vanilla exception mismatch: DataFixerUpper throws IllegalArgumentException but Minecraft tries to catch IllegalStateException instead, causing a hard crash instead of a soft one. (#5229)


Use getRawSchemeSpecificPart to preserve escape characters in uri, fix #5236 (#5237)


world.gen.feature patches, worldgen should be stable with vanilla. In all places I looked.

More patch work, our async chunk loading doesn't appear to be viable for 1.13.

Entity patches progress.

Fix race condition causing the FML handshake to hang (#5222)


Include project group in ForgeVersion and determine path to patched jar.
While testing we install to net.minecraftforge.test. So don't hardcode it.

Item and NBT patches, IShearable blocks are responsible for setting themselves to air, to allow for setting other states.

Most client patches done except the render pipeline.
Someone who has more in depth knowledge of that rendering system will need to do it.

Add my 'patches_old' directory, so that people can see my "progress".
Once the old folder is done, then patches are done.
Want to know whats still to do? Look in that folder.
Now stop asking.

GUI Patches

More patchwork.

Fix imports, remember to re-run gen patches!

Patch work, most of block classes, and fix eclipse run configs.

Add a a test publish stage to jenkins file for PRs. Should allow for full publish cycle test without actually publishing.

Fix crash when placing furnaces or brewing stands in 1.13 (#5225)


Fix changelog classifier, and prevent jenkins from running concurrent builds.
And remove caching from setup, as it doesn't use the rangemap.

Make Forge group/name dynamic in MDK as well.

Include changelog in published artifacts.

Fix jenkinsfile version detection and attempt caching rangemap again.

Fix version number not having MC prefix, and build artifacts.

Workaround for gradle issue with jar signing.

Setup instead of build.

Change checkout process.

Disable tests until we re-make them.

Move cache again, documentation is vague.

Potentially fix cache in Jenkinsfile.

Fix missing quote.

Create jenkins file for new jenkins.
Change version scheme to tag based versions.

Add missing license headers. (#5192)


MDK progress.

Widen scope of gitignored eclipse files

AdvancementRewards 1.13 patch

Fix mod asset loading

Fix diffuse lighting being broken on vanilla pipeline (#5185)


run textcomponenttranslations through the ForgeI18N message format translator as well.

load languages on the server as well as the client, and fix up a bunch of data packs.

Server run profile, also setup logging for client profile.

Tweak library locating code. Works well on vanilla and dev now.

Fix the forge version presented to the game (remove MC prefix)

Move the version packages somewhere that is now filtered so it doesn't
load twice.

Fall colours
🎃🎃🎃🎃🎃🎃🎃🎃🎃🎃

Missing language now presents to the UI.

Better error passing from early to game client launch.

Use the maven artifact code rather than our very outdated copy

Add SHAs for post processors to allow the installer to skip if matching.
SpecialSource needs a update to stabilize output before it can be cached.

Launch in the vanilla launcher now.

More installer related tweaks.

Specify version information using Java 8's Package Version system.

Fix builds without crowdin key, and installer work.
Started moving version out of code.
Include expected vanilla class hashes in universal so we can validate them at runtime.

fix up the examplemod for new FML and add a couple of extra bits.

Use latest paulscode (removes need for soundfix transformer) and fix gitignore.

Branding fixup.

Config GUI tweaks, and MCP is now part of the "minecraft" entry.

Installer work, universal obfed to srg names, and binpatches against SRG named clients.

Fixup the config GUI and get things working again.

Work on installer json generation.

Basic error display GUI.

Work on publishing tasks.
Userdev/universal/mdk done.
mdk needs updating once FG3 user side is finished.
Installer waiting on Interaller project re-write to do install time deobf/patching.

Some tweaks to get the launcher working.

Update mappings to 09/21 snapshots.
Conflict with getMatrix in ITransformation, so renamed to getMatrixVec.

Disable eclipse compiler and switch to SRG patches.

Fix remaining issues preventing compilation, launching, and loading worlds (#5156)

Fix duplicate ID for ingredient serializers
Fix KeyBinding compile errors. No GuiKeyBindingList patches yet.
Implement controls GUI and WorldServer patches
Fixed all compile errors except the 4 in KeyBinding.

More because git likes to split to many

Ran License checker to fix the headers of files missing them.

More work on compile errors, New system for ToolClasses, using a ToolType class instead to de-stringify things.

Block patches and event work (#5138)



Add concept of pushing/poping levels to ForgeConfigSpec as well as comments on those levels.

Fix borked Item patch

Fix the rest of the "easy" compile errors (#5151)

* Add Entity.changeDimension patch and transitively required patches

* Fix throws declaration on CommandSetDimension#execute

* Fix rest of errors in fluid package

* Add PLAYER_REACH attribute

* Fix compile errors in fml.client.config and add GuiButton patch

* Delete unnecessary client.config classes, fix all config errors

* Comment some fluid errors in models

* Fix all errors in common package root, except ForgeHooks

* Mass comment network package

* Experimental conversion of extended states to generic base class

* Fix errors in common.util

* Remove config annotation stuff cuz lex said so

* Make extended state stuff compile fully

Beginning work on redesigning Config API.

More work on recipes, custom ingredients, recipes, and constants should work now.

Tweak to remove javac compile errors related to generics on registries.
Also remove the recipes registry call - they're gone from registries completely.

Net handling pass 2. Tidied up login packet sourcing, generate registry packets.

Net Handshake phase 1. Validates pairings on client and server.

Migrate most of the OreDictionary to tags.

Enforce bounds on min/max registry IDs

Recipe work. No longer a registry. OreDictionary related code removed in favor of Tags. Started moving some OreDict items to tags.
Added code to RuntimeEnumExtender to return existing enum values with the same name if they exist instead of creating more.

Fix errors in commands and getDimension->getId

Revert unintentional change to FG version

Command work, and Added TileEntityType as a Forge Registry.

More compile cleanups. (#5139)


Update MCPConfig to use new ForgeFlower to fix AccessTransformer issues on inner classes.

Fix most of the compile errors in the client package (#5137)

* Add KeyBinding#getKey and clean up errors in KeyModifier

* Add dimension IRenderHandler patches

* Fix most of the compile errors in client package.

The rest are missing Block/KeyBinding patches

* Disable selective reloads until configs are finished

* Add OnlyIn on IForgeDimension to match those of Dimension

Pin MCPConfig version
Cleanup and implement BrewingRecipes
Delete client command related things
Cleanup some biome stuff.

Fix vanilla bug with GLFW init error display - actually the error, not the memory address containing the message

Load natives from the environment var, not hardcoding.

Fix launching in dev

Fix AnvilChunkLoader not having access to chunk cap dispatcher

Add I18n accessor, fix up some mod log messages, make the EnumExtender work.

Port capability patches to 1.13 and refactor to new system (#5134)

* resource package and misc leftover rendering stuff

* Port Item and ItemStack patches

* Extract most item patches to interface

* Refactor Item#setNoRepair to be part of Item.Builder

* Adapt AnimationItemOverrideList to new cap system

* Improve null contract of OptionalCapabilityInstance

* Remove Capability.cast

* Update CapabilityAnimation to new cap system

* Remove OptionalCapabilityInstance#flatMap and add NonNullConsumer

* Add capability patch to Entity, not everything yet

* Fix Entity patch and add missing methods to IForgeEntity

* Fix null contract of CapabilityDispatcher

* Add TileEntity caps

* Adapt FluidUtil to new cap system

* Add world caps

* Add chunk caps

* Clean up cap patches

* Replace all tabs with spaces

* Move builder methods on Item to Item.Builder

Whitepsace fix

* Sided stuff take 2

* Prevent OptionalCapabilityInstance creating additional empty instances

* Cache getCapability result in AnimationTESR

* Fix imports in TileEntity patch

* Pull out cap code to base class, add village caps

Initial blind port of the mod error screens

Porting Forge rendering code to 1.13 (#5132)


Introduce rework of Capability provider. And reduce errors to <2000

Remove old paulscode libraries.
Re-work EnumHelper and ObjectHolder systems to bypass JITer of final fields.
Other cleanups.

More error cleanup, reinstanted IForgeReigstryEntry.
The abstract class will be used as the default, and to enable delegates but we should keep it api simple by keeping the interface.
Removed some patches that didnt get removed in the rebase.

Add some missing libraries and work on GuiIngameForge. Down 700 errors.

Tweak

Network init

Server starts

Patches deleted

Zeroth pass on 1.13

Moving some stuff around, network and server events.

Dediserver runs and talks to clients.

A much more straightforward networking system.

Some beginnings of a network again.

Well, it works, for a game, now.

Some more stuffs. ObjectHolder's replacement?

Things. they work. Obviously still WAY more to do.

more things. Moving ModContainer around.

metadata is dead

Fidgeting while the world burns 🔥🔥🔥🔥🔥🔥

WOW 😲 such broken. Many brokes.

Holy Moly, it's a big fat commit of broken code!

Starting to put the launch itself together

Access Transformer. Starting to try and launch things.

Early signs of modloading

Coremod

Update NewFML.md
Add documentation explaining changes.

Goodbye @Mod, it was lovely knowing you!

Goodbye @Mod, it was lovely knowing you!

Delete MarkerTransformer. I don't think this has been used in years.

Fix --mods and --modListFile arguments not making it past LaunchWrapper.

Remove BlamingTransformer (#5115)


Fix more apache exclusions.

Change org.apache to org.apache.maven. class loader exclusion.

Increase time it takes for Github Pull Requests to go stale
Add variant alias for item models not loaded via blockstate (#5025)


Added getter for children of CompoundIngredient (#5082)


Allow network leak detection level to be specified (#5067)


Fix saved toolbars not working with non-vanilla items (#5063)


Fix server watchdog thread occasionally crashing on first run (#5019)


New SleepingTimeCheckEvent to add yet another way to control sleeping. (#5013)


Allow sending packets to client from ServerConnectionFromClientEvent (#4991)


Fixed overworld spawn point reset when respawning in another dimension (#4982)


Fix ModList cache never being updated (#5081)


Fix loading languages with no underscore in the name (#5105)


Fixed Redstone and RedstoneDiodes placement on modded blocks that use BlockFaceShape.SOLID for Top.  (#5100)


Fix blank Server GUI console log (#5089)


Fix SlotItemHandler.isItemValid check

Improve performance of FluidRegistry.getBucketFluids

Fix received data for last vertex format element not being recorded (#5074)


Fix missing lang entry for Swim Speed attribute (#5064)


Added Swim Speed Attribute to EntityLivingBase (#4990)


Add function to lookup model location for an ItemStack (#5017)


Allow custom SpawnPlacementType registration (#4973)


Resource type sensitive ResourceManager reloading, Disabled by default, but may increase performance. (#4658)


Improve crash report details (#5011)


Fire colour events for mesa and swamp biomes (#5029)


Add functionality in IItemHandler to test if a slot can accept an item (#5033)


Added CreativeTabs#getBackgroundImage (#5034)


Add wooden doors to the OreDictionary. (#5036)


Update and clean up Forge fluid render model (#4763)


Allow configuring log levels using system properties. (#5024)

Defaults are:
-Dforge.logging.mojang.level=info (note that setting this to debug or trace will enable extra debug behavior which may slow things down or detect issues and crash)
-Dforge.logging.console.level=info
-Dforge.logging.file.level=info
-Dforge.logging.debugFile.level=trace
Update README on github to fix the CLA section
Add support for FluidStack-dependant colouring to Forge bucket (#4952)


Use itemstack in LivingEntityUseItemEvent.Finish before it was used (#5015)


Check use item result before calling onItemUseFirst. (#5016)


Clean up and improve ICapabilityProvider javadocs (#4978)



Update license header on ChunkIOThreadPoolExecutor

Fix potential deadlock when chunkload raises non-IO exception (#4861)


Fix MDK not having license texts.

Change some client hooks to use GlStateManager functions (#5010)


Move some test mods into appropriate packages (#5006)


Write full class name in undefined packet error messages. (#4970)


Fix ItemHandlerHelper.giveItemToPlayer creating item entities with incorrect contents (#5007)


Run licenseFormat to apply license header to all files.

Restore original license headers in Maven versioning package

Restore original license headers of delta package

Setup configuration for licenser Gradle plugin

Fix player movement status not syncing across dimension change (MC-10657) (#4974)


Fix some ClassCastExceptions incorrectly being logged in FML handshake. (#4972)


Fix ISpecialArmor to allow for "Unblockable" damage to be handled if the armor opts in. (#4964)


Fix FML entity network spawning not using EntityBuilder's facctory. Closes #4845 and #4846

Fix NPE when sleeping in some custom beds. Closes #4956

Added Fluid Place Block Event for when fluid changes blocks in world. (#4627)

Cleanup licenses

Add Farmland Trample Event  (#4895)


Switch from trove to fastutil collections (#4933)


Added Item#readNBTShareTag(ItemStack, NBTTagCompound) (#4932)


Fix MC-234: Z-fighting when viewing break animation side-on (#4928)


Clean up some dimension manager code and add a command to list dimensions (#4902)


Change item model loading priority to fix model conflicts (#4898)


Improve server console implementation (#4821)


Add validation to recipe registry (#4957)


Fix flickering leaves when mods break the blurMipmap settings (#4997)


Clear out stored errors after model loading finishes (#4938)


Fix AutomaticEventSubscriber error message (#4986)


Always wrap mod creation errors in LoaderException

to make error message more clear

Fix vertex lighter using stale normal data (#4917)


Fix structure template processors causing cascading world generation (#4979)


Fix scala mods crashing with the json annotation cache.

Fix black flickering on animated models by clamping max diffuse lighting multiplier to 1.0 (#4962)


Fix crash from search tree processing invalid recipes (#4942)


Fix names in JSON annotation data not matching expected format. Closes #4953

Bump version in prep for new RB.

Add potential support for models defining 'vanilla like' rotations in Forge's Modified Blockstate format.

Copy the Dedicated server's EULA checking to main() function so it can exit earlier. Closes #3659, #3661

Fix Forge bucket not declaring all texture dependencies (#4930)


Reuse multipart model instances across variants (#4791)


Fix language parsing for creating the java locale

Fixes parameter inconsistency in IFieldWrapper (Fixes #4325) (#4766)


Added formatting support for status messages (#4925)


Fix server-side data not being released (#4882)


Fix memory leaks in EnchantmentHelper (MC-128547) (#4880)


Change composite models to fetch quads from submodels using full context (#4809)


Expand Villager Farmer AI to generic crops. (#4745)


Check name prefix used for tile entity registrations (#4681)


Add an event to control nether portal formation (#4735)


Allow custom models to have per-state lighting (#4732)


Fix some light-emitting blocks letting light through (MC-119932) (#4642)


Preserve original ChunkPos for decoration events. (#4767)


Fix library folder detection on various JVMs.

Add supports for redirects when doing mod version checks (#4826)


Fix imports

Give immediate and complete error messages when there is a crash during startup (#4869)

Revert "Give immediate and complete error messages when there is a crash during startup (#4869)"

This reverts commit a38f5fd6a24297490671cd300b5e4a9020189f63.

Remove invalid optimization in ItemStackHandler#setStackInSlot #3465

Give immediate and complete error messages when there is a crash during startup (#4869)


Clean up mod dependency checking code (#4922)


Fix version range check for required mods #4918

Add javadoc note about minimum required Forge versions for old Forge. Close #4918

Fix possible NPE when calling Loader.getIndexedModList #4919

Fix MC-12269 Various Particles glitchy movement (#4914)


Fix deobfuscator not regenerating super maps (#4856)


Clean up broken aliases caused by registry bug #4894. (#4909)


Move registry snapshot read/write code to Snapshot class. Cleaner code.

Only revert to frozen data on server shutdown on client. Should fix race condition exposed by #4904

Potentially fix issue with BungeeCord or other servers resetting the registry mappings on the client while the game is running.
Errors may still occure if the client knows about world data beyond vanilla. Servers should NEVER send world/registry invocations before they have sent registry mappings.
Closes #4901

Reduce range requirement for World.checkLightFor from 17 to 16 (#4729)


Fix typo in validation of vanilla registry wrappers (#4899)


Fix #4772: add an "isActivator" boolean to powered rails (#4774)


Add checks for undefined packet discriminators when sending messages (#4890)


Fix some code holding client world references longer than needed (#4881)


Don't try to render removed tile entities. Fixes MC-123363 (#4811)


Fix overrides typo in saving registry data. Closes #4894

Fix library path and soft fail when repository root is not found.

Fix libraries not being added to the modlist when using external metadata. Closes #4879

Fix dragon fight not initialising correctly under some circumstances (#4868)


Cleanup some issues with the mod extraction to the memory modlist. Closes #4874 #4875

Improve missing mod dependency error screen (#4762)


Fix biome dictionary's biome type detection (#4878)


Clean up Reader/Writer handling to use a specified charset (#4872)


Suppress firing events at load time if an error has already occurred (#4801)


Fix FluidUtil.getFluidHandler skipping some fluid tile entities (#4854)


Parse contained dependency Timestamp as long instead of int (#4866)


Fix Forge's metadata not being loaded. Closes #4865

Fix mods without ModSide meta value.

Rewrite dependency extraction to use mod list system (#4841)


Bump Forge version for new dev chunk.

Fix vanilla duplication bug.

Slow down Forge chunk gen worker when save queue is to high.
Prevents task from completing while tons of chunks are pending save.
And add minimum notification every 60 seconds.

Add support for World Workers skipping ticks without being removed from the worker list.

Fix MC-88179 in a better way that avoids and closes #4824 (#4830)


Improve the warning logged for cascading world generation (#4725)


New ITeleporter interface making dimensional teleportation easier. (#4602)


Add a FML outbound target for all players tracking a point or entity in the world. Closes #3677 (#4631)


Prevent EntityPlayer.attackEntityFrom from firing LivingAttackEvent twice (#4661)


Add a way to get a list of registered biome types (#4685)


Improve performance of some ExtendedBlockState methods (#4698)


Optimise adding normal element to vertex formats (#4699)


Check for empty dimensions outside of chunk unloading loop, culling worlds without needing chunk unloads to trigger it. (#4704)



Create event for overriding mob griefing flag based on entity. (#4710)


Add description to Error raised by the server hang watchdog. (#4714)


Update ItemHandlerHelper.giveItemToPlayer to allow player who picked up the item to hear the sound as well (#4720)


Fixed Spectator mode particles and sounds computed from where you have been before (MC-46445) (#4728)


Add a WorldProvider#canSleepHere() method to allow providers to control sleeping in beds separately from re-spawning. (#4741)


Fix FMLCommonHandler#exitJava printing useless/wrong calling info (#4742)


Reduce memory usage of model transforms (#4753)


Fix some block connection logic not matching vanilla (#4781)


Fix for the player inadvertently being removed from the Entity Tracker when the chunk they were in unloads after they teleport out of it. (#4784)


Small performance improvement to ItemStack, by using Items.AIR directly instead of getting it from the Block map. (#4786)


Added chunk instance to ChunkWatchEvent (#4805)


Add fences and fence gates to ore dictionary (#4807)


Fix entities sometimes not rendering when out-of-world (#4823)


Fix issues with the test mods

Reorganise test mods into packages (#4706)


Fix servers crashing due to initializer on @SideOnly field (#4825)


Cleaner TileEntityItemStackRenderers, now stored on the Item. Modders should be careful and cache their renderers. (#4700)


Add support for creator mod ID for modded enchanted books, potions, arrows, and spawn eggs (#4810)


Remove Mercurius from optional mods.

Fixed sound engine crash when stopping streaming sounds (#4765)


Merge vanilla pre-decompile annotations with Forge's post-patching. Fixes #4769 Crash detail classes causing class not found errors.

Fix NBT data loss when shift-clicking stacked items in the enchantment table (MC-17431) (#4817)


Update docs for ItemTooltipEvent

Fix some IResources being leaked (#4806)


Fix server console logging issues

Closes #4808

Fix up logging and log4j configuration (#4802)


Make lookupFluidForBlock work for flowing water and lava (#4675)


Patched BlockInfo#updateLightMatrix to use IBlockState#doesSideBlockRendering instead of Block#doesSideBlockRendering (#4798)


Fix integrated server crash not stopping client (#4796)


Fix #4792 TextComponentHelper handling for FakePlayers

Fix serverside startup failure when checking for vanilla acceptance (#4783)


Improve how smooth lighting code handles translucency (#4711)


Prevent various vanilla blocks from loading unloaded chunks (#4689)


Improve the "Mod rejections" error message when connecting to a server (#4761)


Fix the ForgeChunkManager to use the writebehind FileIO thread for writing (#4777)

the chunk file. Closes #4775

This is a performance tweak - doing File IO on the server thread during
world saves causes significant lag spikes. This is one of many.
Fix vanilla crash classes not being preloaded. Closes #4769
Fix classes not being aggregated for mods using the new annotation cache.

Fix incorrect dimension ID being used for maps (#4690)


Don't cull generated item models with non-default transforms (#4749)


Maintain deterministic order in deserialised Forge blockstates (#4748)


Add function to BufferBuilder to directly insert byte data. Closes #4722


Clean up some GUI code and change magic numbers to GL constants (#4734)


Minor cleanup for TestAnnotationParser

Initial implementation of JSON based annotation scanning.
Disabled by default for now, until proven to be fully function.
Enable using -Dfml.enableJsonAnnotations=true

Remove Mercurius from release JSON, Sadly it's dead we may address it at a later date.

Update Github Stale bot message to better explain how to un-stale issues

Bump version for RB.

Change chunk gen command to only keep the target dimension loaded (#4705)


Fix inconsistency between vanilla and modded glass. Closes #4679 (#4680)


New hook in WorldProvider to control client lighting re-checks (#4645)


New hook to delegate some liquid related physics to the blocks themselves. (#4604)


Remove texture loads from SimpleModelFontRenderer (#4721)


Fix some shapeless recipes using damageable items not working (#4713)


Use relative time offset, rather than absolute value, for animations (#4635)


Fixed UV contraction for the texture in the top-left corner of the texture map (0, 0), see sp614x/optifine#1024 (#4703)


Fix some test mods preventing Forge server-Vanilla client connections (#4616)


Fix errors in preInit being lost when followed by a crash in fireRegistryEvents or objectHolder

Added @Ignore to the annotation based Config system. (#4696)


Improve error message on server when a vanilla client connects (#4691)


Fixed pumpkins passing the wrong position to isSideSolid on placement (#4686)


Fix MusicType enumhelper not working (#4682)


Make FluidUtil sounds server-side, add simulate option for tryFill/EmptyContainerAndStow (#4623)


Expose CriteriaTriggers.register, closes #4109 (#4634)


Catch and log exceptions during model baking (#4609)


Fix forge fluids being treated as solid blocks (#4606)


Add MobSpawnerBaseLogic reference to SpecialSpawn and CheckSpawn events (#4600)


Fix default GUIConfig displaying child categories twice (#4599)


Added a tooltip color event. (#4595)


Moved firing the MinecartInteractEvent from individual subclasses up to EntityMinecart, which as a result automatically supports EntityMinecartMobSpawner and EntityMinecartTNT. (#4583)


Add missing check for allowed values to recolorBlock() (#4579)


Avoid copying Forge Registry keys, values, and entries (#4545)


Make async chunk loading a config option (#4544)


Allow WorldProviders to specify in-game music (#4539)


Block::addRunningEffects (#4248)


[1.12.x] Implement hooks allowing mods to add horse armor. Partially addresses #3975. (#3994)



Fix debug flags for ClassPatchManager not working. Closes #3674

Fix FML error logging for mods that crash during FMLLoadCompleteEvent

Minor code and documentation cleanup. (#4664)


Fix dormant chunk cache allowing entity data to be overwritten (#4528)


Fix dimension data not being saved (#4667)


Don't copy state from variant to multi-part model (#4629)


Fix vanilla giant jungle trees causing cascading generation (#4652)


Fix Beetroot crops don't break/drop when trampled (#4644)


Enhance crash message when custom models return null default state (#4615)


Update Github StaleBot config to run on old Issues as well as PRs

Downgrade RegistryEntry's dangerous alternative prefix message to info instead of BigWarning.
This is still most likely a broken mod, but nobody ever actually fixes themselves, and i'm tired of being blamed for 'spamming' the logs.

Fix missing call to release() in the event channel handler (#4513)
 (reverted from commit cd99957627625f7baeff8761c6382b05db9699d3)

Added Custom Slime Block hook for Piston. (#4520)


Add some extra context to Advancements/Minecart/Fishing/TileEntity loot handlers.(#4443)


Adjust light matrix calculations to use per-face logic (#4339)


Fix applyUVLock not preserving input order (#4336)


Adjust diffuse light calculation to match vanilla facing values (#4305)


Fix invalid rendering of single-frame B3D models (Fix #3815)


Fix animation of rotated block parts (#4156)


Fix BakedQuadRetextured not overriding getSprite (#4137)


Added LivingKnockBackEvent event to allow better control over knock back effects. (#4503)


Delay egg creation to avoid null statistics (#4508)


Fix missing call to release() in the event channel handler (#4513)


Reimplemented TileEntity and Entity Update Profiling in the /forge track command (#4521)


[macOS] Fix missing text on loading error screens (#4532)


Don't enforce IPv4 for clients connecting to IPv6-only servers (#4563)


Add an event for registering block/item colour handlers (#4565)


Fix: Anvil Bug with Custom Damage Items. (#4570)


BlockFlowerPot now checks solid top side instead of old method. (#4571)


Fix startIndex for /forge generate position parsing (#4572)


Make vanilla powered rails receive power from mods' custom powered rail subclasses (#4573)


Deprecate passing a class to CapabilityManager::register (#4574)


Add missing nullability annotations to some Forge-added methods (#4578)


Change how chests check if they're blocked. (#4584)

Readd Vanilla Bug: https://bugs.mojang.com/browse/MC-378
Allow EntityFishHook to spawn water particles in all liquids that use Material.WATER (#4585)


Add Sound loading progress bar (#4593)


Clean up capability checking for entities (#4591)


Fix sometimes being unable to extract items from double chests (#4590)


Fix item handler documentation that says returning ItemStack.EMPTY is required (#4587)


Added color as field with setter to Fluid class.  (#4460)


Prevent tooltips from going off the top of the screen.

[1.12] Add Advancement Event (#4467)


Update java docs for IItemHandler. Fix #4553

Restore binary compatibility in EntityItemPickupEvent

Re-enable Vanilla's Shapeless recipe matching.

Fix for the EntityItemPickupEvent having 0 count item when event is fired. (#4549)


Don't force IPv4 network stack if IPv6 is specifically requested (#4547)


Fix more bad shapeless recipe matching. Closes #4557

Version bump for Recommended Build.

Add TAG_LONG_ARRAY to Constants.NBT (#4552)


Create custom shapeless recipe matching system. Should solve #4516 damageable items in shapeless recipes.

Clean up old code for detecting BaseMods. Close #4530 (#4540)


Fix BufferBuilder not expanding under some conditions. (#4538)


Add support.yml for support bot on github.

Fix errors caused by multi-target messages sent from LAN host (#4536)


Fix server icon response leaking buffer (MC-122085) (#4534)


Fix CompoundIngredents not working properly in shapeless recipes.

[1.12.x] Added BucketUse event to ForgeUniversal Bucket (#4454)


Non-player entities now respect WorldProvider.getMovementFactor, closes #4470 (#4471)


Fix entity spawn messages not handling buffer correctly (#4524)


Make Ingredient explode wildcard values like OreIngredient.
Fixes some issues related to Grums order fix for Shapeless recipes.
Other more advanced usages need to be documented and tested.

Fix server incorrectly marked as stopped before forge's handleServerStopped() (#4517)


Fix network buffer leak with multi-part messages (#4511)


Fix buffer leak in vanilla custom payload packet handling (#4512)


Fix network buffers not being released in some places (#4510)


Fix resource loading on some mac systems when SplashProgress is enabled (#4082)


Fix MC-51150 (#4495)


Fix incorrect lighting of item models (#4493)


Change item model alpha tests to match values used for rendering (#4490)


Fix NPE when player tries to sleep without bed (#4487)


Added tint index of 0 to fluid models (#3938)


Fix FastTESR quad sort (#4298)


Fix the incorrect matching algorithm in ShapelessRecipes and ShapelessOreRecipe (#4472)


Fix BlockDynamicLiquid using mismatched state/position pair (#4501)


Fix more test mod warnings (#4477)


Add LivingDamageEvent (#4349)


Create IRecipeContainer interface and implementation to allow RecipeBook to work on custom GUIs (#4480)


Add InputUpdateEvent (#4356)


Added a cloud renderer that uploads geometry to the GPU. (#4143)


[1.12] Replace ThrowableImpactEvent with a more generic version (#4040)


Clean up BlockSnapshot code (#3737)


Fixed property losing state after rename. (#4123)


Fix GameData#revert ignoring RegistryManager parameter (#4232)


Allow custom selector types to be defined (#4259)


Clean up more deprecated library functions (#4283)


Improve performance of World.collidesWithAnyBlock (#4286)


Move reach distance to an attribute (#4331)


Resolve a crash relating to plantFlower when biome has no flowers (#4381)


Improve the Forge Bucket (#4435)


Prevent fake players from making advancements (#4438)


Further reduce quad count of generated item models  (#4448)



Fix killing blow causing combat tracker to lose data (MC-121048) (#4452)


Recalculate chunk height map minimum on load (#4453)


Changed BlockFluidBase "fog" color use color from Fluid getColor() method (#4462)


Improve performance of inserting into inventory wrappers (#4468)


Fix some locations where State Sensitive Materials were not used. Closes #4474

Add caching of data for flat lighting (#4358)


Fix spider/chicken jockeys being unable to spawn naturally (MC-103516) (#4429)


Clean up Forge commands. Add HelpCommand. Fix #4444 (#4451)


Fix some more test mod warnings (#4469)


[1.12.x] [Animation API] Add rotation origin variable (#4466)


Fix some warnings produced by test mods (#4456)


Fix performance regression in FastTESR rendering

Fix outdated VersionParser javadoc link

Add configuration for probot-stale for github

Update mcp mappings to 20171003

[1.12] Add support for client & server dependencies for mods (#4403)


Add Item.getModId to show which mod is associated with a subitem (#4330)


Add Chunk capabilities (#4228)


Fix some chunk data packets being created unnecessarily (#4414)


Improve performance of vertex format mapping by caching hashcodes (#4370)


Reduce the number of quads generated by ItemLayerModel (#4332)


[1.12] Check both hands for sneak interaction bypass (#4256)


Allow item models to use formats other than ITEM (#4273)


Fix being unable to see with night vision under some conditions (#4383)


Fix block and torch placement logic not matching vanilla (#4210)


Add hook to configure EntityEquipmentSlot for item.

Store entity data for dormant chunks using NBT (#4162)


Allow for MapDecoration to use alternate rendering, for example a custom spritesheet (#4027)


Remove limitation of Shaped crafting recipes not being used on grids larger than 3x3

Fix not being able to write in a blank, renamed Book and Quill (#4433)

https://bugs.mojang.com/browse/MC-1685
Add new /forge entity list command for displaying a list of all entities in world.
As well as tracking down chunks with large amounts of entities.

Fix test mod shield JSON incorrect bottom face UV's (#4295)


Prevent a mutable BlockPos leak in World#setBlockState (#4388)


Fix IngredientNBT comparing stackSize when checking if ingredient is valid (#4418)


Auto-detect registry namespace when using a legacy string id in EntityEntryBuilder fixes #4410 (#4411)


Introduce entity entry builder, useful in the Register<EntityEntry> event replacing needed calls to EntityRegistry. (#4408)


MC 1.12.2 update.

Fix lightmap calculation vertex clamping (#4387)


Fix chunk gen mobs not firing the CheckSpawn event. Closes #4394 (#4396)


Add an extra error check for OBJ model materials (#4402)



Fix up test mods (#4399)


Add new /forge gen command to generate large amounts of chunks.
Usage: /forge gen <position> <count> [dimension] [notifications]
Position is in Block Coords, and can be relative to the player. These will be converted to chunk coords for you.
Count is the number of chunks to load. This is not a radius, actual total number of chunks.
Dimension is optional, you can use this to pregen other worlds.
Notifications is the chunk interval to inform you of the generating progress. This is optional and will be 5% or 100 whichever is higher.

Added new config option to modify vanilla world gen to fix various cascading issues. MC-117810 MC-114332 and more.
This WILL change block placement from vanilla world gen. So this is a opt-in value. Do not report differences in worlds with this flag enabled.

Fixed ShapedOre recipes not laying out correctly with the guidebook.

Fixed search tabs using wrong contents. (#4393)


Bump version for RB.

Fix #4386 Race condition when unloading chunks causes dead tile entities

Patch block model renderer to use location-aware light value (#4303)


Improve generation of normals for vanilla models (#4313)


Fire RenderGameOverlayEvent for vignette (#4360)


Fix light sources rendering wrongly with night vision (MC-58177) (#4365)


Fix CustomModLoadingErrorDisplayScreen not being handled during init or preinit. (#4320)


Insert FML handler before Vanilla connection handshake completes (#4380)


Add missing bounds checks to ItemTextureQuadConverter (#4343)


Allow custom GuiEditArrayEntries without having to recreate the object in several places (#4329)


Add support instructions to be displayed when creating an issue on Github (#4323)


Adjust float (un)packing functions to be slightly more accurate (#4316)


Fix vanilla map pixel data being used in various places (#4068)


[1.12] Remove patches adding chunkExists() function, switch to vanilla code (#4054)


Added missing MapGen types to the InitMapGenEvent (#4322)


Fix nether wart, pumpkins, and melons passing the new state as the original state to CropGrowEvent.Post (#4377)


Fix FieldWrapper.MapWrapper initialising wrong category (#4335)


Don't parse category names as regular expressions in FieldWrapper.MapWrapper (#4334)


Fix issue saving observers using different metadata then vanilla.

Fix netty warning spam when sending >1MB packets (#4363)


Fix FML handshake crash, fixes #4285 and #3974 (#4304)


Fix recipe book auto-fill not working for OreDictionary ingredients.

Fix KeyBindings reset buttons being inverted.


Fix for dummied server side registry entries while client has read entries.

Tabulate crash report mod list and add signature information (#4251)


[1.12] Fix wood plank ore dictionary recipes (#4310)


Fix UnknownFormatConversionException during erroring TE/Entity removal (#4312)


Add support for server side only recipes, as well as detection of vanilla client recipe book filter to prevent errors.

Fix typo in CapabiltyFluidHandler (#4306)

Fix splitting big packets skipping one byte per additional part (#4301)


Fix tests

Add PlayerSPPushOutOfBlocksEvent. (#4091)


Add Ability to Override PotionEffect Default Sort Order (#4172)


Add support for oredict item predicates in advancements, and add a registry for item predicates (#4188)


Add support for running IModel.retexture() on models from blockstates (#4200)


Fix invalid FastTESR quad ordering (#4267)


Continue loading mod recipes and advancements after encountering an error (#4277)


Add a hook to allow world providers to change the lightmap colours (#4279)


Fix MC-117075 lag spike when unloading many tile entities (#4281)


Better descriptions on dependency version range error screen (#4284)


Filter out scala libraries in forge dev workspace.

Fix IOUtils import error caused by server/client libraries desync.

Fix odd NPE with list files for empty directories.

Fixed missing line in logger.

Cleanup some output and move the Jar-In-Jar extractor to before any coremods/mods are loaded so.
The intention is to rework this entire thing to use maven style storage, IF we can get Mojang to pass in the Libraries folder.

Lex doesn't like this.

Revert "Fix up MC version compatibility checking to be a little less verbose."

This reverts commit 1927fd76e20a1b3075cb841b09c2caeb57ebd242.

Fix up MC version compatibility checking to be a little less verbose.
If people use properly formatted version compatibility strings, or the
default compiled in one, this will work exactly as before, but has
less dependence on specific formats for the mcversion string. So a mod
declaring [1.11, 1.12] will now be 1.12.1 compatible by default, for
example.

1.12.1 Update, Not much modder facing changes, 1.12 mods should load and run fine on this version.

Add smarter getter for block slipperiness (#4116)

Fixed MC-119811, Boats rubber banding when dismounted. 
Add GuiContainer Foreground render event. (#4127)


Use ClassValue to store tileentity names for profiler in lazy cache.  (#4021)


Move client-only config options to client config (#4084)


Added CriticalHitEvent to allow more control over whether a attack is a critical or not, and what damage it does.


Fix stacked entity item rendering using the wrong transform for the extra items. (#4158)


Fix lopsided 'V' in FML icons. (#4179)


Added pages to the advancements GUI to allow for unlimited root advancements. (#4183)


Ignore neighbor changes for comparators on the client (Vanilla behavior) (#4186)


Fixed bug where config categories errored if they contained regex special characters. (#4187)


Allow sneaking to bypass villager interaction GUI. (#4193)


Clean up Block.getLightValue(IBlockState, IBlockAccess, BlockPos) (#4203)


Make LivingEntityUseItemEvent not abstract (#4208)


Replace hardcoded block check with isTopSolid method call for placing button/lever (#4212)


Added support for oredict dyes to Fireworks, Armors, and Shulker recipes.  (#4223)


Limit some server to client update packets for Item Capabilities (#4252)


Fixed Armor bar disappear after changing dimension. MC-88179 (#4265)


Fix the firing location of InputEvent.MouseInputEvent (#4270)

Fix some broken test mods (#4245)


Fixed swapping of finite fluids with negative densities. (#4237)


Fix overrides not being read from the server registry snapshot (#4224)


Fix some test mods crashing server caused by model loading (#4225)


Fix FML handshake race condition, fixes #4219 (#4220)


Prevent player from dying infinitely due to zero max health (MC-119183)

[1.12] Allow the server to handle item-block interaction if onItemUse doesn not return PASS (#3967)


Allow support for custom Shields and Shield disabling weapons.


Make Optional.Interface repeatable (#4138)


Log a warning if a coremod does not follow best practices (#4146)


Ignore fortune for anything but seeds in crops (#4160)


Added support for vanilla "nbt strings" in json recipes (#4113)


Fix tripwire statemap not being complete when mappings change. Closes #3924

Fixed invalid erroring case during loading Advancements form mods that don't have advancements.

Fixed issue where rendered held items wouldn't properly update when the reequip animations isnt shown. Closes #4175

Send remap event when data is frozen to notify modders to bake things.
Fixes search not working when connecting to vanilla servers.

Fire recipe registry event after json recipes are loaded.

Clean up uses of deprecated library functions (#4130)

Avoid catching and rethrowing runtime exceptions
Append error messages to exceptions instead of the log
Remove unneeded block patches (#4167)


Improve javadocs for Mod dependencies (#4168)

Stop "Binary patch set is missing" error log in dev environment

Add basic Github issue template

Fix errors in test mods

Remove unnecessary maxStackSize restrictions on brewing potions. (#4155)


Fix game freeze when resizing the window too small on the mods gui (#4148)

Adjust EnumHelper#addCreatureType to EnumType (#4089)


Allow advancement icons to have nbt (#4114)


Attempt fix, or at least better debugging for RecipeBook accessing unknown recipes.

Fix MC-68754, Screen is not resizeable after exiting fullscreen due to LWJGL bug

Use Item's custom FontRenderer for tooltips in the Creative Gui (#4101)

Fix Recipe Toast crash when granted more than 5000 recipes (#4124)

Throw packet encoding exceptions instead of suppressing them, to prevent corrupt packets (#4144)


Quiet down warning for missing translation files.

Update JOpt version on the dedicated server to match client.

Fix getting missing models for overridden Item registry entires

Fix override duplication caused by bad comparison.

Fix log spam when creating dummy blocks.

Include location of the call when a mod uses System.out or System.err (Fix #4135)

Fix unblockable damage being blocked by armor. (#3933) (#4106)


Improve furnace fuel handling (#4083)


Add isSpawner parameter to the CheckSpawn event (#4075)


RenderLivingEvent now stores partialTick


2


Fix missing messages of missing models (#4120)


Correct the default resource location of potion registry (#4117)


Version bump for RB

Added Block::getFogColor to allow custom blocks to control fog colors while inside them. (#4090)


Optimize ExtendedBlockState.getClean, cache the return value instead of calculating it. Closes #3936

Squelch spam in EventBus register, Closes #4102

Add @ObjectHolder scanning to vanilla MobEffects, Biomes, Enchantments, SoundEvents, and PotionTypes constants. Closes #4104

Use java 8 collection functions

Use lambdas for short anonymous methods

Use multiple catch, try-with-resources, replace system.out and e.printStackTrace

Fix the creative menu search function. Closes #4100

Fix MissingMapping REMAP action. Closes #4069

Repopulate client SearchTreeManager when registries are refreshed. Closes #4094

Fix Biome unit test

Add support for loading mod advancements from the mod jar files.

Fix error when using RegistryBuilder and not specifying a max id number.

Allow the recipe registry to be modified.

Fix BiomeDictionary not collecting correctly.

Remove incorrect call to .toString() when instantiating custom config array entries. (#4078)


Remove outdated patch to BlockDoublePlant

Fix substitution tests

Remove some deprecated methods and clean up

Remove the call to client.refreshResources during loading (#4032)


Added dependencies and dependency ordering for textures. (#4070)


More work on registry override ability. Closes #4079

Fix ItemStack/Block/BlockSpecial not applying at runtime.

Add a FluidUtil method to interact with an arbitrary IFluidHandler (#4080)


Further Java 8 cleanup (#4077)


Fix missed side only on BlockFlower

Fix ModelBlockAnimation expsing a private class.

Make Block.getSubBlocks not client side only.

Cleanup of model system, taking advantage of java 8;
replaced guava Optional and Function with java 8 versions.

Reload client recipe book after loading modded recipes.

Make Dummy block an Air block.

Fix NPE in MissingMappings event. Closes #4067

Make getSubItems non-client only. Use it for Ingredient iteration.

Fix Emerald generation causing chunk loading.

Fix minecraft:item_nbt ingredient type.

Add Block.getDrops that uses NonNullList, deprecate the old method. Fix #3567 (#3778)

Remove arrival/departure message methods from WorldProvider (#2733)

Clean up logging

Use instanceof ItemFishingRod instead of item equality (#4060)


[1.12] Cleanup of files with old licence headers, Add missing LGPL 2.1 licence headers (#4051)


Fix uncaught ClassCastException from invalid recipe file (#4043)

A JsonSyntaxException will now be thrown, caught and logged when the conditions property of a recipe isn't an array
Fix onBlockClicked handler firing twice and Item.onArmorTick in the wrong place (#4037)


Update MCP to 20170624

Remove Java 8 warnings now that Minecraft requires it

Fire AnimalTameEvent for parrots (#4003)


Make ForgeRegistry iterator sorted. Closes #4058 (#4059)


Loosen up registry locks until data freeze.

Fix conflicts

Implement override tracking and syncing.
Overrides MUST be registered within a tracked event so we know what mod it came from.
This will allow servers/saves to select which mod 'wins' and becomes to active entry.
This should also mean that when connecting to a vanilla server things will revert.

Disable substitution test, substitutions are not managed the way they used to be.
We do not care about substitutions, People who replace entries should make them compatible with the existing item.

Fixup some registry tests, dummies are now persisted across syncing.

More work, game loads and runs now.
Moved Registry events to directly AFTER PreInit instead of before.
This allows modders to register handlers for it without @EventBusSubscriber.
It also allows you to register custom things needed before the construction of blocks or items such as Fluids.
TODO: Move Fluids to a real registry.
@ObjectHolder can now be used on private fields.
Reworked FMLModIdMappingEvent to include data for all registries.
Tile Entities are now registrable.

First pass of registry rewrite.
Tests do not run yet.
Things of note:
Removed the idea of substitutions, just register multiple items with the same name they will override each other like a normal map.
Decoupled Forge registries from vanilla classes. They now use bouncer classes. MODDERS SHOULD NEVER USE THESE
Introduced more stringent registry locking. As it sits things are only allowed to be registered during the RegistryEvent.Registry phases!
This is to force modders to split up their registrations, and pave the way for calling these functions multiple times during a single MC lifecycle.
ObjectHolder, Missing Mappings, etc... *should* now work for all registry types, nothing should be special cased to Blocks/Items anymore.
Added optional generic dummy factory to registries, to allow registry creators the ability to dummy more then just Blocks.
Re-worked the ItemStack transformer and applied it to ItemBlock and ItemBlockSpecial. Allowing us to cleanup reflective hacks in Block callbacks.
Registry onAdd callback is now only fired on the ACTIVE registry, fixing any issues of temp registries overriding active objects.

Fix Universal bucket handling for Fluids with NBT (Fix #3757)

Clean up Logging (#3953)

# Conflicts:
#	patches/minecraft/net/minecraft/client/renderer/texture/Stitcher.java.patch
#	patches/minecraft/net/minecraft/client/renderer/texture/TextureMap.java.patch
#	patches/minecraft/net/minecraft/entity/EntityList.java.patch
#	patches/minecraft/net/minecraft/tileentity/TileEntity.java.patch
#	src/main/java/net/minecraftforge/oredict/OreDictionary.java

Fix ShapedOreRecipe matching. #4038

Fix recipe names in packaged jars. Closes #4039

Update NoteBlockEvent with new instruments. Resolves #4018. (#4019)


Fix Chunk  patch (#4036)

IRecipeConditions forge:and and forge:false (#4017)


Fix patches in Chunk and Explosion (#4036)

Fix itemstack comparison with null

Fix loading recipe jsons from jar files.

Fix shapeless recipes not being able to use NBT on output, and fixed issue with null groups.


[1.12] Fixes Exception when getting modlist for a vanilla client (#4028)


Remove unused patch to ItemRecord. Closes #2686. (#4035)


Log info on Travis tests

Disable TestNetworkHandshake to make Travis work again

Add timeout to TestNetworkHandshake setup

Add missing Override annotations

Update MCP mappings to 20170617

Update mcp mappings to 20170611

Clean up ShapedOreRecipe and ShapelessOreRecipe

Allow condition factories to be registered from JSON (#4015)


Patch a small bug in SPacketLoginSuccess that lets us emulate the network
handshake. This will be very useful as I rebuild the networking.

Filter any recipe starting with _, Such names are reserved for metadata.
Actually implement conditions for recipes.

Fix NBT ItemStack support in json loader. Closes #4002

Fix OreIngredient comparing items in reverse. Closes #3999

Make registries persist by default, fixes #3989 (#3998)


Fix exception in ShapedOreRecipe.checkMatch for recipes that don't fill entire crafting grid (#3995)


Fix parseShaped missing Empty slot item. Closes #3990

Fix CraftingHelper.parseShapred error. Closes #3979

Fix NPE in config menu with custom keybinds. Closes #3985

In-progress Registry system enhancement.
Needs cpw to take a look at enabling removing/overriding in the registry stuff.
But in theory it loads json recipes for mods now.

Update ASM for 5.2, and host it on Forge's maven now.

Update VanillaRegistryTests

Try a different way of doing the callback, it removes the derpitude, but at
one point, I thought the way it was was necessary. Is this a race condition?
Dunno, but it's a lot simpler and doesn't rely on a netty hack.

Fix the netty bug introduced by netty commit https://github.com/netty/netty/commit/29fdb160f33776c76f0b46aada48a9c9f3babcbf
that means we don't get activated until after handlerAdded is complete.
In effect, our handler can't handle anything until handlerAdded has
completed.

Initial patch update to 1.12.
Some things to note:
Netty is screwy so currently can't join single player. @cpw
Crafting has been MAJORY reworked. The current GameRegistry functions are nooped, this is IN THE WORKS.
  Just need to move the recipe list to a full class registry, and then re implement the in-code recipe registration.
  Also, it IS advised that modders move to JSON, because ideally we'll see a S->C recipe syncing system in 1.13
  which would allow servers to have custom recipes.
  OreDictionary currently 1/2 works, need to write a better algorithm for replacing ingredients.
  Please be patient
Rendering:
  A lot of functions got a new float parameter, this is similar to partial ticks, needs more research

Fix getShareTag replacing data on the server (#3776) Closes #3682


Fix crashed caused by bad mods reflectively breaking the grass drop list. Closes #3943

Fix shaders not loading from mod domains Closes #3921

Clean up MapData patch (#3905)


NBTTagList implements Iterable<NBTBase> (#3884)


Fix canRiderInteract being called on the wrong entity (#3934)


Changed Event.setCanceled To throw UnsupportedOperationException instead of IllegalArgumetnException when called on a non-cancelable object (#3926)


Make Teleporter fields accessible to subclasses (#3930)


Deprecate vanilla getExplosionResistance and properly annotate the forge replacement (#3929)


Make World.isValid and World.isOutsideBuildHeight public (#3919)


Clean up formatting of Forge Test mods and disable noisy ones (#3908)


Fix broken milk bucket model (#3925)


Fix patches of GuiScreen(#3704) and ItemDye(#3736) (#3878)


Make hopper update accessible to subclasses. Closes #3849

Update EntityPlayer armor calculations and ISpecialArmor (#3838)


Tweak vertex lighter to avoid causing excess array initialisations (#3771)


Fixes for PlayerDestroyItemEvent being called with empty itemstacks. (#3728)


[1.11.2] Added support for Village capabilities (#3648)


Fixes BlockLiquidWrapper placing a Static fluid where it should place a Flowing one (#3893)


Disable frost walker enchantment on anything but vanilla water (#3906)


Fix head being angled badly when riding mobs. Fixes MC-1207 (#3901)


Print system details on startup without printing a full crash report (#3909)


Reduce memory pressure from new objects during loading screen (#3907)


Add methods to write IForgeRegistryEntry to ByteBuf (#3806)


Fix normals not being generated for formats without normals (#3896)

Fix normals not being generated for formats without normals

Fix MC-117087, prevent calling Class.getSimpleName on TEs unnecessarily (#3873)


Add a configurable delay when unloading dimensions, fixes #3455 (#3679)


Changed custom entity selectors from event based to factory based. (#3579)



Create ItemFishedEvent, the event is cancelable, but items are not mutable. Use LootTables to control that. (#3705)


Fix forge pipeline block shifts (#3789)


Add pack.mcmeta to examplemod (#3813)


Relocate TileEntity#onLoad call to after it's added to the world instead of the chunk so as to have a valid world reference (#3836)


Improvements to FluidUtil (#3839)


Allow client commands to control whether they can be invoked without prefix. (#3847)


When the window is closed during loading, exit the game quickly (#3858)


Remove splash.properties option for Mojang logo (has been disabled) (#3859)

Fix backgound color being applied to the Forge logo
Fix GuiMultipleModsErrored ignoring scrolling with mouse wheel. (#3861)


[1.11.2] Fixed Zombie Villagers not setting and getting professions correctly (#3678)


Prevent NPE in ConfigManager and fix config gui being enabled for all mods. Fixes #3856. (#3860)


Fix return value of ItemHandlerHelper.insertItem being incorrect when destination was null. Closes #3840

Fix vanilla inventory wrappers not properly calling markDirty. Closes #3854 and #3810
Also updated IItemHandler javadocs to reflect returning EMPTY instead of NULL.

Add in a check to the splash screen. If the Display.update call takes
too long on average (over first 200 frames) we'll use a sleep based
timer to allow mods doing splash screen work some time on the
LWJGL global lock.

(cherry picked from commit 03d7eaa)

Cleanup AccessTransformer debug output

Fix NumberFormatException being thrown for empty ItemStack deserialization
Thanks @gabizou, 1.11.2 version of #3830

Fix Fluid models rendering with gaps (#3747) Closes #2993


Fix mutable blockpos leak MC-114281 (#3742)


Fix typo in LootEntry.Serialiser causing incorrect serialisation. Closes #2757, Fixes MC-115407 (#3823)


Fix invulnerable items becoming invisible client side MC-53850 (#3807)


Add Item.canDestroyBlocksInCreative() allowing more items to not break blocks in creative (#3805)


Ignore calls to sendMessage for fake players. Fixes #3796. (#3798)


Fixed HarvestDropsEvent issue by fixed-length lists on getDrops (#3778)


Add GenerateMinable event for mesa gold (#3774) Closes #3738 


Skip loading models if there is a fatal mod dependency error (#3772) Close #3768 


Add AnimalTameEvent for handling animal taming (#3763)


Added missing bounds check to ChunkCache.getBiome (#3752)


Allow result of PlayerInteractEvent to be changed when it's cancelled (#3744)


Add EnumHand and ItemStack to BonemealEvent (#3736)


Added a boolean flag for disabling Entity onUpdate (#3731)

The flag is false by default, and if true the Entity will not update. It is saved and loaded from NBT, and is called updateBlocked. Modders are responsible for managing this flag for entities they with to 'freeze' or 'unfreeze'.
Revert block snapshots in reverse order. Fixes #3608.


Add LootTableManager to the LootTableLoadEvent (#3717)


Fix EntityFallingBlock check for ITileEntityProvider (#3711)


Added ClientChatEvent. Closes #1442 (#3704)


Fix custom array entry class for config GUI being ignored when adding new entries (#3697)


Use thread groups to detect the effective side (#3644)


New LivingDestroyBlockEvent for controlling if some entities can destroy blocks (#3628)



Fix breaking particles on dedicated server. Closes #3825

Fix arrays in map values for config system

[MC-2518] Fixed missing break sound and particles. Closes #3821

Fix java 6/7 compatibility in GuiConfig (#3824)


[1.11.x] Fix blank tab in creative inventory when additional tabs evenly divisible by 10 (#3817)


Adding config GUIs to the @Config based configuration System (#3735)

Lots of internal API that modders should not touch. See test mods for example usages.
Fix vanilla bug where player reputations villages were reset on read.
Deprecated Username based API in favor of UUID based API.

Add setter for default key in RegistryBuilder. Closes #3804

Fix error when reading world info for old saves with missing dimensions. Closes #3786 #3331

Detect and log cascading chunk generation issues during terrain population (#3756)


Fix duplicate achievements getting added to the achievement list (#3770) (#3779)


Fix #3733 Splash Screen memory bar background matches screen background (#3775)


Add additional constructors to EnergyStorage to set values at load time.


Fix parameter-names for WorldProvider.shouldMapSpin (#3767)


Fix MC-112730 TE global renderer duplicate render (#3651)

* Fix TE global renderer duplicate render

Fix entity write catch block (#3726)


Fixed TESR items not rendering correctly before entering world (MC-112292) (#3666)

Fixed crash when rendering text in TESR items before entering world

Fixed 'reset to defaults' button not working on some Forge config fields.


Add DifficultyChangeEvent (#3525)


Allow mods to set other default "home dimensions" for respawning. (#3528)


Persist PotionEffect curative items and initialize defaults from Potion (#3573)


Added Forge slot methods to creative container (#3581)


Restore missing Biome GetWaterColor event. Closes #3164. (#3625)


Fixed Missing Furnace Fuels (#3627)


Fix @Config.Comment not working on subcategory Objects. Closes #3593

Prevent concurrent modification of ClassInheritanceMultiMap (#3632)


Improve exception messages during initialization.


Fixed ChunkCache.getTileEntity creating tile entities off world thread.


Start firing AttachCapabilitiesEvent<ItemStack> (#3645)


Add @Name annotation to config system allowing you to use custom key for value.
Also added category option to root config to allow customization. See examples/docs for information.

Fixed Flower Forests not having proper flowers. Closes #3652

Fix Poppy to Dandelion ratio

Fix forge:default-item missing case for FIXED transform (#3663)


Add implementation for Living Attack event on client-side for players (#3667)



* Fixed unused import

Fix bug caused by ItemMinecart patch (#3672)


Make getRGBDurabilityForDisplay use getDurailityForDisplay by default. Closes #3670 (#3673)


Add a null check for the throwable message in NetWorkDispatcher#exceptionCaught (#3688)

(cherry picked from commit 1be1bb59c5c4c7432c515ef07beb6bf7e1f6ef27)

Use Forge setting to determine baby zombie chance. Fixes #3690. 


Properly fix IShearable implementation. Fixes shears taking damage twice, mooshroom particles, and blocks dropping incorrect loot.

Fix English injection for some mods on dedicated server.

Fix hoppers being able to insert shulker boxes into shulker boxes.

Override Mojang's new logging config to re-enable our logging to text file.
The new launcher's GUI for logs WILL NOT WORK until they add support on their end.

Fix for bad decompile process on Particle.java that causes onGround flag to not get set properly as well as motionX and motionZ not being set to 0 when their axis has collision happening (#3716)


Fix ClientTickEvent Post firing inside another profiler section (#3715)


Fix Item.doesSneakBypassUse being applied incorrectly.


Added check for quad builder to always have the particle texture set, and fixed where that wasn't true. Fixes #3653

Stop rotation of extended pistons, beds, and double chests Fixes #3634 

Fix rotation of repeaters and comparators

Fixed TileEntity#getRenderBoundingBox not offsetting correctly causing more TEs to render then needed (#3709)


[1.11.2] Make AbstractSkeleton implementable by fixing limited access on getStepSound (#3702)


Fix extracted mods crash report file name for Windows (#3701)


Remove dynamic lambda methods when inside of SideOnly methods

Clean signatures of ReflectionHelper methods.

Fix spawn-fuzz formula (#3695)


Fix world spawn fuzz. (reverted from commit 450c3a80c10c1dc27ef68a3f5e5f58af6a827fde)
Protip Don't code while groggy.

Fix world spawn fuzz.

Fix some cases where world time is not passed through the WorldProvider. (#3685)


Fix addTypes not adding in the base types. (#3681)


Replace listSubtypes with listSupertypes to match the intended behavior. (#3564)


this finaly fixes #2866 (#3656)


Fix MC-111753 (#3655)


Fix default missing model zoom text not being set to false on all places.

Small bugfix in lighting logic.

Added the variant name to the missing model. (#3328)


Fix #3635 MC-103403 fix ingredient count for ingot block recipes (#3640)


New client config option to force all chunk rendering off the main thread.
This may help FPS issues, but may also result in world holes/rendering issues.
Also fix Forge configs not saving properly.

Cache entity constructors for a small performance optimization

Bypass forge chunk cache if it's configuratively disabled

(cherry picked from commit 9fe6385)

Fix category comments not working. Closes #3593

Fix Biome#getSpawnableList returning an empty list for non-vanilla EnumCreatureTypes (#3611)


Skip first baking in ModelLoader (#3621)


Allow block to specify their type for AI pathfinding (#3546)


Fix vanilla bug MC-98707 (#3565)


Improve performance of inserting into inventory wrappers (#3622)


Add missing patch to ItemStack isItemStackEqual (#3577)


Add Iron Nugget to OreDictionary (#3571)


Fix ContainerRepair patch to prevent NPE (#3553)


Fix DungeonHooks method to use correct type (#3587)


Removed an unsafe usage of `EntityMinecart.getType()` (#3592)


Fix #3576 Unnecessary warning about totem being renamed (#3614)


Fix milk not working on anything at all (#3574)


Fix #3596 Close jar sources safely in Java 6 (#3597)


Clean up null issues, add more annotations (#3590)


Small cleanup for PlayerInteractEvent (#3563)


Fix and clean up ItemBow.onPlayerStoppedUsing() patch (#3555)


Fix IItemHandler's IStorage using nulls (#3580)


Fix null check in BrewingRecipeRegistry (#3584)


Fix a couple more ItemStack null checks (#3586)


Use travis_wait to extend the timeout on gradlew build (#3610)


Fix super call to ItemOverrideList constructor inside AnimationItemOverrideList, fixes #3264.

Added caching for baked vanilla models, fixes #3594.

Fix horse cap patch being reapplied in the wrong place (#3609)


Add .travis.yml (#3598)

* Add .travis.yml

* fix --refresh-dependencies

* try java 8

* add build with stracktrace

* Fix running test

* try building with java 6

* try using simplified init.gradle

* Revert "try using simplified init.gradle"

This reverts commit e56041e794e3b8c13453245eb2605118e4ac68ce.

* Revert "try building with java 6"

This reverts commit 51795385f453fdd8a0e77c632b5463d8754b1ba4.

* Fix running tests

* skip createExe task

* Test with broken debug mod

* Revert "Test with broken debug mod"

This reverts commit 3b26700582ba4f4f5477f5927b0006ef0fe85bb0.

Fix tests...

Inital 1.11 update.

Fix #3561 import io.IOUtils instead of compress.utils.IOUtils (#3562)


Update MCP mappings to snapshot_nodoc_20161220 (#3551)


Properly deobfuscate lambda expressions (#3552)


Add nullable annotations to IGuiHandler (#3550)


Add hook to allow any block to respond to filtered block updates like the Observer block (#3547)


Fix some resources that are never closed, close in a finally block (#3544)


[1.11] Fixes for Chunk.getBlockLightOpacity implementation (#3537)


[1.11] Fix ItemHandlerHelper canStack and ItemStack areTagsEqual methods not checking capabilities  (#3500)


Make NBSP character display as a space. MC-2595 (#3522)

Add easy getter for the Locale: MinecraftForgeClient.getLocale()

Added Oak door to Ore Dictionary Exclusion list to fix able to craft it with any wood type (#3519)


Fix setting the world in TileEntity.addTileEntity (#2863) (#3517)


[1.11] Made WalkNodeProcessor consider burning blocks (#3515)


Fix uses of uppercase "Forge" where it fails Loader.isModLoaded(modID) (#3513)


Patch EntityPlayerSP to use location-aware version of isNormalCube (#3494)


[1.11] Add memory display to loading screen (#3447)


reset repo to upstream and reapplied patches (#3434)


[1.11] Added EnchantmentLevelSetEvent (#3433)


Register Minecraft mod container in FML loader (#3414)


Small memory optimization in Registries.

Fix modid field name for ProjectInjector.

Enable Enforcement of modid formatting. Must be lowercase and <= 64 characters

Bump version for RB.

[1.11.x] Refine fluid placement utilities (#3509)


Properly filter out annotations that are for multiple mods in the same mod source.
This prevents disabled mods from getting their proxies injected.
Also prevents mods from getting their proxies injected multiple times.
Effects the @EventBusSubscriber, @Instance, @Metadata, @SidedProxy annotations.
If the target modid is not in the annotation data, and there are multiple mods in the source, it will attempt to find it by matching the annotations's class names.
This is a potentially breaking change. Review your logs for "skipping" messages.

Prevent a crash when scheduling block updates for non-existing blocks #3485

Fix issue reading chunks from the network when client and server do not agree on block count. Closes #34925

Restore missed patch in World.updateComparatorOutputLevel. Closes #3495

Make SlotItemHandler override Slot.getSlotStackLimit. Closes #3497
Make Container.mergeItemStack respect target slot's max size when slot is non-empty. Closes #3498
Fix Shift clicking in Beacons with stacked items when fuel slot is empty.

Added gradle.properties to  MDK (#3361)

The file sets the default max heap size to 3 GiB so that the decompilation doesn't fail as often.

(cherry picked from commit 49ec3d1b9322ee2b7a1312059118173b0b3fe6d0)

Add ItemBlockSpecial#getBlock (#3343)

(cherry picked from commit cf26f4acbe48ee8790edc03d0b5c16c1167278ab)

Add null check and informative error message when client receives an invalid update packet (#3266)

(cherry picked from commit 882e0e3bf22784d693e3816b0efeba5fbedb1a22)

Fix for showing config default values twice in tooltip (#2257) (#3338)

(cherry picked from commit be73ec3d5ebd972cfacb0f255f71112a0430bc43)

Added isItemValidForSlot check to hopper extraction (#3444)

(cherry picked from commit 0348760a774ca7ed9639376baadae38e272f5bf8)

Fix NPE when rendering missing mod screen with version bound requirements. #3501

Make sure to log kick messages in NetworkDispatcher. Closes #3507

[1.11] Fix null checks in shouldCauseReequipAnimation (#3482)


[1.11] Add biome dictionary types for newer biomes (#3475)


[1.11] Add canApplyAtEnchantmentTable to Item (#3463)

Allowing increased control of which enchantments can be put on an item over Vanilla's hard-coded item type checks.
Render enchantment buttons disabled when the item is enchantable but the enchantability requirement is not met on lower levels.

Add a way for modded GuiScreens to cancel mouse and keyboard events (#3438)


Add missing pooled BlockPos retain in World patch (#3486)


Moved TextureStitchEvent.Pre to allow custom sprites for blocks (#3436)


Fix sky colour blending not working for render distances >16 (#3476)


Allow connectable blocks to choose what they can connect to (#3437)


Changed Armor Material to use an ItemStack aware version (#3469)


Fix Redstone Torch memory leak (#3474)


BiomeDictionary code cleanup (#3466)


Added EquipmentChangeEvent (#3411)


Update assets to new Forge brand (#3464)


First pass at exposing data fixers to modders.
Each mod gets its own version number, mods SHOULD NOT rely on other
mod's fixers, just care about yourself.
Walkers can use IDataFixerData to retrieve their version.

Add getSlotLimit(slot) to IItemHandler (#3445)


Pass along if the respawn event was the result of the end being conquered or not (end respawning is really FUNKY code and uses death instead of 'change dimension')

Add method to check if an Entity can trample a Block. Fixes #2510 (#2730)


Provide access to GuiContainer location and dimensions (#3440)


Clean up handling of changes to IVertexConsumer (#3458)


Provide access to ShapedOreRecipe width and height (#3439)


Quick fix for another ItemStack null check (#3426)


Fix problem with the server hanging around after forcing the client to exit, leaving behind stale processes.

Fix using the wrong Pair implementation (#3449)


Fix #3432 Hopper and Dropper item moving does not exactly match vanilla (#3442)


Fix #3424 ItemCraftedEvent returns air when shift-clicking (#3441)


Cleanup some null checks and remove deprecated methods in Item and Block (#3429)


Fix max CustomPayload size, 1MB not 16MB.

Insert FML packet handler into Vanilla pipelines in case modders send FMLPacket to vanilla. Fixes #3422

Make all tests one side only, so we can test vanilla clients in dev env.

Fix AbstractMethodException in FML Registries. Closes #3427

Fix ItemStack null check in PlayerInteractionManager

Move EntityHorse capability patches to AbstractHorse (#3417)

Fixes #3409
Fix Item transfers related to Hoppers.

Remove Block.addInformation exists in vanilla (#3413)


Initial annotations/nullability changes (#3392)


Add GetCollisionBoxesEvent. Allows manipulation of the collision boxes of blocks for entities. MC1.11 edition. (#3405)


First draft of Entity Registry re-write.

Make Wither Skulls respect Block.canEntityDestroy. Closes #3404

(cherry picked from commit 6b52023a5c341420d976cb50359e2a2a4a6a9192)

Added EnumHand parameter to Block.getStateForPlacement (#3402)


Fix client side placement issue on blocks with GUIs. Closes #3399

Fix issues with ZombieVillagers Closes #3398
1.11 doesn't intertwine zombie types anymore so our edits to split them out for custom professions are not needed.

Fix Villagers for 1.11 (#3401)

- Add cartographer registry entry
- Fix textures for the nitwit
[1.11] Fix nullability issues around ForgeHooks and Capabilities (#3395)


Change OreDictionary over from "null" to the new ItemStack system. (#3400)


Do not install mod_list.json for optional mods.
Classpath scanning is in so they will still be detected

Include Mercurius in installer. See Forge Forums for more info.

Restore the ability to register modded TileEntities.

Implement fluid item capabilities without item swapping

Remove deprecated Fluid stuff

Fix crafting causing crash (#3388) Closes #3387


Fix ItemStackHandler's constructor ignoring size. Closes #3386

Fixed damage bar color. Closes #3389

Make EntityShulker fire EnderTeleportEvent. Closes #3383

(cherry picked from commit d48985fafaed6de6f09136b999ca8aa44184a7b9)

Added event to allow modification of player visibility to mobs/AI (#3382)

(cherry picked from commit 0a5ef64d6ea96fe85d7c62107081ced649e6a3e9)

Restore another missing patch in WorldProvider.

Disable capabilities for empty ItemStacks.

[1.11] Fix initCapabilities for ItemStacks (#3379)


Apply missed patch to WorldProvider.

Fix build.gradle problems:
Installer missing url.png
UploadArchives erroring on local systems due to missing changelog
Adding branch name improperly.

Fix localizations not loading correctly in legacy resource packs.

Fix FurnaceRecipy registration.

Fixed test cases for 1.11 changes.

Initial 1.11 release update.

Initial 1.11-pre1 update

regenerate entitylivingbase patch

Update to 20161111 mcp names

Improve error message from crashes during loading (#3362)


Added events for crop growth (#3320)


Add support for custom entity selectors in commands (#3356)


Added PermissionAPI (#3155)


Add hand argument to BlockEvent.PlaceEvent (#3221) (#3270)


Fixes #3237 and #2752. (#3347)

* Fix #3237 by correctly utilising the keepLooking argument.

* Explain within SimpleNetworkWrapper's javadoc that the execute of the handler isn't on the main Minecraft thread.

Made default slot implementation respect inventory stack size limit.


Fixed Block.setBedOccupied ignoring 'occupied' parameter


Add Item#getNBTShareTag (#3342)

* Add Item#getNBTShareTag

* Update comment

Call Looting Event on player death and loot table drops (#3275)

* Call Looting Event on player death and loot table drops

* Simplify patches

* More code cleanup: Replace old usage with compact forgehooks implementation

Fix POTENTIAL issue with Texture Stitcher exceeding max size.

Fixed Ore Dictionary replacing the oak boat recipe (#3329)

Fixes the oak boat recipe being able to be crafted with any wood
Improve the default isItemValid() and getItemStackLimit() implementations in SlotItemHandler. You can now properly swap the player's held itemstack with the slot's itemstack. (#3273)


Fixed texture stitcher not using full texture height before expanding width.

Update readme to be a little more clear.

Special case not drooping snowballs for water and snow layers. Closes #3326

Fix MC-105406 (OpenGL leak in View Frustum) (#3308)


Fix very laggy mipmap slider MC-64581 (#3305)


Add Block#getStateForPlacement (#3129)


Add better key modifier behavior for GUI contexts (#3307)


Make item repair recipe respect itemstack's getMaxDamage (#3295)


Fix infinite loop in dragon fight when the dragon is over the void.

Fix Tabbing issues with config classes.

Initial pass a re-working the configuration system.
Work in progress.

Add in missing test runner for a test. Fixes failing tests on jenkins, hopefully.

Fix substitutions being broken after freezing - actually store the original state in registry copies, not the computed state, which is wrong because it only sees the sub, not the original.

Revert "Another fix for registry substitutions. Closes #3212"

This reverts commit ec2977afc919c0f676f59977e6065148ea635f9e.

@ObjectHolder will now inject null for dummied objects. Closes #3301

Allow all Forge Registries to work with ObjectHolder (#3220)


Revert commits related to filtering proxy and Automatic Subscriber annotations.
Broke some existing setups, will require a annotation definition change in 1.11.

Fix proxy injector filtering. (#3300)


Bump version for new Recommended Build.

Introduce IContextSetter for events.
This will set the active mod container for events using the normal EventBus.
Fixes improper warnings from initializing mods using the new Registry events.
Modders, you should not use this as it has many performance implementations
and if abused will slow down the event bus A LOT. ActiveModContainer is not
thread safe.

Filter out proxy injectors for incorrect mods.
Prevents mod classes being initialized early when multiple mods are in the same source.

Small Cleanup in example build.gradle.

Fix unbound keybindings are activated by unknown keyboard keys (#3288)


caseSensitiveCustomCategories must be set before loading the configuration file. (#3269)

Otherwise one set with categories in lowercase letters and on case sensitive
set is generated.
Fix typo in sky rendering causing tons of BlockPos allocations (#3267)


Add in registry registration events, new subscription events you can use to make sure you're registering things at the "best" time.

Add support for generic filtering of events.
Please DO NOT use this in performance sensitive environments where you will have tons of things added to the listener list.
If that's the case define sub-classes as they have completely separate lists and will thus be more efficient when firing the event.

Fix roofed forests posting decoration events for small mushrooms rather than big (#3259)


Add support for offhand bow aiming animation (#3085)

Vanilla allows you to use a bow in your offhand, but it's not visible to others or in third person.
Fixes MC-88356
Remove oredict for Bone Block recipe, stop white dye to bonemeal exploit (#3255)


Fixed Biome.platFlower not being called when bonemealing grass. Closes #3254

Added getCommandMap() & getSortedCommandList() in CommandTreeBase (#3251)


New event to allow mutating a baby entity based on it's parents (#3227)


Added CommandTreeBase (#3193)


Fix debug command creating empty file (MC-103399) (#3218)


Fix universal bucket not being returned in crafting recipes (#3234)



Create EnergySystems.md
Fix potential shading issue in GuiEditArrayEntries. Closes #3247

Introducing a new standardized energy capability system.
Heavily inspired by the old RedstoneFlux API developed by King Lemming and Team CoFH.

Fixed ItemStacks having ForgeCaps tag when no caps are serialized.

Fix Cactus being able top be planted on incorrect soil.

Fix wrong var being used during getMaxSpawnPackSize check. (#3240)


Move dismount version of EntityMountEvent to Entity class. Should fix canceling dismounting. Closes #3226

Yet another fix for stupid stairs. Closes #3224

Make StructureBlock TESRs always render. Closes #3222

Fix item use stats (#3216)


Fixed decorate event being called with SHROOM type for both convered trees and large mushrooms. Closes #3215

Another fix for registry substitutions. Closes #3212

Update gradle wrapper to 2.14, reference MC json, and add java6 compat lines to default MDK build.gradle.

Add legacy support for signature change of AddCallback.

Revert changes to ItemTool for binary compatibility (#3211)


Expand getHarvestLevel to include player and blockstate (#3192)


Make enchantment tables spawn particles for any custom energy provider. Closes #3208

Allow blocks to affect the beacon color (#3205)


Fix armors rendering badly. Closes #3196

Fixed NPE from missing Capabilities (#3191)


Fix World Capabilities NPE when there are no attached capabilities.

Introduced Capabilities for World (#3069)


Fix vanilla bug in BlockFalling that caused blocks to loose state info during world gen. Closes #3183

Added PlayerBrewedPotionEvent (#3187)


Don't crash if you select a fake player

Skip searching for mods in the JAVA_HOME directory. Closes #2249 and #2250

Fix leather armor overlay not rendering when armor is pure white. Closes #3184

Fix test mod IDs, names, and versions (#3122)

Most of our test mods have bad IDs (uppercase) and are missing names or
versions. Forge produces a bunch of warnings in the console about this, which
makes it more likely that an important message will be missed.
Make InventoryHelper#spawnItemStack use ItemStack#splitStack to avoid losing capability data. (#3163)


Unlike BakedQuad, UnpackedBakedQuad does not propagate the diffuse lighting flag to Vertex Consumers. Made UnpackedBakedQuad conform to BakedQuad's behavior. (#3181)


Add RenderTooltipEvent (#3034)

Set ModelLoader.WHITE's texture size iniatlly instead of defaulting to zero and being set later.

Fix #3165 Dispensers with buckets can destroy fluid handler blocks (#3180)


Fix Fire not using getFireSpreadSpeed. Closes #3175

Fix issue with stairs.

Removed unintentional functionality when using the Splash Screen.

Disable DecorateEventDebug by default.
Prevents me thinking that decoration is broken >.<

Compleetly skip FML handshake for Vanilla connections. Should fix race condition. Closes #3084

Fix name in legacy support in registry changes.

Make stair culling use actual state, and be more robust. Closes #3170

Fix Vertex Transformer for breaking models (#3132)

* Add setTexture to IVertexConsumer and propagate it.

Fix Forge fluids not serializing properly. Closes #3152

Restone binary compatibility with registry substitution rework.
Modders please switch to using the provided RegistryBuilder to ensure more forward compatbility. Closes #3144

Second pass at fixing 'Dissapearing Doors' This now more robustly fixes ALL uses of get and has slight performance improvements for itterable states. Closes #3139

Added config option to disable Forge's fix of Stair/Slab face culling.
Some vanilla resource packs exploit this issue in their custom models causing unintended rendering issues.

Fixed 'Dissapearing Doors', An issue where the world would try to save blockstates that are not serializeable.

Allow CommandEvent to change the parameter set. Closes #1762

Another pass at substitutions - now capable of fixing up ItemBlock to point at the right block when a block is substituted, should also handle substituting itemblocks. There's some hackery in the way we have to change the value of ItemBlock.block, but it's not too egregious in my opinion.

Clean up AT file

Merge remote-tracking branch 'origin/pr/3120' into 1.10.x

Fix anvil output slots being wrong by adding new ones. Closes #3121 without breaking existing mod workarounds for the badly ordered slots.

Expose vanilla brewing recipe registration
(cherry picked from commit 24bf163)

Clean up some legacy settings, making sure there's translation strings. Closes  #2965 Thanks for the prompt Zaggy!

Refresh patch after cherry pick (cherry picked from commit 71f75bf)

Fix MC-91728
(cherry picked from commit 71f75bf)

Remove sideonly on all other SoundType methods
(cherry picked from commit 46c7cac)

Fixed NeighborNotifyEvent not containing the piston facing direction.
(cherry picked from commit 5637c41)

Use extended state for breaking models (#3086)


Clean up block patch. Also push json update.

Merge remote-tracking branch 'origin/pr/3116' into 1.10.x

Merge remote-tracking branch 'origin/pr/3089' into 1.10.x

Merge remote-tracking branch 'origin/pr/3125' into 1.10.x

Fix #3126 - duplicate stat id error - don't use the "universal iterators" in statbuilding, use the one without the duplicate entries. (The duplicate entry one is for rendering setup)

FIX : IndexOutOfBoundException

Tidy up some more todos

Mark it for actual removal in 1.11

Fix a vanilla bug with the blockstate ID map not being properly symmetric with respect to block.getStateFromMeta - closes #3012 properly but probably has a random MCJIRA ticket somewhere too.

Update decorate for biomes to support Decorate event

No-nonsense getSoundType

Merge remote-tracking branch 'origin/pr/3072' into 1.10.x

Merge remote-tracking branch 'origin/pr/3087' into 1.10.x

Rename the event to RenderSpecificHandEvent

Merge remote-tracking branch 'origin/pr/3115' into 1.10.x

Merge remote-tracking branch 'origin/pr/3110' into 1.10.x

Merge remote-tracking branch 'origin/pr/3112' into 1.10.x

Add shouldCauseBlockBreakReset callback to Item. This allows to keep breaking blocks if the NBT or similar changes.

Use CreateFluidSourceEvent for mod fluids as well

Add a test for CreateFluidSourceEvent

Add CreateFluidSourceEvent to control infinite fluid sources

Merge remote-tracking branch 'origin/pr/3055' into 1.10.x - closes #3055 and #3043 hopefully. Complex solution, but it seems legit. Needs testing.

Something that needs to happen: warn people about bad modids- if they're not lowercased, or if they're too long.

Add missing cancelable

Add hand-specific render event

Fix hotkey with default modifier loading wrong when modifier set to NONE

Fix async race condition on new chunks (closes #3020) (#3090)

This patch fixes a race condition that sometimes caused a just generated chunk
to be generated a second time.  In some this caused generated structures to
appear incomplete such as in Issue #3020 when the second generated version
effectively overwrote the original version of the chunk.

This patch ensures when ProvideChunk calls LoadChunk synchronously we always
attempt to load the chunk (if not cached) thus avoid the race condition without
changing the logic for async loading for chunks already saved to disk.

Thus this should retain the async functionality from PR #2946 while preventing
generation issues caused by the race condition.
Some tweaks to ContainedDeps - it should extract to a file in versionedMods directly, even if the tag in the jar has a subpath element. It'll also skip if there is a matching filename in the main mods dir.

Add the new tests into the suite

Some dummy block replacement tests - it seems they work correctly.

Some more substitution tests. It seems like it's working as it should.

More tests. Substitutions now work, and a fix is included. *sigh* Closes too many bugs to count.

Some test harness stuffs. Time to get the registry manager properly tested.

Add TextureDump forge test mod

Added support for using static methods as event listeners, Register the .class instead of an instance.
And added an improvement to calltime listener rebuilding.

Fixed sound paused/resume issue

Force mipmap even if textures are the wrong size

Lets make a half-decent readme. Thanks to Rorax for the install video!

Merge remote-tracking branch 'origin/pr/3036' into 1.10.x Closes #3036 Thanks Mezz!

Bump version for a RB

Merge #3060 into 1.10.x

Remove event stuff

Move to a hook in EntityMinecart

Add throwable impact event (#3071)


Add ability for custom detector rail output

Update build.gradle to not append the branch name if it matches the minecraft version.

Fix hopper extract behavior being broken on edge cases due to IItemHandler capability. Closes #3062

Add an event that allows to modify the looting level based on damage source

Fixed FPS graph and new debug lines not being rendered in Debug screen. Closes #3054

Restore (buggy?) behavior of vanilla BlockPistonMoving and ignore drop chance (#3052)


Fix villages generating to high when using a cusom sea level. Closes #3050

Update build.gradle to have single line for specifying minecraft version, and will update ForgeVersion.java as needed.

Forge will now load extra mods from mods/mod_list.json and mods/mc_version/mod_list.json.
As defined by the same json spec as --modListFile.
And now if repositoryRoot is prefixed with absolute: the path will NOT be relative to the MC directory.

Store member field mappings in the mapping table, possible fix for #3043
Fixed MC version number...
I could of SWORN we removed this in favor of a automated system...

1.10.2 Update

Fix mob-spawners crashing for non-living entities and simply the patch in the process (#3042)


Fix milk bucket is fillable with water or lava when milk is unregistered (#3039)


Fix legacy handling for ItemBucket subclasses and non-universal buckets (#3038)


Fix FluidContainerRegistry handling potions as water bottles (#3037)


Remove duplicated universal buckets from the creative list (#3035)


Big warning for recipe types found without being registered, it turns out this is pretty severe, modders need to fix it.

Add Forge fluid handler test

Fix comparison stability of the Recipe Sorter with unknown recipes #2962 (#3030)


Fixed Husks rendering as standard zombies. Closes #3028

Fixed chests being replaced when trees grew.

Simple implementation of a Open/Close container event (#3017)


Provide 'cleaner' version of TextureMap.setTextureEntry. Closes #1385

Fix incorrect logic in ChunkCache.isSideSolid. Closes #3026

Fixed incorrect variable being sent to doSpecialSpawn. Closes #2986

Fixed shifted patch in GameSettings causing settings to not load properly. Closes #3025 #3022

Fix doors popping off solid sides.

Fix that the Missing blocks/items/registries prompt often got stuck.

Fix Realms button text to be shorter again. Closes #3019

Fix item pickup dupe bugs. Closes #3015

[1.10] Fix keys with KeyModifier failing to load (#3018)

Fix key options with KeyModifier failing to load due to NumberFormatException

Accept more 1.9.4 version strings. Fix NPE for custom villager types and their associated zombie spawns. Still needs review.

Fix all guis closing as soon as they are opened (#3013)


Fix version number.

Update to 1.10

Fix the MDK - it gets the license too!

Update the build.gradle script to ship the new license and stop shipping the old licenses.

In accordance with our stated goal of relicensing Forge to LGPL v2.1, this commit enacts that change. Although it is using the 1.9.4 codebase, it is intended that this branch become public with the 1.10 changes, as such the license will take effect at that time. The three commits from persons who have failed to accept the new license, as documented in #2789, have had their commits reverted. This should complete the license transition. Commits after the commit date of this commit should be considered licensed by LGPLv2.1, as indicated in LICENSE-new.txt. All patches are now considered owned by the Forge project and Forge Development LLC in particular (note that they will not get the license boilerplate, as they are machine generated files).

Revert "Added PlayerOpenContainerEvent and added ForgeHooks.canInteractWith"

This reverts commit 8d0b58ee6fe1dca88f5874a9dd08368b0f5859e6.

# Conflicts:
#	common/net/minecraftforge/common/ForgeHooks.java
#	patches/minecraft/net/minecraft/entity/player/EntityPlayer.java.patch
#	patches/minecraft/net/minecraft/entity/player/EntityPlayerMP.java.patch

Revert "Added tab completion"

This reverts commit fe327fbd7662e0a1e71b89125f0a94ae48239bd0.

# Conflicts:
#	src/main/java/net/minecraftforge/server/command/ForgeCommand.java

Revert "Changed forge command tab completion to use getListOfStringsMatchingLastWord()"

This reverts commit 6a299a483a4865e13cd61e5d900a9e0c004a9226.

# Conflicts:
#	src/main/java/net/minecraftforge/server/command/ForgeCommand.java

Made forge-type spawn eggs spawn childs, when right clicking EntityAgeable again. (#2982)


Merge remote-tracking branch 'origin/pr/2994'

# Conflicts:
#	patches/minecraft/net/minecraft/item/ItemStack.java.patch

Make ASMDataTable more useful: (#2911)

- EnumHolder now has getters for it's data
- enum arrays work now
- nested annotations work now outside of being in arrays
(cherry picked from commit f10f750)

Fix incorrect FluidUtil doc (#2996)


Improve the "missing mods" on-screen error message (#2997)


Fix ItemStack deserialization can't clear nbt (#3005)


Update CONTRIBUTING.md
Update CONTRIBUTING.md
Fix #2918 Make dispensers with buckets work with modded fluids (#2947)


Fixed brewing stand returning incorrect solts for side inventories.

Fixed villager career display names being off by one.

Fix broken EntityItem merging for Items with capabilities

Fix DataParameter mixup when vanilla clients are connected causing CCE in zombie renderer (#2992)


Fix AnimationItemOverrideList not falling back to super (#2990)


Fix #2961 Capability data is not preserved by fluid handler interactions (#2976)


Slight tweak to early loading, to accommodate FMP

Fixed Fernflower decompile issue in AnvilChunkLoader.saveExtraData() Closes #2985

Mute the connection reset by peer exception - it's spamilicious for the most part.

Fix missing IMC message query.

Read a Update JSON in UTF-8 (#2978)


Add getter for the world to LootContext (#2954)
Fixed arrows not showing in non default AchievementPages (#2968)
Add methods to Fluid to allow custom vaporization overrides (#2959)
Fixes #1984.

Modified SimpleModelState to ignore the parts it doesn't know about. Fixes model part hiding always applying to some models when transformations are specified in the blockstate json.

Pass the GL context back from the splash screen during the EntityRenderer init.

Fire ChunkWatchEvent.Watch event, closes #2767. Based on @sfPlayer1 patch suggestion. It looks like this logic has shifted relative to 1.8, so there may be differences in event behaviour now.

Fix asynchronous chunk loading (#2946)

Since the update to Minecraft 1.9.4 chunks were actually never loaded
asynchronously because a sync request was always made from the
PlayerChunkMap shortly after the chunk had been queued.

- PlayerChunkMapEntry now only loads chunks synchronously *after* the
  chunk failed to load asynchronously.
- Fixed some minor bugs that caused "Attempted to dequeue chunk" messages
- Simplified ChunkProviderServer patch. loadChunk no longer generates chunks,
  so there is no need to handle that.
- Moved loader and provider to ChunkIOProvider so there is no need for
  "hashCode abuse"
Make it easier to use FluidTanks that have input/output restrictions (#2945)

These internal function should NOT be used by anything except the owner of the tank.
Fixed BiomeProvider.getModdedBiomeGenerators method name. Closes #2937

Several bugfixes for PlayerInteractEvent (#2943)

* Don't change Result if setCanceled(false) called

* Fix RightClickEmpty firing even when targeting a block or entity

* Add a left click empty event

* Move hook point for EntityInteractSpecific to the right place

* Fix LeftClickBlock not firing clientside in creative, and clarify docs about creative

Add new IFluidHandler for capabilities. (#2942)

Old fluid system is deprecated and slated for removal in the next cleanup cycle.
Add a Slot#isSameInventory() method (#2884)

This fixes shift + double clicking items in Containers that use
SlotItemHandler slots.
Fixed POTENTIAL issue where mods would query world infrom from TEs before they are set. Closes #2863

Expanded custom villagers to Zombies and world gen.
Fixed edge cases where custom professiosn wernt being used correctly. Closes #2862

Fixed client side ticking TileEntites after they are unloaded. Closes #2852

Fixed position sent to sanSustainPlant from cactus. Closes #2941

Forge will now warn the user and ask permission to load a world with unknown registries. Closes #2934

Fix BlockFluidBase having collision. Closes #2932

Merge branch '1.9.4'

Initial support for model visibility system. Implemented it for OBJ, B3D and normal vanilla models; fixed NPE accessing parent state in B3DModel. Fixes #2801.

Improve JavaDoc links, fix some broken JavaDocs (#2833)

Improve JavaDoc links, fix broken JavaDocs
Reordered transformations during LayerHeldItem rendering, fixes #2827.

Fixed new ICrashReportDetail loader working with packaged mods by delaying it until the ModContainer's construct event. Closes #2924

Fixed issue with @ObjectHolder and the new registry system. Closes #2640
Only run static initalizers for classes we need to get the names from values.

Fixed village wells not having their biomes set. Closes #2499

Fixed TileEntityBeacon not using position-aware getLightOpacity. Closes #2530 and #2910

Fixed potential issue with Chunk.getLightOpacity being called before the chunk is added to the world map. Closes #2529

Fixed FluidUtil.tryEmptyFluidContainerItem not checking if the tank can accept fluids first. Closes #2527

Make sure tool-classes for vanilla tools are initialized early. Closes #2909 and #2525

Fix tooltip for survival tab in the creative menu not drawing on any but the first page. Closes #2908 and #2504

Fix Thorns enchantment bypassing ISpecialArmor.damageArmor function. Closes #2463

Reinitalize statistics information on Mapping changes.
Fixes mismatched stats to item/block ids. And auto registers stats for modded items.
Closes #2454

Fixed NBTTagString.toString not properly escaping \'s. Closes #2393

Add ServerHangWatchdog to TerminalTransformer whitelist. Closes #2203

Fix setTileEntity causing the world to remove the new and old tile entities. Closes #2164

Fixed EntityRegistry.addSpawn adding duplicate spawn entries. Closes #2112

Fix javadocs for BiomeColor events. Closes #2093

Fire LivingSpawnEvents for MobSpawners. Closes #2079

Fire PopulateChunkEvent Pre and Post in ChunkProviderFlat. Closes #2050

Move getArmorModel hook up two lines so that the attributes and animation information is set. Closes #1939

Close player's inventory to prevent potential dupe issues on some modded items. Closes #1431

More uniformly apply Configuration.caseSensitiveCustomCategories. Closes #1353

Set Enchantment table's harvest level. Closes #1349

Capture interfaces when scanning classes and preload implementations of ICrashReportDetail.

Fix installer downloading vanilla jar when not needed. And filter some more known libraries.

Strip Optional from the class signature as well, since that's loaded by the TypeToken registry code and might cause a crash.

Pass the correct position into isSideSolid in BlockRailBase#canPlaceBlockAt (#2919)
Add hook for TE data sync on client (#2893)
Switch new constructor to use floats (#2904)
Make unit test for EnumHelper more robust and less spammy. Now detects missing accessors as well.

Fix paramters for addArmorMaterial, addOption and addGameType.

Add Unit Test to detect mismatches between EnumHelper and Enum ctor

Add alternative ItemAxe Constructor

Fix villagers having farmer skin on vanilla servers. Closes #2894

Fire playerDestroyItem event's in some cases where we were not.

Fix Container.compouteStackSize not respecting stack version of maxStackSize. Closes #2756

Set max enchantment ID to Short.MAX_VALUE. Closes #2799

Tipped arrows are now not affected by infinite enchantment but are still effected by creative mode.

Take capabilities into account when comparing ItemStack NBT's. Closes #2726

Fix screenshot link paths on Windows (#2886)
Tweak build file slightly - allow passing buildNumber using gradle parameters (-PbuildNumber=...) and provide a "resetBuildNumber" function to reset the buildNumber to zero in the ForgeVersion file. Means builds can be reproducible in-IDE.

Add Unit Test to detect mismatches between EnumHelper and Enum ctor

Update example mod for new mappings.

Bump version information for 1.9.4.

Fix schizophrenia in version numbers.

Update mappoings snapshot to 20160518

1.9.4 Update.
Major things to note:
Class renames: https://gist.github.com/LexManos/44dd211f90f498ad4015279b103dff86
Tile Entities are now packed in the ChunkData packet.
Forge intends to work around this to better support large moded worlds, but for the time being modders should implement the new function carefully and only send what data they need to!
Minecraft's codebase now has annotations, these are directly from Mojang and should be adheared to!
Added support for package-info.java's containing @Nullable information for all MC code base.

Fix Bucket rendering and add sound (#2865)

* Adjust generated quads from texture to take texture size into account #2858

*  Fix universal bucket not passing through when rightclicking on a non-block
Add proper sound events when picking up modded fluids #2821

* Have FluidUtil execute properly on both sides and sync as expected. Add default sounds to interacting with tanks

* Save sound for filling/emptying in the fluid

Lets just simply this. Fixes last commit.

Add modder facing API for Villager Career level trades. Ref: #2854

Extended Animation State Machine format to allow multiple transitions from one state.

Fix up release jsons to clean up extraneous netty references

Make LootPool constructor public again. Closes #2847

Fix type in LootEntry json name. And rename LootTable.finalize to freeze to avoid overriding Object function. Closes #2846 and #2847

Fixed joint animation application correctly.

Add ScreenshotEvent (#2828)

Add ScreenshotEvent

New LootTable interaction system and event.
Modders can now modify and reference internal elements of a loot table by name.
Editing can ONLY be done in the event and any external editing will cause a exception to be thrown.
See this gist for more information: https://gist.github.com/LexManos/77c983d67b9ad27010428478b66d50fd

Fixed joint hierarchy not being used fully in the animation system.

Fixed issue in ChunkIO that would potentially cause NPEs on chunks. Closes #2837

Fixed map extension recipie.

Fix the rand given to PopulateChunkEvent (#2834)
Fix areas where dimension types are used as dimension IDs.

Add NPE protection to in-hand item rendering.

Fix url regex (#2815)

Fixed url detection in chat messages. Stops false positives such as `um.....no`
Bump version for new RB.

Slightly better practice because wait can be randomly interupted.

Merge in a fix from 1.8.9 for rails

Merge branch '1.9'

Remove usage of AsynchronousExecutor library in favor or a simpler implementation.

Add a java version detection and nag system for users on Java 7 or below.
Added detection of mods that rely on Java 8 and a graceful error screen.
The nag screen will be shown once a day. It can be disabled by editing the forge.cfg.
However it is HIGHLY recomended that user update to Java 8.

Fix withers breaking bedrock. Closes #2813

Fixed villager profession not being set correctly on the client, and fixed custom village texture rendering. Closes #2766.

Fixed cooldown overlay sometimes rendering opaque. Closes #2772.

Make ChunkRenderDispatcher.countRenderBuilders configurable. Closes #2775.

Fixed custom fluid sufraces not rendering from the bottom. Closes #2800.

Fix TextureMap failing when registering a sprite's resource location twice (#2785)
Call markDirty when restoring blocks with TileEntities. (#2809)

This change makes sure the updated tileentity is saved properly within the
chunk.
Call markDirty when restoring blocks with TileEntities. (#2808)

This change makes sure the updated tileentity is saved properly within the
chunk.
Call markDirty when restoring blocks with TileEntities. (#2807)

This change makes sure the updated tileentity is saved properly within the
chunk.
Add Potion.renderHUDEffect (#2798)
Fix wrong blockstate being passed to notifyNeighborsRespectDebug. (#2806)
Only run block physics for TileEntities while capturing block placement. (#2805)

Currently, all blocks placed by players that are not TE's run physics
twice. Blocks that contain a TileEntity are not affected due to a check in
'ForgeHooks.onPlaceItemIntoWorld'.

In order to fix the problem, 'Chunk.setBlockState' will now verify if
blocks are being captured before running onBlockAdded and if so, only run
physics if the block has a tileentity. This check also prevents blocks
such as TNT's from running its physics (explosion) when placement event is
cancelled.
Only run block physics for TileEntities while capturing block placement. (#2803)

Currently, all blocks placed by players that are not TE's run physics
twice. Blocks that contain a TileEntity are not affected due to a check in
'ForgeHooks.onPlaceItemIntoWorld'.

In order to fix the problem, 'Chunk.setBlockState' will now verify if
blocks are being captured before running onBlockAdded and if so, only run
physics if the block has a tileentity. This check also prevents blocks such
as TNT's from running its physics (explosion) when event is cancelled.
Fix sluggish scrolling on GuiScrollList's and fix small rendering issue with scroll bar on certian screen sizes.

Fix SidedInvWrapper accessing wrong slots for setStackInSlot. (#2797)

Fix DoubleChestItemHandler not implementing IItemHandlerModifiable
Close #2780 add CMD localization for Mac key bindings (#2792)
Update LICENSE-new.txt

Better words
Update LICENSE-new.txt

Words
Update LICENSE-new.txt

Clarification on infectivity
Add the new license text. Not yet applicable to forge.

Fix NPE on shield break. Closes #2786

Boss bar render event (#2701)

Allow control over increment height
Fix forge:default-block transformation. (#2760)

The first-person left-hand rotation was a little bit of.
Expose a central place to access all of Vanilla and Forge's registries using the new registry API.

Fix log spam from invalid key modifiers (#2746)
make WorldSavedData implement NBTSerializable (#2745)
Don't use import static with net.minecraft classes. Using the latest MCP snapshots this causes an import conflict. (#2742)
Add cancelable event for Potions shifting the gui position (#2667)

Add cancelable event for Potions shifting the gui position
Fix ForgeChunkManager world unloading check (#2736)
Fix being kicked from server when climbing ladders.

Fix potential desync between Forge's Villager profession and vanilla's int based system.

Update ore dictionary (#2721)

Updated the Ore Dictionary with more vanilla items:
  -Prismarine Shard ( "gemPrismarine" )
  -Prismarine Crystals ( "dustPrismarine" )
  -Prismarine Block ( "blockPrismarine" )
  -Prismarine Brick ( "blockPrismarineBrick" )
  -Dark Prismarine ( "blockDarkPrismarine" )
  -Nether Wart ( "cropNetherWart" )
  -Sugarcane ( "sugarcane" )
  -Paper ( "paper" )
  -Ender Pearl ( "enderpearl" )
  -Bone ( "bone)
  -Gunpowder ( "gunpowder)
  -String ( "string" )
  -Nether Star ( "netherStar" )
  -Leather ( "leather" )
  -Feather ( "feather" )
  -Egg ( "egg" )
  -End Stone ( "endstone" )
  -Torch ( "torch" )
  -Vine ( "vine" )
  -Cactus ( "blockCactus" )
  -Grass ( "grass")
  -Obsidian ( "obsidian" )
  -Red Sandstone ( added to "sandstone" )
  -Crafting Table ( "workbench" )
  -Slime Block ( "blockSlime" )
  -Granite ( "stoneGranite" )
  -Polished Granite ( "stoneGranitePolished" )
  -Diorite ( "stoneDiorite" )
  -Polished Diorite ( "stoneDioritePolished" )
  -Andesite ( "stoneAndesite" )
  -Polished Andesite ( "stoneAndesitePolished" )
Merge pull request #2729 from kashike/feature/bossinfo

Remove @SideOnly(Side.CLIENT) from BossInfo/BossInfoServer methods
Remove @SideOnly(Side.CLIENT) from BossInfo/BossInfoServer methods

These methods can also be used by the server (see BossInfoServer, it sends packets to the client but the methods are @SideOnly(Side.CLIENT))

Made forge fluids use smooth lighting.

Fixed NPE in dedicated server languages. And fixed logger for main FML event bus.

Cleanup OBJLoader parse function and fix issues related to JVM differences.
Also fix support for sopme of the spec that was partially respected.

Enhance some error logging related to OBJLoader issues, and RegistryEntries.

Merge pull request #2723 from mezz/pick-fix

Fix some plain keybinds not working when a modifier is active
Fix some plain keybinds not working when a modifier is active

Merge pull request #2719 from mezz/pick-fix

Fix #2717 Pick block hotkey not working in inventories
Fix #2717 Pick block hotkey not working in inventories

Merge pull request #2718 from nekosune/patch-1

Corrected CapabilityItemHandler.readNBT ignoring anything in slot 0 in 1.9
Corrected CapabilityItemHandler.readNBT ignoring anything in slot 0 in 1.9
Merge pull request #2714 from nekosune/patch-1

Corrected CapabilityItemHandler.readNBT ignoring anything in slot 0
Corrected readNBT ignoring anything in slot 0
Fixed forge fluid having a collision box.

Fixed zip being closed too early in the server language loading.

Merge pull request #2709 from iTitus/bucketModel

Fix dynbucket item transformation.
Fix dynbucket item transformation.

Fixed some test mods not being marked as client-only.

Fixed mod languages not being loaded on the server.

Merge pull request #2708 from Zaggy1024/1.9

Fix PlaySoundEvent replacing a sound with PositionedSound causing an NPE.
Fixed using PlaySoundEvent to replace a sound with a PositionedSound causing an NPE due to the Sound field not being set by a call to ISound.createAccessor(SoundHandler).

Merge pull request #2707 from mezz/keyBinding19-4

Add modifier support to vanilla keybindings.
Merge pull request #2604 from williewillus/pie

New PlayerInteractEvent for 1.9
Player Interact Event

Add modifier support to vanilla keybindings.

Add Orange conflict color for modifier/key conflicts
(like Ctrl and Ctrl-Z conflicting)
Related to #2692

Merge pull request #2704 from AEnterprise/1.9

onBlockHarvested is no longer called twice
Fix improper logic in ItemHandlerHelper.giveItemToPlayer causing some items to not be added. Closes #2705

Fixed EntityJoinWorldEvent not being fired for some entitites on Server Worlds. Closes #2685

Fix issue caused by setting spawnRadius to 0. Closes #2624

Made both exceptions occuring during item model loading print in the log; closes #2696.

Added the ability to change the printed model error count; Added printing of actual exceptions causing missing variants related to blockstate loading, closes #2689.

onBlockHarvested is no longer called twice

Merge pull request #2702 from McJty/1.9

Added DimensionManager.createProviderFor() to WorldClient constructor…
Added DimensionManager.createProviderFor() to WorldClient constructor similar to what is done
in WorldServer to make sure the correct provider is created client-side too.

Merge pull request #2616 from iTitus/updateNotificationIcon

Add update notification icon made by @gigaherz, closes #2582
Merge pull request #2697 from mezz/keyBinding19-3

Fix inability to attack while holding modifier keys
Fix inability to attack while holding modifier keys

Merge pull request #2695 from mezz/keyBinding19-2

Re-Add key binding modifiers and contexts.
Re-Add key binding modifiers and contexts.

Revert "Add key binding modifiers and contexts.", until it's fixed.

This reverts commit 34c3af7e853d578c8e17e1f0cdf886251fad74ae.

Changed generic signature of GameRegistry.register methods to work around the type inference bug; updated all example mods to the new block/item registration method.

Merge pull request #2693 from Adubbz/1.9

Fixed mismatched registry names and mod ids
Merge pull request #2692 from mezz/keyBinding19

[1.9] Add key binding modifiers and contexts.
Properly deprecate and link the replacement methods in GameRegistry. Add helper method for registering a block with default ItemBlock because people keep complaining -.-

Fixed mismatch registry names and mod ids

Add key binding modifiers and contexts.

Same as #2674, but for Minecraft 1.9

Fixed compile error in registry code with Eclipse.

Capture a vanilla freeze - will be used when FML connects to vanilla servers, soon

Support ResLocations for IMC

Improved UV offset hackery - should fix most visible custom model seams.

MinecraftForge-2684 [1.9] New Registry ignores keys

MinecraftForge-2683 InvocationTargetException for Forge 1820 for 1.9

Add registries for soundevents, enchantments and potiontypes
MinecraftForge-2576 [1.9] SoundEvents (and Enchantments and PotionTypes) need a FML registry

Reconcile Block.patch

Squashed commit of the following:

commit b3b290aec9d3010a134859da6001ea28a96c2fdc
Merge: c6ce6a0 d803f7d
Author: cpw <cpw@weeksfamily.ca>
Date:   Fri Mar 25 13:28:04 2016 -0400

    Merge branch 'RegistryRework' of https://github.com/LexManos/MinecraftForge into LexManos-RegistryRework

    Implement proper registry slaves. Should help with rollback related issues.

    Missing patch

commit d803f7db76f65db9d27302c9804a643bc853dc22
Author: LexManos <LexManos@gmail.com>
Date:   Tue Mar 22 03:36:14 2016 -0700

    Update VillagerRegistry and use it. Should in theory make custom villagers work now. Using string version instead of int id for networking.

commit eb5e5b4b42fdca26d2a104e4dc1e6a3ea3051a7b
Author: LexManos <LexManos@gmail.com>
Date:   Tue Mar 22 02:14:16 2016 -0700

    More cleanup.

commit edbc56b2ff314629d0e402709f3cf29fc79c4a3d
Author: LexManos <LexManos@gmail.com>
Date:   Tue Mar 22 02:05:23 2016 -0700

    More cleanups, removed deprecated UniqueIdentifier {ResourceLocation now}

commit e2df8d1be3c97601508f83dc97b0e8853fa1e271
Author: LexManos <LexManos@gmail.com>
Date:   Tue Mar 22 01:29:19 2016 -0700

    Stupid generics....

commit 46d57dc4677fa5ff3923e64eaccfb33d7e5aad8d
Author: LexManos <LexManos@gmail.com>
Date:   Tue Mar 22 01:00:25 2016 -0700

    Some registry tweaking to provde a non-complicated API modders can use.

Fix remapped blocks being overriden with dummy air blocks. Closes #2491

Merge pull request #2679 from tterrag1098/render_in_layer_state

Add state param to Block.canRenderInLayer
Add state param to canRenderInLayer

Merge pull request #2678 from shadowfacts/BlockAddInfo-19

Forward ItemBlock#addInformation to Block#addInformation
Forward ItemBlock#addInformation to Block#addInformation

Merge pull request #2659 from kashike/feature/immutable-blockpos

Replace Forge's getImmutable method with the vanilla method
Merge pull request #2664 from gigaherz/capability-storage

Make access to the Capability IStorage less annoying
Fix landing particles not showing up. Cloes #2661

Make NoteBlockEvent raw constructor protected to allow subclasses. Closes #2153

Fix bows not animating properly when picking up ammo while using. Closes #2672

Fix shrubs not generating correctly. Closes #2663

Fix EntityPlayer still running old armor logic. Closes #2670

Merge pull request #2634 from mezz/null-pick

Fix Block.getPickBlock returning an ItemStack with a null Item
Fixed StackOverflow caused by the previous commit, closes #2669.

Prevent missing model from loading multiple times.

Fix Block.getPickBlock returning an ItemStack with a null Item

Add wrapper methods for IStorage#readNBT/writeNBT.

Replace Forge's `BlockPos#getImmutable` method with the included `BlockPos#toImmutable` (func_185334_h), while keeping the override in PooledMutableBlockPos to prevent mutable leaks.
Also prevent a mutable blockpos leak in World#setTileEntity

Fixed crosshair always being white, closes #2653.

Enabled diffuse lighting by default in UnpackedBakedQuad.Builder.

Fixed diffuse lighting not being applied if forge lighting pipeline is disabled, closes #2651

Merge pull request #2650 from mezz/1.9

Make tooltips layout in the right direction, wrap if there is no room
Make tooltips layout in the right direction, wrap if there is no room

Same as #2649, but for Minecraft 1.9

Merge pull request #2649 from mezz/tooltips

Make tooltips layout in the right direction, wrap if there is no room
Make tooltips layout in the right direction, wrap if there is no room

Fixes #2255

Disabled erroring block, fixed DynBucketTest.TestItem model.

Merge pull request #2645 from diesieben07/populate_event

Fix PopulateChunkEvent.Post not firing.
Made some more public fields either private or final.

Removed RenderWorldEvent, encapsulated all public event fields.

Removed LanguageRegistry and CollectionWrapperFactory.

Fixed isSideSolid causing infinite loops due to the call to getActualState.

Cleanup: removed IEEP, removed redundant casts, fixed imports, fixed typos.

New Builder class in BlockStateContainer. Makes building containers with both listed and unlisted properties cleaner.
Make all methods of BiomeGenBase$BiomeProperties public so that modders can use that class outside subclasses.

Fix PopulateChunkEvent.Post not firing

Merge pull request #2643 from diesieben07/beetroots

Fix BlockCrops.getDrops not respecting new age methods (for beetroots)
Fix BlockCrops.getDrops not respecting new age methods (for beetroots)

Add flashing update notification icon made by @gigaherz, closes #2582

It is added to the "Mods" button in the main menu and to out-of-date mods in the mod list (there it replaces the "U").
Also fixes a little typo.

Register the animation Capability. No idea how it worked before at some point.

Show meaningful error if ModelLoaderRegistry is used before the missing model is initialized.

Fix typo causing biomes to be generated in wrong chunks. Closes #2632

Fixed custom entities unique ids.

Update FML Entity Spawn packet for 1.9's location change. Closes #2567

Merge pull request #2622 from williewillus/dupedropfix2

Actually fix dupe drop
Added Capability.cast, to allow avoiding unchecked casts in ICapabilityProvider.getCapability

Fix swap animations for sure this time.

Actually fix dupe drop

Make OreDictionary.initVanillaEntries() private so that dumb modders will stop calling it.

Allow finite fluids to be drained correctly

Merge pull request #2531 from Choonster/finite-fluid-drain-fix

Allow finite fluids to be drained correctly
Merge pull request #2587 from diesieben07/spawn_egg_fix

Fix mod spawn eggs and EntityList.func_188429_b
Merge pull request #2592 from matthewprenger/patch-1

Pass exceptions thrown in mod event buses back to FML to handle appropriately 
Merge pull request #2593 from williewillus/dupedropfix

[1.9] Fix double dropping of items. Closes #2549
Merge pull request #2621 from Thutmose/patch-1

Fix pushing players inside blocks.
Fix pushing players inside blocks.

same changes made to the 1.9 branch
Merge pull request #2614 from williewillus/entitycaps

Expose IItemHandler on vanilla entities
Added support for custom dyes with Banners. Closes #2596

Make RenderLivingBase.add/remvoeLayer, Closes #2573

Fix pushing players inside blocks.

Update according to suggestions

Exclude jna from termal tansformer.

Add ShieldDecoration and Tipped arrows to recipe sorter. Closes #2613

Fixed Item.shouldCauseReequipAnimation hook.

Fix Chests not opening correctly with semi-solid blocks on top.

Merge pull request #2618 from Thutmose/patch-1

Allow players sized smaller than 1 block to walk into small spaces
Merge pull request #2605 from Thutmose/playersize

Fixed players smaller than 1 block not being able to walk under overhang
Rework DimensionManager for new DimensionType enum, replaces the old provider registry. Also fixed save folder issues with dimensions. Closes #2570

Allow players sized smaller than 1 block to walk into small spaces

Same as #2605 but for 1.9 branch
Allow players sized smaller than 1 block to walk into small spaces
Merge pull request #2612 from CovertJaguar/master

Add missing Minecart/Track hook.
Added default left hand transforms for forge transform strings. Closes #2615.

Made VertexBuffer.sortVertexData cleanup pointers after it's done. Closes #2528.

Ignore blocks/items with null registry name during model loading. Fixes NPE during resource reloading in worlds with removed blocks/items.

Removed blockCenterToCorner from TRSRTransformation constructor. Closes #2461.

Implemented slightly more generic version of UVLock, re-enabled it for json models. Closes #2607.

Expose IItemHandler on vanilla entities

Add missing Minecart/Track hook.

instance -> INSTANCE

Separated model classes to client and common packages.

Switched animation system to capabilities, added animated item example, fixed state passing in MultiModel.

Merge pull request #2610 from gigaherz/1.9-enchantment

Fix for enchantment table rolling invalid enchants
Merge pull request #2590 from blay09/patch-1

[1.9] Fix KeyInputEvent only being fired if Keyboard.getEventKeyState() is false
Merge pull request #2606 from CovertJaguar/1.9

Fix #2601 Minecart infinite acceleration
Fix a condition that caused the enchantment table to roll invalid enchantments.

Fix #2601 Minecart infinite acceleration

Fix EntityList.func_188429_b not supporting mod-entities, fixes spawn eggs, fixes #2581

Merge pull request #2594 from Corosauce/master

Fix for patch targetting the wrong field to change for failed pathfinding penalty
Fix for patch targetting the wrong field to change for failed pathfinding penalty

Merge pull request #2589 from diesieben07/player_riding_fix

Fix broken patch in EntityPlayer.updateRidden
Merge pull request #2586 from williewillus/fixcrops

[1.9] Fix BlockCrops looking for wrong AGE property for subclasses. Fix #2555
Merge pull request #2585 from iTitus/patch-1

Fix the EntityPlayer patch
Merge pull request #2584 from Corosauce/1.9

Fix for patch targetting the wrong field to change for failed pathfinding penalty
Fix bucket test

Merge branch 'master' into 1.9

Ignore classes directory

Fix double dropping of items. Closes #2549

Pass exceptions thrown in mod event buses back to FML to handle apropriately

Fix KeyInputEvent only being fired if Keyboard.getEventKeyState() is false.

It used to be called for both key-up and key-down states prior to 1.9, so I assume Vanilla's changes to F3 behavior broke the patch.

Fix broken patch in EntityPlayer.updateRidden

Fix #2555

Fix the EntityPlayer patch

In 1.8.9 the call goes to getDisplayNameString() so that any changes from the PlayerEvent.NameFormat event are being take into account.
In this patch the call goes to func_70005_c_() which is the getter for the GameProfile name.
I changed it back.

Sorry if you do not want to accept it because it is a one-liner.
Fix for patch targetting the wrong field to change for failed pathfinding penalty

Fixed sprite not being passed to the quad builder for custom models.

Fixed outline shader rendering, closes #2560.

Fixed Block.doesSideBlockRendering, closes #2564.

Fixed invalid index calculation in BakedQuadRetextured.

Fix AT lines.

Fixed quads that don't need diffuse lighting getting it anyway.

Merge pull request #2559 from Adubbz/master

 BlockColors and ItemColors no longer assume non-Vanilla id constancy. Added a getter for ItemColors.
Fixed MultiLayerModel not getting correct submodels; Unified the gui lighting of normal and custom models - diffuse lighting is now done in the pipeline, no need for IColoredBakedQuad anymore.

BlockColors and ItemColors no longer assume non-Vanilla id constancy. Added a getter for ItemColors.

Fixed NPE when sneak using a item.

Fixed Sand not falling.

Fixed onUseStop being called twice {Bows firing twice}

Fix vanilla bug where bows consumed tipped arrows in creative.

Remove our entity position fixer. Vanilla fixed the bug in 1.9.

Javadocs, small cleanup.

Fixed progress reporting for model loading.

Removed imports in patches.

Fixed EffectRenderer patch, closes #2547.

Fixed incorrect culling of mod TESRs.

Fixed incorrect rotations for items in the left hand. Closes #2548.

Fixed model error reporting, fixed model errors in test mods that shouldn't happen, fixed custom texture loading, made more things private/final.

Merge pull request #2544 from Vazkii/patch-1

1.9: Fixed registering armor materials through EnumHelper exploding
1.9: Fixed registering armor materials through EnumHelper exploding

1.9 ArmorMaterial now requires a SoundEvent for the equip sound.
Fixed breaking of tall grass. It now uses fortune. Expanded grass seed hooks to allow Fortune. Potentially removing in future in favor of LootTables.

Fix digging blocks in survival.

PlayerManager updated.

Delete mcp patches.

We are based on 1.9 not 1.8.9 :D

Update patches for fixed inner class suffeling in srg files.

Big model loader refactoring: simplified a lot of things, broke some error reporting. Still generally works.

First version of updated of ModelLoader, mostly works.

Fixed some errors in forge.exc

Updated to latest mappings. Exc is broken, some anonymous classes didn't map to srg names.

Merge pull request #2539 from bonii-xx/bugfix

Fix CombinedInvWrapper accessing incorrect slots
Fix CombinedInvWrapper accessing incorrect slots
Closes #2533

Switch to srg patches

Fixed armor rendering

Fixed incorrect rendering state caused by transparent rendering pass for entities.

Fixed emply hand not rendering in first person.

Capture Biome Registry within FML

Fixed (hopefully) perspective transformations for custom models too.

Fix items rendering too low in first person.

Move the patch into the fml override handler, for less patch

Fix race condition between server ticks and the netlogin code handshaking for FML

Fix perspective transformations for left-handed items, disable ModelAnimationDebug until model loading is fixed.

Fixed position being shifted before being sent to shouldSideBeRendered.

Bump version info. Rather important.

Added bypass functions to Defaulted registry, DO NOT USE THIS MODDERS FORGE INTERNAL ONLY.
And some other fixups for running.

Interaction hooks need to be re-added but compiles {Doesn't run}

Fix up PlayerSP for the AT

Another AT, for the player

Finish world, chunkloading should work again?

Potion cleanup. Moar fixes!

Remove more chestgenhooks stuff. Clean up some more ATs

More fixups, removing chestgenstuff aggressively. Use loot tables. Any missing ones WILL be added by Mojang.

Another compilation fix
More patch tweaks for compilation errors. onItemUseTick takes an entity now, cos skellies use stuff too

Some more forge code fixes

Most of ItemInWorldManager reject, various small error fixes.

World

10 more rejects down.
98 errors 6 rejects left.

More patch work, client patches.

Allow finite fluids to be drained correctly

Few more compile fixups

Command fixups

Remove two patches that aren't needed anymore

Some client handler cleanup

Fix up import in Potion

Some more FML related fixups

Some fixups for FML, and use the FML registry for potions

NetworkDispatcher/FMLProxyPacket 41 more errors cleaned.

Temporary hack to fix MCP mappings for param names we are using that is causing compile errors.

Fishing is now a loot table no more need for FishingHooks. {LootTables still need to be evaludated if they need extra hooks, but thats later} Goodbye 44 compile errors!

Fixed errrors in Fluids package. TODO: Make BlockLiquid implement IFluidBlock and REMOVE FluidContainerRegsitry. Everything *should* be able to use IFluidContainer directly.

Made OBJModel.java compile.

Model UV lock handling from the state to the model, fixed most compile errors in ModelLoader, disabled it (and ModelBakeEvent) until it's functional, fixed some errors in ForgeHooksClient.

Removed generics from IModel subinterfaces, add ed ModelProcessingHelper instead.

WorldServer: NOTE - ChestGenHooks has NOT been updated in accordance with plans for removing it
GuiStats
Fixup deletion of egg handling in entity registry?

ServerPinger
PlayerList

ModelBox, PositionTextureVertex, TexturedQuad. Does anyone really use those on the server?

LanguageManager
NetHandlerPlayClient

Fixed B3D loader, fixed some obvious errors in ModelLoader.

Fix various errors in text mods.

World Patches work.

More work on misc things.

Delete reject files i missed

Merge pull request #2521 from Adubbz/master

Updated BiomeManager to 1.9
Updated BiomeManager to 1.9

Merge pull request #2520 from Adubbz/master

Updated the biome dictionary to support 1.9
Enchantments, some world, Biomes, bucks, world/gen/features.

Updated the biome dictionary

Squashed commits:

[4064de6] Updated the biome dictionary

DedicatedServer
IntegratedServer

Chunk

Updated raw types in ExtendedBlockState, fixed some ATs, updated some things that needed updating in model classes.

removed Item.getModel, functionality is now achieveable via ItemOverrides.

GuiOverlayDebug, ItemModelMesher, RenderManager, Stitcher fixed + minor fixes in forge gui classes.

GuiCreateWorld, GuiSlot, GuiUtilRenderComponents, GuiContainerCreative

Small renames before bed.

Merge pull request #2514 from CovertJaguar/1.9

Fix broken patches for EntityMinecart
Items done, <1000 errors whoot!

Fix broken patches for EntityMinecart

Some entity patches.

Fixed most errors in the model stuff, except for ModelLoader and b3d and obj getQuads/handleBlockState methods.

FontRenderer

tabs -> spaces.

EntityRenderer, most of RenderGlobal, minor fix to LayerBipedArmor.

RendererLivingEntity, RenderEntityItem, RenderItem, RenderManager, LayerArmorBase; Item.getModel + ISmartItemModel are now inside ItemOverrideList; fix class rename in TESR patch.

A bunch of rendering rejects updated.

Updated various block model patches.

Some import renames and compile error fixes, killed ~800.

util, tileentity, stats, realms. Potions got an overhaul and out registry will need to be adapted.

net.minecraft.block.* patches

First few patches applied

Add rejects with mcp names for application to main codebase. Let's roll?

Add in mcp named patches and use them. Initial 1.9 setup.

Don't ignore rejects

Merge pull request #2476 from Abastro/fovfixes

Added Event: EntityViewRenderEvent#FOVModifier
Merge pull request #2500 from me4502/master

Added local click position to PlayerInteractEvent. Fixes #2482
Added local click position to PlayerInteractEvent.

Added EntityViewRenderEvent#FOVModifier

Enables mods to modify raw FOV directly.
Avoids modifier limit from FOVUpdateEvent.
Aware of blocks which are needed for fov change related with materials.

Fixed dummy blocks not being removed from registry on dedicated server correctly. Closes #2487
Also added some more debug logs!

Merge pull request #2497 from bonii-xx/universal_bucket

Fix WordServer.canCreatureTypeSpawnHere not using Forge Events.
Fix WordServer.canCreatureTypeSpawnHere not using Forge Events.
Followup of #2496

Merge pull request #2495 from elix-x/master

Increased actual maximum fuel burn time
Merge pull request #2496 from bonii-xx/universal_bucket

Fix WorldEvent.PotentialSpawns Event passing the list instance of the…
Fix WorldEvent.PotentialSpawns Event passing the list instance of the ChunkProvider to users

Increased actual maximum fuel burn time

Increased actual maximum fuel burn time from 32767 to 2147483647.
Backwards compatible.

ModelLoader: added verbose error logging showing items/blockstates associated with model locations; removed redundant cast leftover from ungenerified code; fixed up a couple of warnings.

Fix race condition when using indexed codec in a LAN server. Fixes spurious crash when LAN server is running.

Log when it's likely the indexedcodec is gonna fail, because of LAN server derps likely. Try and give some context for debuggers.

Merge pull request #2488 from bonii-xx/universal_bucket

Fix universal bucket logging an exception
Fix universal bucket logging an exception

Merge pull request #2485 from AlgorithmX2/world_getLightOpacity

Test getLightOpacity(world,pos) in World as well as the chunk.
Test getLightOpacity(world,pos) in World as well as the chunk.

Merge pull request #2443 from AlgorithmX2/cap_pickup_entityitem

Preserve ItemStack Caps when picking Items up.
Preserve ItemStack Caps when picking Items up.

Merge pull request #2429 from AlgorithmX2/in_material_hooks

In Material Hooks - For Swimming, Overlays, Boats, and Fishing.
In material Liquid Hooks.

Merge pull request #2481 from diesieben07/potion-draw-fix

Fix Potion.shouldRenderInvText
Fix Potion.shouldRenderInvText

Merge pull request #2478 from AlgorithmX2/pre_getLightOpacity

Fix bug with getLightOpacity based on TileEntities,
Fix bug with getLightOpacity based on TileEntities,
Capture getLightOpacity prior to removing the tile entity.

Fix loading of world ID maps for worlds without dummy data. Closes #2477

Merge pull request #2474 from bonii-xx/universal_bucket

Fix customized bucket names not getting translated correctly
Added default levels for fluid extended properties in fluid model.

Fix customized bucket names not getting translated correctly

Merge pull request #2333 from bonii-xx/universal_bucket

Add an universal bucket.
Add universal bucket

Fix chat formatting not surviving line wraps in chat messages.

Merge pull request #2470 from diesieben07/shader-fix

Fix the entity shader hook
Fix the entity shader hook

Merge pull request #2467 from iLexiconn/master

Added hook to add entity spectator shader
Merge pull request #2468 from nallar/master

Workaround JDK-8087309: Constant folding "static final boolean" is incomplete
Workaround JDK-8087309: Constant folding "static final boolean" in boolean expressions is incomplete

Added hook to add entity spectator shader

Protect BlockSnapshot and Chunk.getTileEntity from mutible BlockPos instances. Closes #2438

Fixed Block.onNeighborChange not being called for all axises. Closes #2428

Add missing classes to CrashReport preloading. Closes #2421

Fixed invalid item being passed to gatherCapabilities when itemstacks changed item. Closes #2445

Fixed implementation of RenderEntityItem.shouldSpreadItems. Closes #2448

Fixed vanilla bug where network clients would see incorrect break progress on blocks. Closes #2462

Fixed Block/Item.setRegistryName printing a incorrect warning when used. Closes #2398

Fixed Entity.shouldRiderSit modifying game logic and not just rendering. Closes #2402

Fixed invalid parameters being sent to LivingSpawnEvent.CheckSpawn. Closes #2453

Potential fix for NPE when using an item to open a slotless inventory. Closes #1354

Fix custom model loader reload hook not firing during registration.

Fix incorrectly updated patch to ChunkCache. Related to #2451.

Fix multiple registrations of reloading hooks in custom model loaders.

Remove Mojang logger spam in EntityItem.

Fix jar signer not applying to universal packed in the installer.

Fix TRSRTransformation.toItemTransform. Closes #2425.

Merge pull request #2437 from pau101/master

Fix #2321
Fix #2321

Merge pull request #2423 from Mumfrey/fix/jdt

Fix ASM SignatureReader choking on invalid lambda local var signatures emitted by JDT
Revert binary-incompatible changes in models.

Fix droppers not dropping.

One day I will learn to include all required classes in the commit.

Added "gui3d" and "smooth_lighting" options to the forge blockstate. Implemented them for vanilla and B3D models. Added generic types to IModel subinterfaces, to simplify chaining.

Merge pull request #2434 from matthewprenger/logcommandexceptions

Log unknown exceptions in commands. Resolves #2433
Log unknown exceptions in commands. Resolves #2433

Fix ASM SignatureReader choking on lambda signatures generated by JDT
Fixed incorrect patch to GenLayer, causing large vanilla biomes to not work properly.

Provide original armor model in the custom armor model hook.

Fixed small bug in item extraction code.

Fix NoSuchElementException in ModelBlockAnimation caused by empty event list.

Bump version in prep for new Recomended Build.

Loosen TileEntity's default hasCapability implementation. Modders should specifically opt in.

Merge pull request #2336 from VikeStep/master

[1.8.9] Add EntityTravelToDimensionEvent
Fixed minor race condition between mouse clicks and TESR in the animation example.

Add EntityTravelToDimensionEvent

Resolve Merge Conflict

Move event call inside conditional

Sometimes I forget how much trivial things are missing from Java 6.

Merge pull request #2331 from RainWarrior/model-animation

Model animation system
Model animation system.
Main things of interest:
  * IAnimationStateMachine - state machine for animations; can load
    from json.
  * AnimationTESR - automatic TESR for animated models.
  * AnimationModelBase - same for entities.
  * ITimeValue - time-varying value, used to control animation
    parameters from code.

  * TESRs can now be batched - look at TESR.renderTileEntityFast +
    TE.hasFastRenderer.
  * RegionRenderCache is not accessible to TESRs and other client-side
    logic - MinecraftForgeClient.getRegionRenderCache.

Fix J6 compile error in IItemHandler PR.

Merge pull request #2401 from ShetiPhian/Fix-isBeaconBase-BlockPos

Fixed: the BlockPos passed to isBeaconBase
Merge pull request #2385 from rwtema/master

Add IItemHandler capability
Add IItemHandler capability

Add the actual patches that I forgot.

Add simple implementations of IStorage and the factory methods.

Add ItemStackHandler. A simple IItemHandler implementaton.

return nulls, not throw nulls.

Move the vanilla wrappers to a separate class for now.

Minor clean ups of VanillaWrapper code.

Inline static methods.

Add comments.

Minor cleanup of code.

Remove redundant size field and add a validate slot index method.

Minor formatting issues.

Break early If stacksize to insert is 0.

Remove setByte() methods.

Throw exception if IItemHandler can't be modifyed in NBT loading.

Replace event handler with patches

Add capability to mine cart inventory entities.

Change formatting and registration of capability.

Make InventoryPlayer implements IItemHandler because why not. Also added a field to allow mods that add additional player inventory space to publicly expose them.

Reduce patch sizes

Lazy initialization of the item handler for vanilla tiles.

Minor formatting changes.

Create a single vanilla chest item handler that will merge with adjacent chests when detected. Added hooks to reset the cached adjacent value when a block update is detected and when a chunk loads.

Revert "Make InventoryPlayer implements IItemHandler because why not. Also added a field to allow mods that add additional player inventory space to publicly expose them."

This reverts commit 306d4a37fd0e8c8a0754411c013b750dfe8e2c87.

Fix furnace derp

Replace double chest code with a simpler method.

Vanilla wrappers implement IItemHandlerModifiable (since they are modifiable)

Minor code cleanups

Add an onContentsChanged() and onLoad() callback methods.to the default implementation.

Add slot as a parameter in the callback method.

Change IItemHandlerModifiable.setStackInSlot() to void, and added a note about not being intended for cross-mod use.

Improve ItemStackHandler handling of errored NBT.

Make the stacks array protected.

Fix a lot of derps in SlotItemHandler.

Fix derp in ItemStackHandler

Clarify comments on IItemHandler

ItemStackHandler no longer caches the stack array in local variable.

Clean up the Chests code to make intentions clearer

Vanilla hoppers have their cooldown activated when an item is inserted. Made this behavior part of an item handler (rather than the insertion code)

Fix mistake in ItemStackHandler

More documentation of potential edge cases in getStackInSlot()

Make limit checking more resiliant.

Fixed: BlockPos passed to isBeaconBase

Merge pull request #2378 from blay09/bugfix/slotdrop

Fix items being dropped through slots outside GUI boundaries
Merge pull request #2399 from asiekierka/fix-2388

Fixed ItemStack.splitStack not preserving capabilities, Closes #2388
Restore OreDictionary.getOres(String, boolean) and doeOreNameExist(String) functions that went MIA in git merge issue.
Original Commit: https://github.com/MinecraftForge/MinecraftForge/commit/cd3bbfb02c9fcd4ce4bbf00f460dfdd6a386d107

Fix invalid ServerHangWatchdog patch causing it to not apply.

Fix #2388

Merge pull request #2396 from Minecrell/patch-3

Strip console formatting codes for Vanilla log file
Merge pull request #2394 from iLexiconn/master

Fixed makeItemStack ignoring stackSize
Strip console formatting codes for Vanilla log file
Fixed makeItemStack ignoring stackSize

Fixes #2376
Fixed error detection login in ModelLoader, reduced the maximum number of printed stack traces to 5 per domain.

Fix forge logging not working correctly in ForgeDev.

Fix Deobfusication transformer throwing verification errores in Eclipse development environments.

Correctly handle error caused by missing/malformed bucket model definition file.

Call deserialze on capabilities in ItemStack.setItem. Closes #2384

Fix ItemStacks not getting the parent capability provider from items. Closes #2383

Merge pull request #2367 from kashike/feature/quiet-watchdog

Skip hang detection on first run of the server hang watchdog
Merge pull request #2358 from boq/bedless

Allow sleeping without bed block under player
Allow sleeping without bed

Fixed missing model error reporting, made block and item variants sort before loading, to make the splash screen info more useful.

Fix spruce not growing properly

Fixed problem with LAN connections seeing the original ProxyPacket and consuming the first byte. Closes #2373

Fix shouldRefresh not to be so over-eager about modded TEs. Should fix Packet21 causing a TE reset.

Fix items being dropped out of a GuiContainer when dealing with a slot outside of the xSize/ySize boundaries.

Clone FML packet indexes if channel is not open. Fixes potential threading issue.

Merge pull request #2375 from bonii-xx/dynbucket

Default bucket model is empty, allow bucket model without fluid.
Default bucket model is empty, allow bucket model without fluid.
This allows capsules, cans, bottles,... to use the same item model for their item variant. Also it's makes much more sense.

Merge pull request #2370 from mezz/screenBackground

Add DrawScreenBackgroundEvent
Add GuiScreenEvent.BackgroundDrawnEvent

Fix problem which meant runtime deobf to MCP names wasn't working. SRG named mods located in the mods dir of a dev
environment will now load normally.

Skip hang detection on first run of the server hang watchdog

New Capability system allowing for more manageable world object features.

When combined with @Optional this should address all issues of soft dependancy on mods/apis.
This also addresses the issue of dynamic functionality in TileEntities/Entities.

Current capability providers: TileEntity, Entity, ItemStack

Also added INBTSerializeable, a generic interface for game objects that can be written to/from NBT tags.

Vanilla capabilities will be coming soon, mostly on request and review.
So start requesting capabiliteis on vanilla/Forge features.

Fixed banners not droping the correct item when harvested using modded mechanics. Closes #2258

Fix jline server console not showing colored text. Closes #2334

Fixed GuiWrongMinecraft having wrong Log file name. Closes #2348

Made WrongMinecraftVersionException and ModSortingException a bit easier to read in log files. Closes: #2345

Remove dead code in JarDiscoverer. Closes #2346

Catch GROUND item transform type with the forge hook too.

Implemented face culling for item models, improves performance slightly. Closes #2326

Merge pull request #2355 from williewillus/fixentityitemdupe

Fix bug with /give command and items with larger than default lifespans
Fix visual effect entity persisting longer than it should

Fix derp

Fixed issue with WorldServer.getTileEntities when being called with ranges that overlap chunks oddly. Closes #2350

Made block model loading bar more robust, and fixed the count.

Added progress bar for the ModelLoader.

Derp.

Model loader improvements: adding custom data/textures to models that don't need them doesn't cause a error now, since it's common to put those in the defaults section of the blockstate json; you can get IModel associated with the variant now - using ModelLoaderRegistry.getModel; MultiLayerModel should now respect transformations applied to it, and respect part transformations.

STFU I know how to code. *shouts* get off my lawn!

Make the parent dir tree for the dep extractor

Changed default implementation of Block.getExtendedState. Closes #2309.

Java6 + Eclipse + Gradle strike again.

Fixed implementation if IRetexturableModel in ItemLayerModel. Closes #2244.

Don't crash on exception during loading of item variants from blockstate jsons.

Fixed perspective transformation handling for fluid models, changed inventory fluid model to use unrotated still texture.

Fixed invalid flow vector caching of still fluids.

Fixed random offset not working properly for flatly-lit models.

Explicitly close the file.

Add a simple ContainedDep mechanic- mods can contain other mods or libs, and can specify them using a manifest tag: "ContainedDeps".
This is a space separated (manifest standard) list of jar files that are to be extracted into the version specific directory.

There's also a special system property "fml.skipContainedDeps" that will allow for runtime skipping of extraction of contained deps (a comma separated list, based on the file name).

Added new get/setRegistryName functions to Item and Block.
And helper functions in GameRegistry to allow for registering using those names automatically.
This is to simplify registration and get rid of the horrible hacks users are doing now with 'unlocalised names'.

Move substitution activation after id loading. This should fix the problem of null for existing object.

SidedProxy now has sensible default values - nested ClientProxy and ServerProxy classes.

Merge pull request #2332 from killjoy1221/master

Add links for messages and other commands
Add links for messages and other commands

Reverted Render registration changes due to them working.

Nobody is left behind.

Fixed RenderingRegistry not working. Closes #2312.

Fix that the dummy registry entries don't allow clients connecting to servers. Also fix that it repeatedly nags about missing stuff in the world.

Fix boss health bar rendering when debug overlay is enabled. Closes #2328

Swap Mod and Realms button to fix new realms 'notification' icon.

Fix J6 compile issue with ModelFluid.

Allow for default 1.8.8 mods to be loaded. Should be SRG compatible.

Restored transparency to the Forge logo.

Updated the forge logo to a higher-quality GIF file. Closes #2276.

Fixed wrong import.

Fixed broken leaky caching of OBJ models.

Caching of fluid models. Fixes  #2145.

TESRs registering in preinit don't break pistons anymore. Fixes #2298.

Fixed color disabling not working for forge pipeline. Closes #2286.

1.8.9 update

Merge remote-tracking branch 'origin/1.8.8'

Merge pull request #2322 from bonii-xx/dynbucket

Fix bucket replacement not loading the bucket model by itself if repl…
Fix bucket replacement not loading the bucket model by itself if replacing buckets.
This happens when no other mod that uses the bucket model is present.
Also added a simple method for registering the bucket model, should give
modders an idea on how to use the general model.

Merge pull request #2320 from bonii-xx/slime

Add a hook for custom particle spawning for slimes
Add a hook for custom particle spawning for slimes

Merge pull request #2318 from diesieben07/entity-egg

Allow forge-type spawn-eggs to spawn child entities when clicking EntityAgeable
Allow forge-type spawn-eggs to spawn child entities when clicking EntityAgeable

Fix Button/Torch/Lever placement on stairs and slabs. Closes #2291

Fixed random block position offset not applying correctly.

Added an ability to register custom item variants, not ending with "#inventory". Should allow grouping multiple item models into 1 blockstate json.

Try and make sure active substitutions are immediately available in the block to item map.

Actually use the delegate for the itemblock

Capture ItemBlock remaps.

Try and fix registry NPE when substitution is active.

Blocks are no longer erased from the registry if the mod isn't present. This means that modded blocks can potentially retain their IDs
even if they are temporarily not present in the game. Currently TileEntity data associated with the block is erased.

Fix up persistent substitution. Should close #2259

Fix the channel handler naming. It now uses the standard netty namer for it, by careful use of cunning reflection.

Fixed vanilla bug related to spawning entities on top of fences. Closes #2303

Fixed registry issues that prevented connecting to 1.8 Forge servers.
More precisely: Servers with missing registries default back to frozen version.
Throw descriptive error if we do not have any information.

Merge pull request #2282 from bonii-xx/dynbucket

Add a dynamic bucket model that displays the animated liquid contained
Add a dynamic bucket model that displays the animated liquid contained
Has a config option (default off) that replaces the vanilla buckets with the forge bucket model

New original bucket textures from mr_hazard

Fixed NPE caused by accessing undefined layer in MultiLayerModel.

Merge pull request #2293 from Lunatrius/fix/client-command-autocomplete

Fix client side command auto-complete not working correctly.
Fix client side commands adding parts of the color codes on autocomplete (prefix "7" and suffix "r").

Fix dependency resolution for models with custom data/textures.

LightUtil.pack and .unpack now work correctly with unpacked arrays of size <4.

Delayed quad list resolution in MultiModel, fixes NPE in MultiLayerModel.

Forge pipeline will now take original model lightmap into account, if present.

Fixed java6 errors in previous commit.

IModel can now depend on a variant definition (ModelResourceLocation); added MultiLayerModel - simple model that'll render correctly in multiple layers + example of using it.

Preparations for the Animation system.
Changes to the Model API - IModelState now works with Optional. Handling of parts of the model is not optional, and coordinate space/result interpretation is up to the caller. IModel doesn't extend IModelPart by default anymore; MapModelState uses composition to achieve previous functionality, IModelPart implementations are disjoint now. Updated perspective handing to the new API, removed IPerspectiveState (MapModelState is now the same thing). Perspective transforms for the default fluid model.

Fix enchanting applying the same enchantment multiple times. Closes #2273

Merge pull request #2272 from AlgorithmX2/addLandingEffects

Added addLandingEffects allowing mods to override landing particles
Merge pull request #2270 from AlgorithmX2/getHighlightTip

Add getHighlightTip allowing a item to override its displayed renderToolHightlight
Added addLandingEffects allowing mods to override landing particles, for blocks that require world information to determine textures.

A test for issue #1848. Please try this with any mods you can @ 1.8.8, and see if you still get log spam of any kind (not just the
log message from the issue either).

Add getHighlightTip allowing a item to override its displayed renderToolHightlight.

Merge pull request #2268 from minzmann/master

[1.8.8] Minor Fixes to PotionEffect.java.patch
Fix derpage when loading a 1.8 world, with persistent state being entirely ignored in that case.

Update PotionEffect.java.patch
Merge pull request #2239 from bonii-xx/potionhiding

Add shouldRender() to Potions that allows to hide them completely in …
Merge pull request #2228 from Minecrell/patch-2

Fix some issues with the console command completion
Use ItemStack.hasEffect. closes #2230

Merge pull request #2233 from liachmodded/mcl-typo

Fix a typo in jar detection
Merge pull request #2248 from AlgorithmX2/isOpaqueFace

Added doesSideBlockRendering to provide finer grain face culling.
Added doesSideBlockRendering to provide finer grain face culling.
Implemented for BlockStairs and BlockSlab.

Fix wrong EventType passed for Emerald ore-gen.

Deprecate int IDs in FluidRegistry. Modders should only ever use the String name. Also add a 'friendly' exception when attempting to get an ID for a unregistered fluid. Closes #1374

Add EMERALD and SILVERFISH to GenerateMinable event. Closes #1158

Fixed ModList GUI rendering incorrectly. Closes #2254

Merge pull request #2253 from simon-i1-h/patch-1

[1.8.8] Fixed edge case where position dependent light would not update.
Fixed that oldLight is not being used.

Workaround for https://github.com/google/guava/issues/738

Fixed orientations of generated item faces. Fixes #2215.

Fixed colored leather armor, and custom armor textures.

Remove MCP reference patches.

Add shouldRender() to Potions that allows to hide them completely in the inventory

Improve the console command completer

- Fix space after command getting removed when completing a
  subcommand together with the command prefix
- Add support for completing without input (shows command list)
- Sort command completion results
- Fix console spamming command prefixes after closing the input stream

Add a flag to the modidremapping event. If the remapevent is because the registry is refreezing, it'll be true.

Fix typo in `guava`
Clean up chunk patch.

Merge pull request #2231 from techbrew-mc/patch-1

Initialize sources list
Initialize sources list

Fixes crash NPE thrown by addFile()
Most requested feature of all time? TileEntity init method called after it's ready to roll. remove all the if (firstTicks)

Merge branch 'Emberwalker-lang-adapter-fix' into 1.8.8
Closes #1898

Fix language adapter loading.

The language adapter is now properly picked up after the mod is loaded
on the classpath, fixing the ClassNotFoundException occurring before.
Also fixed some minor formatting and made it throw a full
RuntimeException on failure.

Fix up some formatting

Be noisy when API is in a coremod. It'll never work and modders should realize that fact.

Merge branch 'mezz-potionIsBadEffect2' into 1.8.8

Merge branch 'potionIsBadEffect2' of https://github.com/mezz/MinecraftForge into mezz-potionIsBadEffect2

Merge branch 'kashike-fix/secman' into 1.8.8

Merge branch 'fix/secman' of https://github.com/kashike/MinecraftForge into kashike-fix/secman

Allow entity selectors to select "." in entity names. Closes #2125

Merge branch 'Minecrell-jline' into 1.8.8

A few fixes

Fixup Jline integration

Merge branch 'jline' of https://github.com/Minecrell/MinecraftForge into Minecrell-jline

Some tweaks - GameRegistry is modder facing API, so avoid having MC methods there. Fix a couple of registry bugs.

Merge branch 'PotionRegistry2' of https://github.com/bonii-xx/MinecraftForge into bonii-xx-PotionRegistry2

Fix problem with spam from registry on loading a second world. Empty the staging.

Add a PotionRegistry to handle dynamic distribution and remapping of Potion IDs

Merge pull request #2209 from lumien231/MemoryWorldLeak1.8.8

Fixed: Server not being stopped, causing Worlds to stay loaded
Fix up blockstate rebuild. Closes #2221. Also fix formatting. IDEA has differences. Solved now.

Add chunk loading protection to WorldSever.getTileEntitiesIn, may prevent orphanced chunks and a CME in EntityPlayerMP. Note: The 'max' parameters are NON-inclusive.

Giant registry fixup

Compiler warnings pass, undeprecated SplashProgress related stuff.

Removed IItemRenderer class, all functionality is possible with new rendering system.

Fixed Large mushrooms generating incorrectly.

Fixed placing blocks on snow layers with more then one layer.

Bump version for new Minecraft version.

Propogate AbortException. Closes #2206. Also fix tracing printstream when printStackTrace is called.

Fixed: The Integrated Server not being stopped when exiting a singleplayer world to the main menu

Add .exc for StatList patch

More tweaking

Fix up a couple of patches, affected by the recent update

Fix button and lever placement problem. Closes #2204

Merge pull request #2205 from Illyohs/bugfix/mdk

[1.8.8] Remove trailing */ causing errors in the mdk build script
Remove trailing */ in the build.gradle

Signed-off-by: Anthony Anderson <lordillyohs@gmail.com>

More cleanups, some documentation, a bunch of deprecations.

Cleaning up some derpy names

Clean up some very long dead code. Bukkit hasn't existed in a very long time now. IASM never worked, and I'm not about to implement it.

Deprecate it as well, because hey, it's redundant now.

ONE EVENT BUS TO RULE THEM ALL AND IN THE DARKNESS FIRE THEM!

Yeah, amount is NOT deprecated.

Fix MDK for 1.8.8 using FG2.1 snapshot

OMG! Documentation? WUT? I haz lost my mind.
Also, Functional interface for IMC. Senders can send a classname implementing Guava's function, and receivers
will be able to get that function, and do, well, whatever, really. Probably best for those callback type
scenarios, connecting up APIs and stuffs.

Cleanup Fluid deprecations stuff.

Update universal manifest for 1.8.8's json.

Update mappings to 20151122.

Merge branch 'master' into 1.8.8

Merge remote-tracking branch 'origin/noci-1.8.8' into 1.8.8

Fixed NPE is B3D loader caused by the missing vertex normal; updated the example chest model - it's now has 2 meshes; Updated ModelAnimationDebug - it now uses the new chest model, renders the base with the static world renderer, and only the lid with the TESR.

Fixed forge lighting working incorrectly outside 0x1000000 coordinates.

Removed face doubles from item models.

Fix holes in generated item models.

B3D loader: removed 2 redundand null checks, changed constructor args to final to fix (java6?) inner arg error.

Implemented interpolation of TRSR transformations; B3D: added interpolation capabilities to B3DState, animated TESR example in ModelAnimationTest (pure TESR right now, no separation inside the example model between the static and dynamic parts right now).

Fix derpy fir trees in the taiga. So many patches. See if we can find any more mistakes?!

Fix weird patch issue where the this FG commit: https://github.com/MinecraftForge/ForgeGradle/commit/2f0ca9921b961133689d29b807333241010a802d
breaks if the exact end of a line is a srgname. Not ideal, but should work.

Small tweak to the OUT/ERR logger - should skip the Throwable stuffs now.

Back to srgnames for patches. We should be starting to look OK now.

Fixed forge lighting working incorrectly outside 0x1000000 coordinates.

Use the 2.1 snapshot for FG

Re-add trove and vecmath. Mojang no longer ship them.

Fix a typesig that was broken

Add jline-based console with colors and tab-completion

Removed face doubles from item models.

Fix holes in generated item models.

Fix invalid position passed to isAir/getLight in World.playAmbientSound

Merge pull request #2196 from Choonster/master

BiomeManager: Fix off-by-one errors
Fix bold font rendering, Unicode is 2x pixel density of normal.

BiomeManager: Fix off-by-one errors

B3D loader: removed 2 redundand null checks, changed constructor args to final to fix (java6?) inner arg error.

Use the FMLSecurityManager checkPermission(Permission) method for context-based permission checks. Fixes #2067

Enable the normal ModList GUI in game. Use GL_SCISSOR to support the transparent in-game GUI.

Moved client side Block.onBlockDestroyed to after Item.onBlockDestroyed to match server order.

Fix incorrect position passes to Block.getExplosionResistance from entities.

Implemented interpolation of TRSR transformations; B3D: added interpolation capabilities to B3DState, animated TESR example in ModelAnimationTest (pure TESR right now, no separation inside the example model between the static and dynamic parts right now).

This should be everything needed to separate blocks and items completely.

Merge branch 'master' into noci-1.8.8

Merge pull request #2117 from lumien231/master

Fixes Client Login Issue when logging into a non existent dimension
Fix Client Login Issue when logging into a non existent dimension

Remove a suppression

ExtendedBlockState, Properties generic updates.

Some generic and other warning cleanups

Merge branch 'master' into noci-1.8.8

Model stuff: updated to generics, fixed various warnings, added handling of new perspective types.

A few tweaks, things are starting to work now..

All the patches done? Some code fixups.. It begins.

Fix a newly missing AT. Remove all CL_ references. OBFID is gone.

WorldGen rejects, lots of them. Couple of small fixes elsewhere.

Enchantment,EnchantmentHelper,EntityEnderman,EntityZombie,EntityVillager,FurnaceRecipes,RecipeFireworks,RecipeRepairItem,NetworkSystem,S00PacketServerInfo
PotionEffect,StatList,Session,WeightedRandomChestContent,Explosion,ExtendedBlockStorage,SaveHandler.

All NBT patches seem to have been merged upstream, so removing. The IntegratedServer and MinecraftServer pending queue changes also removed, as fixed upstream.

Bump version for Recomended Build.

Overlay patch fix: use the correct block position.

EntityRenderer, StringTranslate rejects fixed.

TextureMap, TextureManager and Stitcher rejects fixed.

Manually updated WorldChunkManager, Chunk and BiomeDecorator patches, removed imports.

ItemBlock, ItemBow, ItemMonsterPlacer, ItemReed, ItemSign rejects fixed.

PlayerManager, PlayerProfileCache, ServerConfigurationManager, NetHandlerHandshakeTCP rejects fixed; ItemInWorldManager patch error fixed.

TileEntity and TileEntityHopper rejects fixed, GuiOverlayDebug patch fixed.

ItemRenderer, RenderGlobal, StateMap, RenderItem rejects updated.

RenderEntityItem, RenderPlayer, RendererLivingEntity, LayerArmorBase, ItemStack rejects fixed; changed Armor Layer hook to catch LayerBipedArmor only.

GuiButton, GuiChat, GuiCreateWorld, GuiIngameMenu, ServerListEntryNormal, GuiStats rejects updated.

EntityPlayer patch updated.

Updated FML Gui methods to WorldRenderer API changes.

LoadingScreenRenderer,Minecraft,GuiContainerCreative,PlayerControllerMP,LanguageManager,Locale,SimpleReloadableResourceManager,EntityList,EntityLivingBase,EntityWither,EntityMinecart,EntityPlayerMP

NethanlderPlayClient patch is now in vanilla. The FMLCommonHandler future exception catcher is not needed anymore, it's in Util. The caching of player profiles is now in vanilla (SkinManager).

Delete rejects that I initially processed.

BlockOre, BlockRotatedPillar, SoundManager, EntityPlayerSP, GuiScreen, GuiAchievements, GuiContainer, BlockModelRenderer, ContainerEnchantment, Slot updated manually and imports removed; GitSlot patch updated.

Merge pull request #2179 from arideus101/patch-1

Fixed issue where custom colored armor wouldn't be colored. (reverted from commit dee0b2084b519419bbf97d8ad177204830ea2b07)

Merge pull request #2179 from arideus101/patch-1

Fixed issue where custom colored armor wouldn't be colored.
Merge pull request #2177 from gabizou/master

Fix a possible NPE when checking supertypes of interfaces.
Allows Custom Armor Coloring to be done easily
Merge branch '1.7.10' - fix up some oredictionary and substitution related issues

Fix firing the remap event. It always fires now, and additionally fires when the registry reverts to frozen.
Most mods refer to the gameregistry for ids they care about, so this shouldn't affect anything significantly,
but if your mod was dependent on their being content in the remap event, and only acting on that content,
empty content means it's "reverted to frozen" state - the state at the start of the game.

Fix a possible NPE when checking supertypes of interfaces. Closes #2176.

Signed-off-by: Gabriel Harris-Rouquette <gabizou@me.com>

EntityAIAttackOnCollide, ServerStatusResponse, MinecraftServer, NetHandlerLoginServer, Vec3, BiomeGenBase, AnvilChunkLoader, ChunkProviderServer, MapGenRavine, MinecraftServer updated; fix in Block, GuiIngameForge; can load the world and play with ~20 more manual error fixes.

WorldProvider, WorldType, WorldServer, WorldServerMulti

IntegratedServer, World, EnumChatFormatting and EnumFacing

FontRenderer + Item patch update; WorldVertexBufferUploader patch derp fix.

Fix generics and error in the BlockState patch.

Updated various rendering-related patches and classes to 1.8.8; forge still uses vecmath.

Two more corner cases in the oredictionary. Should work for all cases now.

Patches and rejected patches. Note: some which had imports are not listed here because they need
to be refactored not to have imports.
Progress: https://gist.github.com/cpw/29695e426e2b122cf8ff

Test of mcp patching

Fixed Stronghold Library not having anything in it's chests.

Fixed Open url confirm screen not showing URL.

regenerate reference patchset at patches.mcp. These will be used to generate a new patchtree under patches.

1.8.8 initial work

Merge pull request #2174 from diesieben07/findBlockFix

Fix GameData.findBlock
Fix GameData.findBlock

Fixed anaglyph transformation not being applied in the forge lighting fully.

Provide ItemCameraTransforms for vanilla models when possible.

OBJ loader: reworked texture resolution: keys now have to start with #, like every other model loader; models without explicit library now work, remapping is possible by using the key "#OBJModel.Default.Texture.Name"; in addition to remapping by material name, remapping by texture name works too, like in other model formats.

Performace fix for item rendering.

Merge pull request #2167 from Choonster/master

Fix texture error message for broken textures
Fix texture error message for broken textures

-- Fixes #2100
-- Iterates over badTextureDomains instead of missingTextures.keySet()
as a domain can have broken textures without any missing textures

Introduce a new centralized version checking system.
Using the @Mod annotation mods can opt-in to a centrally controlled update system.
This is PURELY a notification system and will NOT automatically download any updates.
The End User can control which mods check for updates and disabel the system entirely using the Forge Config and GUI.
Format for the json the URL must point to is described here: https://gist.github.com/LexManos/7aacb9aa991330523884

Redesign the ModList GUI to use a scrolling list for the main body content.
Allowing for larger information to be displayed.
URLs are auto-detected and now clickable.
Mod Logos are now centered, it looks better.

Merge FML and Forge lang file, and update crowdin project.

Fixed block color multiplier not being cached properly in the forge renderer, performance improvement.

OBJ model: use original vertex material when defining face.

Merge pull request #2161 from The-Fireplace/master

Fixed a bug with GuiConfigEntries.SelectValueEntry
Fixed a bug that caused the config option name to overlap with the selectable values when using GuiConfigEntries.SelectValueEntry, fixes #2114

Obj loader: fix vertices shared between faces having the same attributed (uvs/normals).

OBJ loader: fixed another whitespace-related issue; removed unused "modifyUVs" property for now; added the "flip-v" property to switch between OpenGL-style and DirextX-style model UVs; fixed normals - they are now correct in-world, still a bit strange for the items; fixed normals a little bit for B3D models too.

Fix color multiplier applied incorrectly for items.

OreDictionary will warn if there's an invalid ore being registered now, rather than just
using -1 and doing weird things with the list as a result.

Fix substitutions for recipes and oredict recipes. Should mean that substitutions start working properly.

Merge pull request #2154 from shadekiller666/OBJ_Loader

OBJLoader Update: Fix for normal generation, whitespace handling, and UVs outside 0-1 range
Fix for the previous commit - transparent blocks were handled improperly.

Changed how the forge lighting system handles holey models for opaque blocks; it now mimics vanilla behaviour, which allows light to pass through them.

OBJLoader: Quick bandages to support/fix the new way that face/vertex normals are calculated, a very quick bandage to patch TextureCoordinates for the time being, and the Parser now uses a Pattern to split strings on whitespace instead of only splitting on " ".

Merge pull request #2151 from AbrarSyed/patch-1

Update FG version to 2.0.2
Merge pull request #2146 from bonii-xx/potionidfix

Fix Potion IDs above 127
Update FG version to 2.0.2
Merge pull request #2126 from diesieben07/join-world-fix

Fix CME when entities are spawned from EntityJoinWorldEvent
More lighting fixes, flat lighting now works correctly for grass and torches.

Fixed normal calculation for vanilla models, fixed the grass darkening and simular issues.

Fixed piston rendering (WorldRenderer offset wasn't applied); fixed TESR being registered too early in one of the debug mods.

Fixed another generic issue in MultiModel.

Provide a IModel for "builtin/generated", fixes #2147

Fixed AO being applied to OBJ model transparency, and OBJ loader trying to force the loading of the builtin white texture.

Fixed generic bug in MultiModel

Perspective awareness for vanilla and multi models, fixes #2148.
Improved error handling in MultiModel.

Merge pull request #2091 from shadekiller666/ItemModelLoadingFix

Fixed a bug with item model loading 
Small fix for reworked classic lighting

Fixed a bug with item model loading that would occur if ModelBakery.addVariantName() was called with the same string location parameter for 2 different items, and the string pointed to a location that didn't exist, where ModelLoader.loadAnyModel() would substitute the blockdefinition in for the item model, but wouldn't remove the original input location from the loadingModels list, which would cause the location from the second call to throw an IllegalStateException even though that location now has a model.

Added OBJ loader for the ModelLoaderRegistry system.

Added back in the lost class

Model pipeline system.
Should replace all ad-hoc quad generation methods in forge, and make IBakedModel -> WorldRenderer data transfer faster. Added IVertexConsumer + helper classes; lighting that works correctly for non-axis-aligned faces using the new infrastructure. Changed smooth lighting algorithm, now it should work correctly for everything.
New block lighter can be disabled in the forge config options.

Fix Potion IDs above 127

Allow server to access Potion isBadEffect()

Merge pull request #2022 from simon816/guava-apache-lcl-exclusion

Add Guava and Apache to LaunchClassLoader exclusion list on server
Merge pull request #2129 from darkevilmac/master

Add PlayerSetSpawnEvent
Add PlayerSetSpawnEvent

Fix CME when entities are spawned from EntityJoinWorldEvent

'#' is now added automatically to the beginning of the texture names in B3D models, and the remapping is expected via the blockstate JSON, since it's more reasonable than adding it to the file name in the modelling program or matching the resource location with the filename.

Fixes Attributes.transform affecting only 1 vertex.

Merge pull request #2103 from olee/patch-1

Fix possible crash in EventBus
Merge pull request #2120 from luacs1998/eventbus_fix

Fix a possible crash in EventBus
Fix a possible crash in EventBus

Merge pull request #2118 from rubensworks/itemmonsterplacer-dispenser

Fix dispenser action for modded spawn eggs
Fix dispenser action for modded spawn eggs

Fix entity count being incorrect for spawning logic. Now filter out 'persistant' entities.

Update Gradle wrapper to 2.7

Merge pull request #2002 from ganymedes01/master

Disallow conflicting furnace recipes
Workaround for MinecraftForge/ForgeGradle#256

Disallow conflicting furnace recipes

FMLNetworkHandler.openGui should not try and open a GUI on a FakePlayer.
Fixes #2082 and probably dozens of mod errors. Also, side benefit of the
merged codebase! FML code can ref Forge code!

Merge branch 'laci200270-patch-1'

Format a bit better

Merge branch 'patch-1' of https://github.com/laci200270/MinecraftForge into laci200270-patch-1

Much requested temporary hack for items and TESRs. Context: #1582, #1597, #1713, #2058 and others.

Merge pull request #2086 from Vorquel/master

Fix faulty channel name checking
Merge pull request #2069 from simon816/profile-request-fix

Use already provided profile for the player's own skin
Use already provided profile for the player's own skin

Add Guava and Apache to LaunchClassLoader exclusion list on server

Move exclusions to common place. Less likely to get out of sync

Fix possible crash in EventBus

There is currently no way to check if an event handler has been registered or not.
But when trying to unregister a not-registered event handler, Minecraft crashes with a NullPointerException.
This is a simple fix to prevent such crashes.
More cleanup of the default eclipse workspace. The project is now called "MDKExample" not "Minecraft".
The project tree is now contemporary, instead of a copy from 1.5.x era MC. The launches are cleaned up, and refer to
a better default "runDir" of "run" rather than "eclipse".. Updating to FG2.0.1 which will contain relevant binary fixes.

Fix eclipse workspace inside the mdk - don't run it through the tokenconverter. Also add in CREDITS-fml.txt to the MDK - it's still required.

Fixed issue where config folder would not be created before SplashProgress tried to read from it.
Default macs to disable the new loading screen due to to many macs having issues.
Users can enable it again by editing their config.
Catch and gracefully handle more errors when starting up the Splash Screen.

Update gradle wrapper and fix changelog task.

Fix faulty Channel name
Fix crowdin again. Run, jenkins, for god's sake, run!

Fix crowdin task. Good luck jenkins, lets roll!

Fix ciWriteBuildNumber task. Ugly, but it works.

Merge branch 'fg2'

Remove patches

Update FMLSecurityManager.java
Fix packaging the gradle wrapper properly. There is still a problem with
the MDK- it fails to run setupDecompWorkspace.

Filed an issue at ForgeGradle, since this seems to be something FG2 shouldn't
be doing, but is?

https://github.com/MinecraftForge/ForgeGradle/issues/235

Trying to fix the MDK to include gradle wrapper, but the gradle-wrapper.jar is
corrupted. @AbrarSyed can you take a look?

The final nail in the coffin. BYE!

Fix MDK task - it now runs.

Merge pull request #2072 from AbrarSyed/fg2

Added MDK package
added MDK package

Merge pull request #1969 from diesieben07/blockhighlight

Re-introduce RenderBlockOverlayEvent
FML's metabolic processes are now history. FML's off the twig. FML's kicked the bucket, FML's shuffled off this mortal coil,
run down the curtain and joined the bleedin' choir invisible!! THIS IS AN EX-PROJECT!

Vestigal fml-ectomy.

FML is no more. FML has ceased to be. FML's expired and gone to meet its maker. FML's a stiff! Bereft of life, FML rests in peace.

Merge branch 'master' of https://github.com/AbrarSyed/MinecraftForge into fg2

Merge branch '1.7.10'

fixed deployment credentials

Fix placing skulls on fence posts. Closes #2055

Merge pull request #1968 from modwizcode/master

Fix harvest logic running in addition to shearable logic
Merge pull request #2048 from shadekiller666/UnlistedPropertyValue

Fix for ExtendedBlockStates containing at least one IProperty and one IUnlistedProperty preventing block placement.
Fixed a bug with ExtendedBlockStates containing at least one IProperty and one IUnlistedProperty not allowing blocks to be placed.

Merge pull request #2017 from liach/add-enum

Add hook for adding EnumPlantType and fixed npe in BiomeType
Merge pull request #2004 from simon816/sign-nbt-fix

Fix placing signs with NBT prompting for text
Merge pull request #2047 from Zaggy1024/forgeblockstatesv1fixes

Fixed two bugs with the Forge blockstates v1 loader.
Fixed a Forge blockstates json removing models causing an NPE in the loader.
Fixed the deep clone of a V1 Variant not cloning the submodels properly.

Merge pull request #1983 from clienthax/patch-1

Make layer methods public
Merge pull request #2044 from rubensworks/enumfacing-server

Remove SideOnly's from EnumFacing allowing full class to be used on both sides.
Make EnumFacing events available server-side

Merge pull request #2035 from rubensworks/master

Fix source block check for BlockFluidClassic
Fix source block check for BlockFluidClassic
Cherry pick some changes from 1.8 for inner class discovery, also fix the negativecache. Closes #1872

Merge pull request #2023 from diesieben07/entity-pick

Allow the new entity eggs to be created via middle-click on an Entity while in creative mode.
Allow the new entity eggs to be created via middle-click

Add an EnumHelper hook and fixed an issue

Be a little bit more helpful when the ObjectHolder misses. Should help figure out what is going in in #2006

Wake up the FluidRegistry before any mods start loading. Should stop mods claiming to own water or lava (depending on who accessed
FluidRegistry first)

Actually rebuild the fluidNames each rebuild, don't just try and force changes in. Should fix #1973

Fix placing signs with NBT prompting for text

Signed-off-by: Clienthax <clienthax@gmail.com>

Merge pull request #1978 from RainWarrior/model-rotation

Custom transformations in forge blockstate json.
Custom transformations in forge blockstate json.

updated installed gradle. not finished

fixed local-building fail with changelog

added jenkins compat tasks

Added FG2 buildscript + updated for Gradle 2.4

 removed old unnecessary stuff

DeobfuscationData no longer required at dev time

added hardcoded fml version file

removed broken and duplicate AT lines

Fixed ItemMonsterPlacer.getEggInfo missing return. Closes #1975
Merge pull request #1974 from Lunatrius/white-screen-fix

Fixed error GUIs showing a white screen
Fixed error GUIs showing a white screen and replaced a rogue direct GL call.

Fix particle texture of the generated item models.
Merge pull request #1972 from bonii-xx/StateMapDomainFix

Fix StateMap always mapping properties to the "minecraft" domain
Add debug for max texture size and output when Texture Atlas can not stitch all textures.

Fix StateMap always mapping properties to the "minecraft" domain instead of the mods, causing it to not find BlockState definitions.

ObjectHolder works great, but it should be a lot less spammy about failed lookups. They're usually mod options.

Re-introduce RenderBlockOverlayEvent, seems to have been missed during 1.8 update

Fix harvest logic running in addition to shearable logic

More descripotive error if Patcher is passed invalid data for vanilla classes.

There's no Map.getOrDefault in java6.

Vanilla models can now use custom textures. Fixes #1962

Fixed perspective transformations for item models.

Fix AT for Block constructor.

Added ItemLayerModel - less awkward, simpler and faster version of ItemModelGenerator.

Merge remote-tracking branch 'origin/master'

Merge branch '1.7.10'

Conflicts:
	fml/patches/minecraft/net/minecraft/client/Minecraft.java.patch
	fml/patches/minecraft/net/minecraft/client/renderer/texture/TextureMap.java.patch
	fml/patches/minecraft/net/minecraft/client/resources/SimpleReloadableResourceManager.java.patch
	fml/src/main/java/net/minecraftforge/fml/relauncher/CoreModManager.java
	patches/minecraft/net/minecraft/client/Minecraft.java.patch
	patches/minecraft/net/minecraft/client/network/NetHandlerPlayClient.java.patch
	patches/minecraft/net/minecraft/client/renderer/texture/TextureMap.java.patch
	src/main/java/net/minecraftforge/client/model/obj/WavefrontObject.java

Merge pull request #1858 from FlansMods/master

Hook for Camera Angles, Including Roll
Mods that are extracted to the mods dir by unzipping or whatever will now cause the game to crash. Too much info is in the META-INF now,
and more will be being added. Extracting to the mods dir just completely breaks that.

Merge pull request #1956 from lawremi/mesadictfix

fix logic for guessing mesa tag in biome dict
fix logic for guessing mesa tag in biome dict

Time each bar in the loading screen and print it to the log, useful information to see where most time is spent in loading.

Add TextureManager to loading screen.

Make TextureMap for items and blocks skip the first pass of loading/stitching textures.
Should decrease loading times for large packs.
May cause issues with some mods so use -Dfml.skipFirstTextureLoad=false to disable.

Add the stitching allocation stage to loading screen.

Create config folder in SplashProgress if it does not exist.

New system in EntityRegistry to allow modders to register spawn eggs.
For entites that do not use the global ID system.
{Which no mod entity should}
Vanilla spawn eggs will now detect a 'entity_name' entry in it's NBT data and use that for spawning/rendering.

Patch line number update. Ignore this.

Merge pull request #1952 from ganymedes01/master

Change permission levels on ore recipes parameters
Merge pull request #1953 from ganymedes01/patch-1

Fixed NPE when calling canBrew
Use Guava instead of Nio for J6 compatibility.

Fixed NPE when calling canBrew

Oversight on my part,

If the ingredient doesn't return true in Item.isPotionIngredient, Items.potionitem.getEffects(stack) returns null, causing an NPE to be thrown later on.

This invalidates #1947.
Change permission levels on ore recipes parameters

Merge pull request #1922 from RainWarrior/model-fluid2

1.8 model fluid renderer
Added fluid renderer.

Make Item.shouldCauseReequipAnimation is bit more precise and copy over the new item for rendering even if the animation is diabled.

Add vanilla block rotation support back in for certain blocks that were missed in 1.8 update. Closes #1903

Merge pull request #1941 from xxmicloxx/xxmicloxx-patch-b3dloader

Bugfix for B3DLoader
Merge pull request #1932 from cheeserolls/patch-1

Fix incorrect block position in BlockReed canPlaceBlockAt
Merge pull request #1506 from mezz/GuiScreenInputEvents

Add GuiScreenEvents for keyboard and mouse input
Merge pull request #1781 from ShetiPhian/Block.getPickBlock

Player sensitive version of Block.getPickBlock
Add Item.shouldCauseReequipAnimation to allow modders more control over the 'Reequip' animation.

Fixed compile issues with irtimaled's PR.

Fixed Wavefront Object Importer reading files with integer values. Closes #1651, #1654

Make FML Gui classes use GlStateManager. Closes FML#615

Merge pull request #1749 from irtimaled/master

Copy fortress.dat from the overworld to the Nether. Fixes #1747
Bugfix for B3DLoader

Fixup model loading errors not being printed by making ICustomModelLoader.loadModel propogate IOExceptions as needed.

Cleanup code format in LayerBreakingTest.

Include the thread state in the potential error handleing for SplashProgress.

Throw more descriptive errors when mods attempt to register invalid global entity IDs.

Merge branch '1.7.10'

Conflicts:
	fml/src/main/java/net/minecraftforge/fml/common/MinecraftDummyContainer.java
	fml/src/main/java/net/minecraftforge/fml/common/registry/FMLControlledNamespacedRegistry.java
	fml/src/main/java/net/minecraftforge/fml/common/registry/LanguageRegistry.java

Merge pull request #1935 from superckl/master

Fixed two exceptions in BiomeDictionary related to adding new Biome Types.
Fixing two IndexOutBoundsExceptions from the BiomeDictionary

Fix incorrect block position in BlockReed canPlaceBlockAt

block.canSustainPlant is called on the wrong block position.  It should be called on the block below (the 'soil' block).

Cleanup mod state dump to be easier to read by displaying the states in abreviation and placing them before the mod info.

Cleanup mod signature data table. Easily seperating those mods with signatures vs those with none.

Quiet CrashReport class pre-loading debug, no flag to re-enable.

Quiet FMLControlledNamespacedRegistry debug spam by default. Reenable using -Dfml.debugRegistryEntries=true.

Quiet ClassPatchManager debug spam by default. Reenable using -Dfml.debugClassPatchManager=true.

Cleanup some spammy output.

Bump version for new RB

Copy over parent's modelSet value in variants as well.

Bump version for new RB.

Merge branch '1.7.10'

Merge pull request #1795 from lumien231/ExperienceEvent

Added LivingExperienceDropsEvent to change how much experience an entity drops
Merge pull request #1907 from johnjohn/master

Added ItemMap type check to item frames and ItemRenderer, enabling vanilla style rendering for custom ItemMaps
Redefine removal value in IRetextureableModel from null to empty string {""} due to ImmutibleMap not allowing null Values. Closes #1927

Merge pull request #1881 from ganymedes01/master

Added a brewing recipe registry system
Added ItemMap type check to item frames and ItemRenderer, enabling vanilla style rendering for custom maps

Added a brewing registry system

Missed patch for sign fix.

Remove worlds from WorldBorder when unloaded tol prevent memory leak, Closes #1923

Limit Sign text to 384 json characters and strip control codes. This is 1.8.7's Sign fix. Thanks Searge.

Attempt to synchronize the state for vanilla client completions and quit the handler if the vanilla
thread has already setup the connection. Should fix #1924

Change custom payload lock to be buffer itself incase multiple packets use the same backend buffer. Closes #1908

Merge pull request #1868 from fuami/ISmartBlockModel_Damage

Add Block Breaking Animation for ISmartBlockModels
Added Breaking Animation for Smart Models, Checking each layer.
Added Layered Smart Render Test.

Update README.txt
B3D Improvements
 - fixed keyframe transformation application
 - textures are now resolved the same way as in vanilla models
 - added the ability to use forge blockstate texture information
 - removed unused code from the B3D example

fixed AT missing for getModelBlockDefinition

Fixed missing variant logging; added the possibility to specify the item variant in the blockstate json.

Fixed partial variant detection in the forge blockstate loader.

Mitigate potential issue with users requesting lots of server status information by caching ServerStatus json.

Merge pull request #1912 from clienthax/master

Add missing forge patch from 1.8 port
Add missing forge patch from 1.8 port
https://github.com/MinecraftForge/MinecraftForge/blob/1.7.10/patches/minecraft/net/minecraft/client/Minecraft.java.patch#L88

Fix up the client/server fluid race condition that could cause the game to bail when an SSP game connects.
There's still a teeny gap, but it's MUCH less prominent than it was before.

Merge pull request #1885 from LexManos/EnhanvedBlockStateJson

Hook BlockState's Json loading to add support for simplified Forge format.
Hook BlockState's Json loading to add support for simplified Forge format.
See https://github.com/MinecraftForge/MinecraftForge/pull/1885 for more details.

Fixed missing import in last merge.

Merge branch '1.7.10'

Conflicts:
	fml/patches/minecraft/net/minecraft/client/Minecraft.java.patch
	fml/src/main/java/net/minecraftforge/fml/client/FMLClientHandler.java
	fml/src/main/java/net/minecraftforge/fml/client/SplashProgress.java

So we can't print a lot of unicode in the splash screen, so restrict to a hard subset we know we CAN print, closes #1910

Merge pull request #1911 from AlgorithmX2/ItemFramesOnSolidSurfaces

Allow placing item frames on Solid Block Faces (isSideSolid)
Allow placing item frames on Solid Block Faces (isSideSolid)

Finish loading screen before going fullscreen. Closes MinecraftForge/FML#662

(cherry picked from commit 19d7e16fa6a28c5665de1ed6e50d8699e865bff2)

Conflicts:
	fml/patches/minecraft/net/minecraft/client/Minecraft.java.patch

Attempt to disable the new splash screen if there are errors detected finishing up. Print a slightly more helpful error message.

(cherry picked from commit e3211eec0469dc6717943010d584207b7abdb1e0)

Conflicts:
	fml/src/main/java/cpw/mods/fml/client/SplashProgress.java

Bump minor version # to 2 because of the fluid changes (mirroring what happening in 1.7.10)

Merge branch '1.7.10' - imports all the fluid fixups and other stuff from 1.7 into 1.8

Conflicts:
	fml/src/main/java/net/minecraftforge/fml/common/FMLCommonHandler.java
	fml/src/main/java/net/minecraftforge/fml/common/Loader.java
	patches/minecraft/net/minecraft/client/Minecraft.java.patch
	patches/minecraft/net/minecraft/client/renderer/texture/TextureMap.java.patch
	patches/minecraft/net/minecraft/item/ItemArmor.java.patch
	patches/minecraft/net/minecraft/nbt/CompressedStreamTools.java.patch
	patches/minecraft/net/minecraft/nbt/NBTTagCompound.java.patch
	patches/minecraft/net/minecraft/nbt/NBTTagList.java.patch
	patches/minecraft/net/minecraft/world/World.java.patch
	patches/minecraft/net/minecraft/world/WorldProvider.java.patch
	src/main/java/net/minecraftforge/common/ForgeVersion.java
	src/main/java/net/minecraftforge/common/network/ForgeMessage.java
	src/main/java/net/minecraftforge/fluids/BlockFluidBase.java
	src/main/java/net/minecraftforge/fluids/FluidContainerRegistry.java
	src/main/java/net/minecraftforge/fluids/FluidRegistry.java
	src/main/java/net/minecraftforge/oredict/OreDictionary.java

Add in an ItemStackHolder - a way to inject ItemStacks without having to have complex lookup code everywhere.

Example: https://gist.github.com/cpw/9af398451a20459ac263

Fixed damage reduction rate of vanilla armor incorrectly scaling with armor's current durability.

Merge pull request #1892 from AlgorithmX2/vanilla_lighting_bug

Fix Vanilla Lighting Bug - Fixes Top/Bottom Faces interpolation.
Force netty downgrade on dedicated server to match client. Netty bug: https://github.com/netty/netty/issues/2302 Closes #1848

Fix Partial Face Lighting on Top/Bottom Faces ; Vanilla MC-80148

Fixed command exploit with C12

Fixes  MC-75630 - Exploit with signs and command blocks

Finish loading screen before going fullscreen. Closes MinecraftForge/FML#662

Attempt to disable the new splash screen if there are errors detected finishing up. Print a slightly more helpful error message.

Cleanup a lot of spammy output. Everything hidden behind environment flags now. Scale anvil image down 50%

Loosen up ServerChatEvent to support IChatComponent Closes #1893

Merge pull request #1804 from Prototik/font

Add true support for unicode fonts
Add true support for unicode fonts

Merge pull request #1886 from diesieben07/texture-load-crash

Fix crash when texture loading throws RuntimeException without message
Fix crash when texture loading throws RuntimeException without message

Added CameraSetup sub-event for camera angles

Allows players to alter yaw and pitch of renderViewEntity, but more importantly, adds the ability to roll the view.

Added camera roll hook

Merge pull request #1882 from t1g3l/master

Changed forge command tab completion to use getListOfStringsMatchingL…
Changed forge command tab completion to use getListOfStringsMatchingLastWord()

Merge pull request #1878 from t1g3l/master

Added tab completion to /forge command.
Clean up transformers a bit. Can't use COMPUTE_FRAMES even though it's required - the game refuses to even
run if I do. Note for j8: when we force Java8 classes, all coremods will need a thorough overhaul - the
current way we do things is not sustainable when Java8 becomes the universal norm.

Strip control codes in progress bar messages. They cause crashes sometimes.

Added tab completion

Hardcode the FML version in-game as a specific value.

Attempt to fix the slow loading problem. Instead of forcing the main thread to wait around
on every call to processWindowMessages, we will simply skip it, if the mutex is already
claimed by the display thread. This should fix slow loading issues seen by some with
the new loading screen.

Fix patches after last fml merge.

Merged FML @ 1.7.10

Merged FML

Merge branch '1.7.10'

Conflicts:
	patches/minecraft/net/minecraft/client/Minecraft.java.patch
	src/main/java/net/minecraftforge/fml/client/FMLClientHandler.java
	src/main/java/net/minecraftforge/fml/client/FMLFileResourcePack.java
	src/main/java/net/minecraftforge/fml/client/FMLFolderResourcePack.java
	src/main/java/net/minecraftforge/fml/common/FMLCommonHandler.java
	src/main/java/net/minecraftforge/fml/common/IFMLSidedHandler.java
	src/main/java/net/minecraftforge/fml/common/LoadController.java
	src/main/java/net/minecraftforge/fml/common/Loader.java
	src/main/java/net/minecraftforge/fml/common/asm/transformers/EventSubscriptionTransformer.java
	src/main/java/net/minecraftforge/fml/server/FMLServerHandler.java
	src/main/resources/fml_at.cfg

Merge pull request #1863 from Tmtravlr/master

Initialized the Nether Fortress chest loot
Initialized the Nether Fortress chest loot

Forced the nether fortress chest loot to initialize in ChestGenHooks
like the other types.

Changed tabs to spaces. Silly Eclipse.

Update current json

MinecraftForge/FML@0b84b6aa297bdf6ab9f010e340f286442cb242dc Expose the state of the loader

Merge branch '1710ls' into 1.7.10

Expose the state of the loader

Merge pull request #1853 from Silfadur/master

Added hook for  IPerspectiveAwareModel in RenderItem.renderItemIntoGUI f...
Added hook for  IPerspectiveAwareModel in RenderItem.renderItemIntoGUI for  ItemCameraTransforms.TransformType.GUI

Updated FML:
MinecraftForge/FML@2ed00c4da0ee76eb15e28eb8ee2c07a3096155c2 Splash progress screen will not load in the presence of optifine anymore.
MinecraftForge/FML@adcf2247c69f68415033a3c0b2c527053733514c Loading screen: moved config file to the standard config directory; added the option to load textures from the custom resource pack
MinecraftForge/FML@91338433fa74e782e237643632de2cc5e17ee280 Add classloader exclusion for ASM
MinecraftForge/FML@7c10b93a2ded2799d41b73b67a2766c31e992d8a Synchronize the available libraries. Turns out we've been forcing a newer apache commons-lang(3.2.1) for a long time, also sync the dev guava - we've been forcing 17 for a long time too. Bumping commons-lang to 3.3.2 since that's what Mojang are shipping with 1.8. It has no observable ill effects Closes MinecraftForge/FML#651
MinecraftForge/FML@8ccfa24764a3f4854f5334c0da1224286175e13b Merge pull request MinecraftForge/FML#650 from luacs1998/1.7.10
MinecraftForge/FML@b2650a0bdb7d69010a55de518e76591a6c417e87 Optifine can tell us when they're ready for the new splash screen.
MinecraftForge/FML@02a5a58a1cbb25cd3baecf1535950e4780b7810f Fix the ordering of the messages, so they make sense now.
MinecraftForge/FML@dda431353953457608c38aacb060ef82ddc88883 Revert "Merge pull request MinecraftForge/FML#650 from luacs1998/1.7.10" This undoes the seriously broken change from Sponge to support Mixins, that breaks a wide variety of coremods. Given the widespread incompatibility it introduces, it won't be re-added at 1.7.10.
MinecraftForge/FML@5dbb481732bf4bcf8b0c5c02806051a933e6587e Eliminated texture name allocation race condition
MinecraftForge/FML@450b82ca0e13cf889a42eeb198b67115a4851031 Updated default forge logo to animated gif; reverted config folder resolution to Minecraft class due to Loader not being initialized at the point it's needed

Updated default forge logo to animated gif; reverted config folder resolution to Minecraft class due to Loader not being initialized at the point it's needed

Eliminated texture name allocation race condition

MinecraftForge/FML@dda431353953457608c38aacb060ef82ddc88883 Revert "Merge pull request #650 from luacs1998/1.7.10" This undoes the seriously broken change from Sponge to support Mixins, that breaks a wide variety of coremods. Given the widespread incompatibility it introduces, it won't be re-added at 1.7.10.

Revert "Merge pull request #650 from luacs1998/1.7.10"
This undoes the seriously broken change from Sponge to support Mixins, that breaks
a wide variety of coremods. Given the widespread incompatibility it introduces, it
won't be re-added at 1.7.10.

This reverts commit 8ccfa24764a3f4854f5334c0da1224286175e13b, reversing
changes made to 7c10b93a2ded2799d41b73b67a2766c31e992d8a.

MinecraftForge/FML@adcf2247c69f68415033a3c0b2c527053733514c Loading screen: moved config file to the standard config directory; added the option to load textures from the custom resource pack
MinecraftForge/FML@91338433fa74e782e237643632de2cc5e17ee280 Add classloader exclusion for ASM
MinecraftForge/FML@7c10b93a2ded2799d41b73b67a2766c31e992d8a Synchronize the available libraries. Turns out we've been forcing a newer apache commons-lang(3.2.1) for a long time, also sync the dev guava - we've been forcing 17 for a long time too. Bumping commons-lang to 3.3.2 since that's what Mojang are shipping with 1.8. It has no observable ill effects Closes #651
MinecraftForge/FML@8ccfa24764a3f4854f5334c0da1224286175e13b Merge pull request #650 from luacs1998/1.7.10
MinecraftForge/FML@b2650a0bdb7d69010a55de518e76591a6c417e87 Optifine can tell us when they're ready for the new splash screen.
MinecraftForge/FML@02a5a58a1cbb25cd3baecf1535950e4780b7810f Fix the ordering of the messages, so they make sense now.

Fix the ordering of the messages, so they make sense now.

Merge pull request #1843 from Zaggy1024/getlightvaluefix

Make World.setBlockState check whether the light value from getLightValue(IBlockAccess, BlockPos) has changed.
Fixed a bug which caused the light level not to update when a block implements Block.getLightValue(IBlockAccess, BlockPos) to change the light value for different block states.

Merge pull request #652 from AbrarSyed/patch-2

remapped parameters and added ending newlines
remapped parameters and added ending newlines

Optifine can tell us when they're ready for the new splash screen.

Merge pull request #650 from luacs1998/1.7.10

Add classloader exclusion for ASM
Merge pull request #649 from luacs1998/master

Add classloader exclusion for ASM
Synchronize the available libraries. Turns out we've been forcing a newer apache commons-lang(3.2.1)
for a long time, also sync the dev guava - we've been forcing 17 for a long time too. Bumping
commons-lang to 3.3.2 since that's what Mojang are shipping with 1.8. It has no observable ill effects
Closes #651

Add classloader exclusion for ASM

Add classloader exclusion for ASM

Merge pull request #1832 from Parker8283/lhsf-1.8

[1.8] Fixes MC-52974: Host's skin doesn't load in LAN
Merge pull request #1831 from Zaggy1024/clientonlyrenderinlayer

Removed @SideOnly(Side.CLIENT) from EnumWorldBlockLayer.
Fixes MC-52974: Host's skin doesn't load in LAN

Removed @SideOnly(Side.CLIENT) from EnumWorldBlockLayer.

Loading screen: moved config file to the standard config directory; added the option to load textures from the custom resource pack

MinecraftForge/FML@2ed00c4da0ee76eb15e28eb8ee2c07a3096155c2 Splash progress screen will not load in the presence of optifine anymore.

Splash progress screen will not load in the presence of optifine anymore.

MinecraftForge/FML@94821fac98e64d9b8ad7434ed23a621850a8e11c Add a config file that lets you add additional soft dependencies at runtime - injectedDependencies.json

Add a config file that lets you add additional soft dependencies at runtime - injectedDependencies.json

Example here: https://gist.github.com/cpw/d3edc292631708f2d454

MinecraftForge/FML@4fe7b469b5ba156d4a786cd9e105b18cca7c271a Loading screen: logo rotation is now optional; initial support for animated textures - animation rate is fixed for now.
MinecraftForge/FML@31ae43590a2ba771d69b6c6513bcd5fe87ae8f8f Fix trying to close the screen during error.

Fix trying to close the screen during error.

Loading screen: logo rotation is now optional; initial support for animated textures - animation rate is fixed for now.

MinecraftForge/FML@36688e781aae67fb1e4e7047acf689edeeac7ddb Add in resource reloading to the bar. Tidy up some of the labels a bit.
MinecraftForge/FML@a1dc465a55612ecdd44e6cde3adc0f1d53c6d97b More progress bar action!
MinecraftForge/FML@bfcbf4ef4366fd3d8bfd20adafb63a857bb0dd53 More progress bar hooks
MinecraftForge/FML@a6670c415ee97e771020921e00773c4c15e7512e Thread errors should be correctly displayed in the crash report now
MinecraftForge/FML@9a16d26186d27029cae32a19c09ddf48f7cba22e fixed bar text positioning
MinecraftForge/FML@0059c630281b7105c0532d2dba1bec27cf0323b2 Track mipmaps and texture upload
MinecraftForge/FML@ef5f809752e87e369235e98a63027e9347185cd9 Fix broken log message in vanilla.

Fix broken log message in vanilla.

Track mipmaps and texture upload

fixed bar text positioning

Thread errors should be correctly displayed in the crash report now

More progress bar hooks

More progress bar action!

Add in resource reloading to the bar. Tidy up some of the labels a bit.

Cleanup RenderEntityItem patch, fixes Z-fighting issue in EntityItems. Closes #1824

MinecraftForge/FML@5785a9c9e8d76b91a03ed1f9791aeee1cb7ea00b Fix up multiple injections of cmdline files via versionspecificmoddir. Closes #645
MinecraftForge/FML@bd117be9c3e3919f3c29538cde80e3eb8fa48368 Correctly track exceptions thrown in the loading screen rendering thread

Correctly track exceptions thrown in the loading screen rendering thread

Merge pull request #647 from AbrarSyed/patch-1

Fixed scala module libs in dev json
fixed scala module libs in jsons

Merge pull request #1814 from Lunatrius/block-dispatcher

Extracted the creation of RegionRenderCache into a method for extendability
Extracted the creation of RegionRenderCache into a method.
Classes extending RegionRenderCache can change the behavior of the cache, allowing to visually change blocks (schematics etc).

Fix up multiple injections of cmdline files via versionspecificmoddir.
Closes #645

MinecraftForge/FML@a39482c4b7ac2883f821619b47ff31e0b6e74b29 Splash screen implementation
MinecraftForge/FML@01fea095cdcd80c2ae9f0ebfd1c72242b3f2dbf8 Merge branch '1.7.10-load-progress' of github.com:RainWarrior/FML into 1.7.10
MinecraftForge/FML@364b4bbbb0d4d168f9a63fa62a09e4e2fa213039 Call some loader stuffs
MinecraftForge/FML@61a891280d15f9f17e28bf86a427f32de5a8983e Make sure to close the splash screen if there's gonna be an error display

Make sure to close the splash screen if there's gonna be an error display

Call some loader stuffs

Merge branch '1.7.10-load-progress' of github.com:RainWarrior/FML into 1.7.10

Splash screen implementation

MinecraftForge/FML@d14d1a8fea4c9242c944079ab8e4cdd516dfce4c Update to use the inherited jar format. Simplifies a lot..

Update to use the inherited jar format. Simplifies a lot..

Expose the fluid that a block was constructed with, useful for 'non-default'
configuration of fluidblocks. Shouldn't be used outside of this purpose.

Replace the OLD fluid in the fluidID map, not the new one..

Fix static initializer derp.

Make FluidStack hold a delegate for the fluid. This can then float based on what is "live" at present.

Reformat ItemArmor$ArmorMaterial.getBaseItem to use an if/then/else structure. The switch
causes the generation of an internal class which may derp custom armor addition.
Closes #1799

Actually use the override constraint in ticket requests. Closes #1802

Change logging to avoid the String.format bug. Closes #1809

MinecraftForge/FML@8f9e3a7e30c8cc436dcb8d94b18b4634e0376339 Exceptions during construction phase should not propogate and cause an immediate crash. Closes #638

Exceptions during construction phase should not propogate and cause an immediate crash. Closes #638

Verify that the fluid registry doesn't contain "junk" fluids thru reflection.

Fixed NBTSizeTracker missing a lot of data being read. Also made new NBT object allocation claim 32-bits in the size tracker.

(cherry picked from commit de066a86da281d381b0e3ab9e83682720327049c)

Conflicts:
	patches/minecraft/net/minecraft/nbt/CompressedStreamTools.java.patch
	patches/minecraft/net/minecraft/nbt/NBTTagList.java.patch

Fixed NBTSizeTracker missing a lot of data being read. Also made new NBT object allocation claim 32-bits in the size tracker.

Merge pull request #1805 from KingLemming/1.7.10

OreDict functionality updates.
Adds some new Ore querying functionality.

Also attempts to size initial Hashmaps in a logical manner.

Signed-off-by: King Lemming <kinglemming@gmail.com>

Added LivingExperienceDropsEvent to change the amount of experience an entity drops

Dissallow color codes in mod names displayed in Mod gui list. And code formatting.

Revert KL's change, requesting a ore WILL register it.

Registering like this and returning a new empty list allows for modders to register their recipes and such without requiring to be executed after someone actually adds an item. If handled properly this allows for more flexible load orders, and more responsive code.
Merge pull request #1796 from KingLemming/1.7.10

Adjusts OreDictionary to prevent invalid registrations.
Adjusts OreDictionary to prevent invalid registrations.
Getting Ore Names for a non-existent ore will no longer automatically add that Name to the list nor generate an ID.

Tweaks a warning message in the FluidContainerRegistry. No functionality change.

Signed-off-by: King Lemming <kinglemming@gmail.com>

Merge pull request #636 from tterrag1098/betterModList

Fix control codes being used for mod list sort. Clean up sorting code.
Fix control codes being used for mod list sort. Clean up sorting code and fix a bug with right click clearing.

MinecraftForge/FML@888e489394e52abdfb349fbfbd7f8e153b5af124 Allow registering custom language adapters.
MinecraftForge/FML@906f94ca143f756f40404fde38af32b2481d0673 Some tidyup of the PR
MinecraftForge/FML@1c025f18433df868859022eea8e6d198444736de Patch TracingPrintStream to handle Kotlin IO.

MinecraftForge/FML@dfce4cd8d023a546c4c21405db182b8ddcd38633 Allow registering custom language adapters.
MinecraftForge/FML@9fecd72cf0bd483ae7bc2ce821ae6b2f5e5b9c65 Some tidyup of the PR
MinecraftForge/FML@10ac2a4fd972e923a60d23d10e8f297b8584f565 Fix itemCtorArgs javadoc in registerBlock
MinecraftForge/FML@86f70d37a40bbeaf7c389a14adcd8311ba5584df Patch TracingPrintStream to handle Kotlin IO.

Patch TracingPrintStream to handle Kotlin IO.

Kotlins internal IO suite wraps the old System.out style, so descend
deeper in the stack when kotlin.io is detected.

Patch TracingPrintStream to handle Kotlin IO.

Kotlins internal IO suite wraps the old System.out style, so descend
deeper in the stack when kotlin.io is detected.

Fix itemCtorArgs javadoc in registerBlock
Some tidyup of the PR

Allow registering custom language adapters.

Allows external mods/library jars to provide language adapters for
languages not supported in native Forge.

Some tidyup of the PR

And handle the null case in the constructor itself. Closes #1794 (again)

Fix NPE - Closes #1794

Fluids are now tracked internally by mod. This allows for the server and the world to specify a "default"
in the case of a possible alternative fluid implementation. If you always called registerFluid, things
should work pretty seamlessly, but if you didn't (gating with an isFluidRegistered check for example)
you should change to register anyway. This way, even if you're not default in the overall instance, you may
become default if you're the only mod present on a server, for example, or in a world save.

This should radically decrease the mixups caused by mod load ordering problems, and other issues around fluid
tracking.

Allow registering custom language adapters.

Allows external mods/library jars to provide language adapters for
languages not supported in native Forge.

MinecraftForge/FML@0da1263ff9ede99267c03728a1c823b8056d5e44 Enhance error output for bad textures a bit more and try and capture more types of error..

Enhance error output for bad textures a bit more and try and capture more types of error..

MinecraftForge/FML@be5ec06e3144d55a03d125f3ce364eade3771f4f Cleaning up the missing resource stack spam, and condensing the information into a usefully understandable format.

Cleaning up the missing resource stack spam, and condensing the information into a usefully understandable
format.

MinecraftForge/FML@ce791cb1f2cf983ef77b1e5c4028ddefab394062 Rework EventSubscriptionTransformer to bake @Cancelable and @HasResult values, should increase EventBus performance even more by removing logic from Event constructors.
MinecraftForge/FML@852710962a9b6d7c8e2ca188c715eebb2da44c2a Clean up some dead code

Clean up some dead code

Rework EventSubscriptionTransformer to bake @Cancelable and @HasResult values, should increase EventBus performance even more by removing logic from Event constructors.

Merge pull request #1791 from KingLemming/1.7.10-fluid

FCR Warning + Denial
Adds a warning to the FluidContainerRegistry when a mod does something stupid! Also denies the registration.

Signed-off-by: King Lemming <kinglemming@gmail.com>

Merge pull request #1789 from KingLemming/1.7.10-fluid

1.7.10 fluid
Fixes FluidContainerRegistry properly - no more corner case where client/server mods disagree.

Also clarifies the 2x Fluid registration error message somewhat.

Signed-off-by: King Lemming <kinglemming@gmail.com>

Merge pull request #4 from MinecraftForge/1.7.10

1.7.10
MinecraftForge/FML@4a753227adb805d29f3bf245c3f8427193c35544 Rework EventSubscriptionTransformer to bake @Cancelable and @HasResult values, should increase EventBus performance even more by removing logic from Event constructors.

Rework EventSubscriptionTransformer to bake @Cancelable and @HasResult values, should increase EventBus performance even more by removing logic from Event constructors.

Merge pull request #1784 from KingLemming/1.7.10-fluid

Change to FluidContainerRegistry
Fixes #1782

Signed-off-by: King Lemming <kinglemming@gmail.com>

Merge pull request #2 from MinecraftForge/1.7.10

1.7.10
Merge pull request #1752 from AbrarSyed/patch1

changed run configs to GradleStarts
Player sensitive version of Block.getPickBlock

Block.getPickBlock was patched in 1.7 but was overlooked in 1.8.

Closes: https://github.com/MinecraftForge/MinecraftForge/issues/1709

Merge pull request #1775 from Prototik/patch-1

[1.7.10] Fix FluidRegsitry.registerFluid
Fix FluidRegsitry.registerFluid

FluidRegistry:
```java
    static BiMap<String, Fluid> fluids = HashBiMap.create();
    static BiMap<Fluid, Integer> fluidIDs = HashBiMap.create();
...
    public static boolean registerFluid(Fluid fluid)
    {
        if (fluidIDs.containsKey(fluid.getName()))
            ^^^^^^^
```
There is definitely should be fluids instead fluidIDs. This mistake broke many mods.
Updated FML:
MinecraftForge/FML@c8160311d580f2dfccdf796a5243e16844787cb6 Stop IllegalFormatConversionException thrown if @Mod has flagged client-only or server-only
MinecraftForge/FML@9a894952afb526436649f608f7af5992b97f044c Merge pull request #627 from GotoLink/patch-1
MinecraftForge/FML@40faac64520d1a197f08eaa9a0f850e7df43359a Remove J7 only constructor in EnhancedRuntimeException, J6 compiling compatibility restored.

Restore binary compatibility issues in FluidRegistry caused by recent changes.

MinecraftForge/FML@31cf2a9cab6d1977d31436220d9612eaa13d4e0f Remove J7 only constructor in EnhancedRuntimeException, J6 compiling compatibility restored.

Remove J7 only constructor in EnhancedRuntimeException, J6 compiling compatibility restored.

Remove J7 only constructor in EnhancedRuntimeException, J6 compiling compatibility restored.

Copy fortress.dat from vanilla location

Fixes #1747

If the dat file isn't in the dimension specific folder but is present in the vanilla data folder then copy it over.

You shouldn't be creating FluidStacks from unregistered Fluids. Warn clearly on failed registrations, and make a useful log message for failed fluidstack
creations. Should help a lot with tracking down broken mods that are doing this wrongly.

Allow for duplicate Fluid Blocks. It's annoying to be sure but just as with the OreDictionary, we'll have to handle it.

Signed-off-by: King Lemming <kinglemming@gmail.com>

Fix formatting

Add in a fluidid transformer

Removed fluidID from ItemStack.

This fixes a rather huge issue where FluidStacks on the client could be desynced if a modder was unaware of it.

This is a breaking change but can be mitigated with a transformer to the getter getFluidID().

Signed-off-by: King Lemming <kinglemming@gmail.com>

Merge pull request #1771 from iChun/master

Readded but deprecated the old RenderPlayerEvent that were deleted. Sorry, Lex.
Readded but deprecated the old RenderPlayerEvent that were deleted. Sorry, Lex.

Merge pull request #1770 from iChun/master

Reimplement RenderPlayerEvent that was removed in the port to 1.8 from 1.7.10.
Reimplement RenderPlayerEvent that was removed in the port to 1.8 from 1.7.10.
RenderPlayerEvent.Specials was removed because the special effects are done in the LayerRenderer now.

Forge really should have always supported the concept of an "exact spawn". Individual world providers can still
change this behaviour of course, but for default maps it makes sense to support it as a config option.

MinecraftForge/FML@12ccf9cf49b76140841cdc5a459422ae4781de1a Rather than try to fall back to the backup level.dat in case of weirdness in the ID map, just fail hard. There is probably a serious modder derp in this case and there's nothing FML can do to recover the situation except avoid making it worse.
MinecraftForge/FML@e8cd368da30661ed2898fff232e2db787edcbdcc It's an IllegalState not an IllegalArgument *sigh*
MinecraftForge/FML@2be9c743424c92f8799a6af1d59d60edd65e6bf0 And fix itemblocks being removed, leaving behind a residual block. This is a legitimate action - use the missing mapping event to let the mod tell us about it
MinecraftForge/FML@7d8804cf656081d1570068f52e9bfc7140b21a65 You can't setAction to BLOCKONLY
MinecraftForge/FML@c73861efe67594ee9995bc93744cab06bd6647d1 Cherry-pick 01aaa7dc97480b381ca0d192ec65016d7baeb747 Fix mods defined via --mods or --modListFile launch args not being searched for coremods. #560
MinecraftForge/FML@94c45b48c1265e7c4f60f591d413fa545787d354 Fix json cache crash, handle the file much more cleanly. Probably an MC JIRA since it's a vanilla bug. Closes #619

Merge pull request #627 from GotoLink/patch-1

Stop IllegalFormatConversionException thrown 
Fix json cache crash, handle the file much more cleanly. Probably an MC JIRA since
it's a vanilla bug. Closes #619

Stop IllegalFormatConversionException thrown if @Mod has flagged client-only or server-only

%d is not a valid format for getModId(), which returns String.
Cherry-pick 01aaa7dc97480b381ca0d192ec65016d7baeb747
Fix mods defined via --mods or --modListFile launch args not being searched for coremods. #560

Update FML - merge the 1.7.10 changes in to forge @ 1.8. Wow git is (sorta) AWESOME!

MinecraftForge/FML@6b0ae369eb9b8cf89eb9d53fe997a6e5ef222093 Try and improve performance of the registry by avoiding superType.cast.
MinecraftForge/FML@dfebcafd49550b8c3f90c6c028ef0d7f3a13e607 Something I meant to add a long time ago, but it got overlooked. My apologies. Presend the (int) dimension ID in the serverhello packet. This should be 100% backward compatible with existing servers but bumping a server to this version will allow clients with this version as well to now login in dimensions outside the byte range. Probably fixes a bunch of mods that add dimensions.
MinecraftForge/FML@6011419fa055c1375d05189f9bf0d86705c9c0ec Clean up my patch. Terrible person I am..
MinecraftForge/FML@c6bbd0e82de3d8f7993d70aa7be3f883b3afbc47 Forgot that I need a noarg ctor. I'm so rusty.
MinecraftForge/FML@6edc1635de163c41b6b5dfe02bee13d6a9c5aa4d Need to load the dimension from disk - do it without filling out the player so that the normal player loading (including events) works properly
MinecraftForge/FML@4ca6f6e19f3c3147fcf48c58669f55478a9a1345 What a dumb oversight. One needs to copy the active substitution set to the active gamedata. Doesn't work well otherwise.
MinecraftForge/FML@6f6cec96be73b4c94999cf60dc00741f3f3c2cc2 Substitutions need to be activated when they're registered, otherwise they won't appear in world, ever.
MinecraftForge/FML@13ac015f0c36b8e2091ae332c556be315429f4c8 Change iterator behaviour for the registry - include substitutions in the standard iterator, so that vanilla MC methods visit them (so they can get textures etc). The fml special one only visits the absolute set, used mostly for sanity checking and serialization.
MinecraftForge/FML@24cb4a42c4e4bddde95c0e49d1f8b8bcc20c626d Enhance output of common FML errors in crash reports and server GUI.
MinecraftForge/FML@12ccf9cf49b76140841cdc5a459422ae4781de1a Rather than try to fall back to the backup level.dat in case of weirdness in the ID map, just fail hard. There is probably a serious modder derp in this case and there's nothing FML can do to recover the situation except avoid making it worse.
MinecraftForge/FML@e8cd368da30661ed2898fff232e2db787edcbdcc It's an IllegalState not an IllegalArgument *sigh*
MinecraftForge/FML@2be9c743424c92f8799a6af1d59d60edd65e6bf0 And fix itemblocks being removed, leaving behind a residual block. This is a legitimate action - use the missing mapping event to let the mod tell us about it
MinecraftForge/FML@7d8804cf656081d1570068f52e9bfc7140b21a65 You can't setAction to BLOCKONLY
MinecraftForge/FML@13df640d9d4516219b07778edd76efd2643019f6 Pull in a lot of the FML tweaks from 1.7 to 1.8
MinecraftForge/FML@447beaa99ec828fb83796185d07c72ea28b056c9 Merge remote-tracking branch 'origin/1.7.10'

Merge remote-tracking branch 'origin/1.7.10'

Conflicts:
	fml

Merge remote-tracking branch 'origin/1.7.10'

Pull in a lot of the FML tweaks from 1.7 to 1.8

Merge remote-tracking branch 'origin/1.7.10'

Conflicts:
	src/main/java/cpw/mods/fml/common/MissingModsException.java

MinecraftForge/FML@2afd55ab825fad3b07073c474cdb96b348701084 Fix scala mods, Closes #621
MinecraftForge/FML@c541b08ef68161f437eeb7b22eabe27b20eebf55 Merge pull request #622 from diesieben07/scala-fix
MinecraftForge/FML@d5021417dd10f36dc3d1b68e4975eb91f7f46e68 Forgot the register handling bit. Registration should work now..
MinecraftForge/FML@5a65c6568699acaade8243040d8552b1f2e2e28f OK, this is finally actually working, I think...

OK, this is finally actually working, I think...

Fixed mipmapping not being enabled by expanding 1x1 texture

Comment on previous commit fix - it worked. Thanks to skyboy and tterrag for investigating and verifying.
A chest as an acheivement icon will recreate the original problem, for note.

Experimental "fix" for the weird rendering in the Acheivements screen. Thanks skyboy for spotting this.

You can't setAction to BLOCKONLY

And fix itemblocks being removed, leaving behind a residual block. This
is a legitimate action - use the missing mapping event to let the mod
tell us about it

It's an IllegalState not an IllegalArgument *sigh*

Rather than try to fall back to the backup level.dat in case of weirdness
in the ID map, just fail hard. There is probably a serious modder derp in this
case and there's nothing FML can do to recover the situation except avoid
making it worse.

Forgot the register handling bit. Registration should work now..

Merge pull request #622 from diesieben07/scala-fix

Fix scala mods, Closes #621
Fix scala mods, Closes #621

Updated FML:
MinecraftForge/FML@2a268cd5664b6562a4bf2a953a6a93fd8e111bd2 Improve mod list GUI, add sort and search
MinecraftForge/FML@951fc2d9fd7e7970c86accb1be095a24f7bfaf18 First attempt at making FMLControlledRegistry something a bit more generic than just blocks/items.
MinecraftForge/FML@410582222d9ba15d42dc47db0d3d6a84aeac2d22 Merge pull request #614 from tterrag1098/betterModList
MinecraftForge/FML@ba0b176430cdbc3573643a6e21d47013cfd1f0e0 Fix ModDiscoverer ignoring inner classes.
MinecraftForge/FML@9cc313eab9939724786f833f511a87c9957dbc72 Merge pull request #617 from diesieben07/innerclass-disc
MinecraftForge/FML@01aaa7dc97480b381ca0d192ec65016d7baeb747 Fix mods defined via --mods or --modListFile launch args not being searched for coremods. #560
MinecraftForge/FML@8cecc47b85db68e8e69f45641b1d843509dbe71d Merge pull request #620 from killjoy1221/extra-coremod-fix
MinecraftForge/FML@38d9a5f444815810dec3607f5b3b7ff1ac513d4c Enhance output of common FML errors in crash reports and server

Force load anonymous minecraft classes used in crash reports. This prevents some crashes being hiddedn behind class definiton exceptions.GUI.

MinecraftForge/FML@24cb4a42c4e4bddde95c0e49d1f8b8bcc20c626d Enhance output of common FML errors in crash reports and server GUI.
Force load anonymous minecraft classes used in crash reports. This prevents some crashes being hiddedn behind class definiton exceptions.

Enhance output of common FML errors in crash reports and server GUI.

Enhance output of common FML errors in crash reports and server GUI.

Merge pull request #620 from killjoy1221/extra-coremod-fix

Fixed typo causing coremods to be missed in certain situations.
Fix mods defined via --mods or --modListFile launch args not being searched for coremods. #560

MinecraftForge/FML@4ca6f6e19f3c3147fcf48c58669f55478a9a1345 What a dumb oversight. One needs to copy the active substitution set to the active gamedata. Doesn't work well otherwise.
MinecraftForge/FML@6f6cec96be73b4c94999cf60dc00741f3f3c2cc2 Substitutions need to be activated when they're registered, otherwise they won't appear in world, ever.
MinecraftForge/FML@13ac015f0c36b8e2091ae332c556be315429f4c8 Change iterator behaviour for the registry - include substitutions in the standard iterator, so that vanilla MC methods visit them (so they can get textures etc). The fml special one only visits the absolute set, used mostly for sanity checking and serialization.

Change iterator behaviour for the registry - include substitutions in the standard iterator, so that
vanilla MC methods visit them (so they can get textures etc). The fml special one only visits the
absolute set, used mostly for sanity checking and serialization.

Closes #618

Substitutions need to be activated when they're registered, otherwise they won't appear in world, ever.

What a dumb oversight. One needs to copy the active substitution set to the active gamedata. Doesn't work well otherwise.

Closes #616

Merge pull request #617 from diesieben07/innerclass-disc

Fix ModDiscoverer ignoring inner classes.
Merge pull request #1755 from simon816/custom-tileentity-data

Add getTileData() to TileEntity
Fix ModDiscoverer ignoring inner classes.

Add getTileData() to TileEntity

- The same idea as Entity.getEntityData()

MinecraftForge/FML@6b0ae369eb9b8cf89eb9d53fe997a6e5ef222093 Try and improve performance of the registry by avoiding superType.cast.
MinecraftForge/FML@dfebcafd49550b8c3f90c6c028ef0d7f3a13e607 Something I meant to add a long time ago, but it got overlooked. My apologies. Presend the (int) dimension ID in the serverhello packet. This should be 100% backward compatible with existing servers but bumping a server to this version will allow clients with this version as well to now login in dimensions outside the byte range. Probably fixes a bunch of mods that add dimensions.
MinecraftForge/FML@6011419fa055c1375d05189f9bf0d86705c9c0ec Clean up my patch. Terrible person I am..
MinecraftForge/FML@c6bbd0e82de3d8f7993d70aa7be3f883b3afbc47 Forgot that I need a noarg ctor. I'm so rusty.
MinecraftForge/FML@6edc1635de163c41b6b5dfe02bee13d6a9c5aa4d Need to load the dimension from disk - do it without filling out the player so that the normal player loading (including events) works properly

Need to load the dimension from disk - do it without filling out the player so that the normal player loading (including events)
works properly

Forgot that I need a noarg ctor. I'm so rusty.

Clean up my patch. Terrible person I am..

Something I meant to add a long time ago, but it got overlooked. My apologies. Presend the (int)
dimension ID in the serverhello packet. This should be 100% backward compatible with existing servers
but bumping a server to this version will allow clients with this version as well to now login in
dimensions outside the byte range. Probably fixes a bunch of mods that add dimensions.

Merge pull request #1754 from JamiesWhiteShirt/master

Added newVolume and newPitch to PlaySoundAtEntityEvent.
Added newVolume and newPitch to PlaySoundAtEntityEvent. Deprecated ForgeEventFactory.onPlaySoundAt, added replacement ForgeEventFactory.onPlaySoundAtEntity.

changed run configs to GradleStarts

Merge pull request #1723 from Geforce132/master

Add an EntityMountEvent.
Merge pull request #614 from tterrag1098/betterModList

Improve mod list GUI, adds sort buttons and a search bar
First attempt at making FMLControlledRegistry something a bit more generic than just blocks/items.

It probably doesn't work yet though.

Try and improve performance of the registry by avoiding superType.cast.

-Added EntityMountEvent.

Improve mod list GUI, add sort and search

Merge pull request #1745 from diesieben07/ingamegui-fix

Fix jukebox message being too low
Fix jukebox message being too low with forge

Updated FML:
MinecraftForge/FML@3e7ae47f8f5d642b256adbe8b3395bb40daf85da Fix Event Bus Access Issues
MinecraftForge/FML@c8e2a5f377ddf8a35cceda6a14697dbe8cad4ca8 Fixed WorldInfo properties not loaded
MinecraftForge/FML@7f96b2c69ab8a2ed07b5b786b3d679ea4c509121 Fix Debug packet logger on local memory connections.

Fix Debug packet logger on local memory connections.

Merge pull request #1739 from robin4002/master

Remove translation and add a note for contributors
remove translation and add a note for contributors

Merge pull request #610 from Zot201/1.8

Fixed WorldInfo properties not loaded
Fixed WorldInfo properties not loaded

Merge pull request #609 from Zot201/1.8

Add transformer to allow protected/private classes to use the event bus.
Merge pull request #1733 from Zot201/enchantment-fix

Fixed enchanting table applying secondary enchs. Closes #1428
Fixed enchanting table applying secondary enchs.

Merge pull request #1721 from me4502/update-event

Added NeighborNotifyEvent fired on server side only, allows for monitoring and disabling world 'physics' updates.
Add NeighborNotiftyEvent.

Fix Event Bus Access Issues

1) Allow overriding methods in subclass without extra SubscribeEvent annotations
2) Transform event subscribers to have public method/class

Fix compile error in ClientHax's PR.

Merge pull request #1729 from clienthax/master

Add method to set entity placement type.
Current spawner implementation checks the EntitySpawnPlacementRegistry hashmap to check where a entity should spawn
as there is no way to modify this without the use of reflection or a AT, you can not specify where you want your entity to spawn
adding this helper method will allow developers to specify where they want their entity to spawn.

Signed-off-by: Clienthax <clienthax@gmail.com>

Update EntitySpawnPlacementRegistry.java.patch

Merge pull request #1730 from Tmtravlr/master

Added Nether Fortress chest to the ChestGenHooks
Added Nether Fortress chest to the ChestGenHooks

I tried to follow the directions on

https://github.com/MinecraftForge/MinecraftForge/wiki/If-you-want-to-contribute-to-Forge

as best as I could. =)

If anything is wrong, let me know and I'll change it!

Hopefully fix NPE during baking of empty vanilla item models

Fire WorldEvent.Load for Client worlds. Closes #1719

Make Container.mergeItemStack respect Slot.isValidItem Closes #1630

Fix JukeBoxes not storing the inserted record. All TE's in minecraft are in net.minecraft.tileentity EXCEPT JukeBoxes. Closes #1633 Closes #1714

Fix NPEs in last commit.

Fix NPEs in mlast commit.

Updated FML:
MinecraftForge/FML@c9cf3136c265b2e8e46eab102b2310a9312b8cfb New @Mod properties to define which environment to load the mod on.
clientSideOnly will only be loaded in the Client environment.
serverSideOnly will only be loaded in the Dedicated server environment.
Combine with acceptedMinecraftVersions to prevent users from loading the mod in the incorrect environment.

New @Mod properties to define which environment to load the mod on.
clientSideOnly will only be loaded in the Client environment.
serverSideOnly will only be loaded in the Dedicated server environment.
Combine with acceptedMinecraftVersions to prevent users from loading the mod in the incorrect environment.

Updated FML:
MinecraftForge/FML@5eff40897545c9e6f597a202bc9e86c3b07761ad Filter more known libraries from potential mod canidates.
MinecraftForge/FML@feb4c436db27a249dd5190023edd38cb5884e90b Quiet ClassPatchManager debug spam by default. Reenable using -Dfml.debugClassPatchManager=true.
MinecraftForge/FML@41e806fa950839bf901ebf9c18d0c632a7c5538c Fix double decoding of UTF8 characters in lang files.

Fix double decoding of UTF8 characters in lang files.

Fixed using items on the wrong block client side caused by iChuns eyeheight update.

Merge pull request #1718 from iChun/master

Reimplement variable eyeHeight for players which was removed in the 1.7 to 1.8 port.
Reimplement variable eyeHeight for players which was removed in the 1.7 to 1.8 port.

Removed event bus call from the ModelLoader

Merge pull request #1708 from matthewprenger/PR-1

Ability to add prefixes and suffixes to the player's display name
Add safty to URL detection in chat. Closes #1712

RenderItem can now use baked quad color

Added a default white texture; Fixed B3DLoader crashing when the brush has empty texture specified

Merge pull request #1711 from Parker8283/patch-1

Added ATs for EnumFacing
Added ATs for EnumFacing

This publics the VALUES array and HORIZONTALS array in EnumFacing, thus giving modders access to these arrays, much like ForgeDirection had.
Quiet ClassPatchManager debug spam by default. Reenable using -Dfml.debugClassPatchManager=true.

Filter more known libraries from potential mod canidates.

Attributes.put (de)normalization now works as intended

Add the ability to add prefixes and suffixes to the player's display name.

Hold a weak reference to the Minecraft fake player object. Closes #1705

Merge pull request #1689 from matthewprenger/master

Minor tweak to UsernameCache to also cache usernames of offline players
Updated FML

Moved transformer wrappers to a separate package (should fix signing errors), fixed debug mods not loading in forgedev (string comparison).

ModelRotation.getMatrix() now returns the correct matrix; fixed the application of custom transformations to vanilla models; fixed application of transformations to B3D models; fixed the culling of rotated vanilla models

Merge pull request #599 from diesieben07/master

Handle empty lines in language files gracefully
Alternative models work once again

Handle empty lines in language files gracefully

Updated FML

Merge pull request #597 from RainWarrior/blame

Added blaming of coremods and mods not targetting Java 6
Added blaming of coremods and mods not targetting Java 6

fix ModelLoader.setCustomModelResourceLocation not storing same item with different metadata values

Try a maven mirrior to fix build issues.

made renderLayer ThreadLocal, now it should hold correct value for use inside custom baked models

Reworked vanilla texture resolution, hopefully fixes NPE bug in FaceBakery

fixed NPE during loading of B3D models without textures/brushes.
changed default B3D color to have full opacity.

Minor tweak to UsernameCache to also cache usernames of offline players.

Fixed being kicked from the server while swimming.

Fixed debugging Dedicated server in Forge Dev workspace.

Fixed potential NPEs in Structure code caused by componenets not being able to load.

Fixed potential NPEs in Structure code caused by componenets not being able to load. Closes #1686

Added ability for language files to opt-in to loading using normal Java properties format.
This allows for escape characters, as well as keeping %d and %f replacements in tact.
To opt-in, the lang file must have this comment line:
# PARSE_ESCAPES
As this is opt-in, any errors resulting from misused format strings is on the modder/end user.

Fixed BlockBush and BlockCrops not respecting custom soils. Closes #1683

Fixed InitMapGenEvent's fire order so values are used. And added OCEAN_MONUMENT type. Closes #1681

Restore binary backwards compatibility

ModelBakeEvent now has ModelLoader as an argument instead of ModelBakery; Added various static hooks to ModelLoader to allow registering model-related information before it's needed (prevents file-not-found errors on first baking pass); ModelLoader waits until ModelBakeEvent is done before showing any missing model exceptions; It's now possible to define models completely in-code (as illustrated by ModelBakeEventDebug).

Bump version to 11.14.1 for next development cycle.

Updated FML:
MinecraftForge/FML@1de3bf733aef754f15de55006b1750376871feb0 Fix FML's package for net.miencraftforge on maven. Fixes uploading of new builds. Note: 1.7.10 builds are bug fixes only while FML/Forge for 1.8 stabelizes.
MinecraftForge/FML@05ecefb53857ecc1dc52d4a577ed593c26da9659 Update to ASM5 for Java 8 support
MinecraftForge/FML@1112c455b9758c38eab385f48578bad17c0180f9 Merge pull request #595 from Grinch/master

Fixed tracking of UV locking state. Closes #1679

Updated FML: MinecraftForge/FML@22c9656196dbbea8ed983663d536c3ca272d7282 Reset S->C CustomPayload data after Write, allowing the same packet to be written multiple times.

Fixed ItemFrames not having a model. Closes #1678

Reset S->C CustomPayload data after Write, allowing the same packet to be written multiple times. Closes #588

Fixed Buttons not dropping anything when broken. Closes #1676

Fixed domain support in ArmorMaterial texture name. Closes #1675

Updated FML:
MinecraftForge/FML@d00feb58c762b0bbc506d79faf1ce40bc96732e9 Remove debug code that was causing console spam in Forge.
MinecraftForge/FML@1de3bf733aef754f15de55006b1750376871feb0 Fix FML's package for net.miencraftforge on maven. Fixes uploading of new builds. Note: 1.7.10 builds are bug fixes only while FML/Forge for 1.8 stabelizes.
MinecraftForge/FML@05ecefb53857ecc1dc52d4a577ed593c26da9659 Update to ASM5 for Java 8 support
MinecraftForge/FML@1112c455b9758c38eab385f48578bad17c0180f9 Merge pull request #595 from Grinch/master
MinecraftForge/FML@9c3013e02af1bd2f724d34a30e0b880b6e131645 Merge remote-tracking branch 'origin/1.8'

Merge remote-tracking branch 'origin/1.8'

Merge remote-tracking branch 'origin/1.8'

Merge pull request #595 from Grinch/master

Update to ASM5 for Java 8 support, IF ANYONE MAKES A MOD THAT REQUIRES JAVA8 BEFORE MINECRAFT FORCES IT ALL USERS REQUESTING SUPPORT WILL BE BANNED FROM ALL FORGE RELATED SERVICES.
Removed leftover debug messages

Merge pull request #1666 from TechStack/1.8

Fixes issue #1552 Where the flowIntoBlock method was not setting the Block to the fluid and causing crashes
Merge pull request #1664 from Lunatrius/fix-debug

Fixed debug text rendering one line to low.
Closes #1552

Set the destination block the to the fluid.
In the previous code the destination block was still Air and would would
cause a crash because air doesn't have a property for LEVEL

Merge pull request #1521 from RainWarrior/model-system

Model loader registry
Added model loader registry

Entry point: ModelLoaderRegistry
loader interface: ICustomModelLoader
custom model: IModel

ModelLoader is responsible for splicing into vanilla model system.
(you probably don't need to use it directly)

Interop with vanilla models isn't great yet
(vanilla models can't refer to custom ones as parents), will improve in
the future.

Includes loader for B3D models, with animation support
(net.minecraftforge.client.model.b3d).
Blender export plugin with compatible coordinate system:
https://github.com/RainWarrior/B3DExport

OBJ loader is being written, will be included at some point in the
future. For now you can convert OBJ to B3D via blender, or wait.

Update to ASM5 for Java 8 support

SpecialSource updated ASM5 and ForgeGradle supports ASM5 as well but
neither FML or Forge were actually updated to support ASM5 opcodes. This
commit resolves this.

Signed-off-by: Steven Downer <grinch@outlook.com>

Don't skip the first line when rendering (debug) text.

Merge pull request #1646 from Ivorforce/patch-1

Fix fluid tanks incorrectly reading NBT when empty
Updated FML:
MinecraftForge/FML@a55e4124531119f1c9c023cff74cfa09b49ef0e0 Save the mod list of players in their NetworkDispatcher (Make it accessable for mods)
MinecraftForge/FML@69d479d46ae658c5a5c2c00081be3df38e38c748 Fixed getEffectiveSide() for Netty Server threads
MinecraftForge/FML@0f9a33cf14165ddd424a7d82c2178cf5854bf32f Exclude only log4j2 queue from class loader

Merge pull request #591 from Minecrell/patch-1

Exclude only log4j2 queue from class loader
Fix fluid tanks incorrectly reading NBT when empty

If the Empty flag was set, the tank would not correctly read the data, keeping the outdated FluidStack instead. This is especially relevant with updatable TileFluidHandler TEs.

Merge pull request #1647 from Parker8283/fluid-icons

Re-enabled Icon setting for Fluids
Merge pull request #1645 from Lunatrius/chat-npe-fix

Fixed NPE when canceling ClientChatRecievedEvent. Fixes #1644
Merge pull request #575 from lumien231/1.8

Save the mod list of players in their NetworkDispatcher
Re-enabled Icon setting for Fluids

Exclude only log4j2 queue from class loader

Right now the complete com.mojang package is excluded from the LaunchClassLoader on the server. This means mods can't transform authlib for example which doesn't need to be excluded for the UI to work. By excluding only the specific log4j2 QueueLogAppender, mods can also transform the classes in the com.mojang.authlib package.
Fixed NPE when canceling ClientChatRecievedEvent. Fixes #1644

Silently eat exceptions when getting a TE's rendering bounding box, this 'fixes' Bukkit servers screwing up world data and causing clients to crash.

Merge pull request #1635 from asiekierka/master

Fix shouldRefresh being too broad in tile entity update
fix shouldRefresh being too broad in tile entity update

Merge pull request #1602 from Chicken-Bones/1.8

Allow blocks to render in multiple layers
Merge pull request #1615 from lumien231/master

Fix versionCheck config option
Merge pull request #1627 from CovertJaguar/tile-refresh

Bulk Chunk Data packets should also check TileEntity.shouldRefresh().
Fix value passed for Item.getModel useRemaining argument. Closes #1623

Made Chunk.fillBlock respect TileEntity.shouldRefresh.

Call World.init from DimensionManager.initDimension Closes #1551

Fix potential NPE when loading a single player world where you were saved in a unloaded dimension. Closes #1575

Bulk Chunk Data packets should also check TileEntity.shouldRefresh().

Fix versionCheck config option

Merge pull request #1609 from lumien231/1.8

Fixes #1603: Moving the start of the update thread to the pre init of the forge mod container
Fixes #1603: Moving the start of the update thread to the pre init of the forge mod container

Allow blocks to render in multiple layers

Fix recipies for stone variants.

Merge pull request #1592 from palechip/1.8

Fix Scoreboard rendering for the sidebar.
Fix MC-30864 (sending web links in chat)

Merge pull request #1491 from killjoy1221/master

Fix MC-30864 (sending web links in chat)
Merge pull request #578 from HEmile/1.8

Fixed getEffectiveSide() for Netty Server threads
Fix crafting of non-oak fences/gates.

Merge pull request #1338 from MinestrapTeam/renderpane

Fix Stained Glass pane rendering issues
Added chests to the ore dictionary.

Removed exclusion of white stained glass recipes in ore dictionary.

Merge pull request #1503 from Kittychanley/master

Removed exclusion of white stained glass recipes in ore dictionary.
Fixed getEffectiveSide() for Netty Server threads

Fix Scoreboard rendering for the sidebar.

Fix BlockSnapshots not firing correctly due to patch mixup in 1.8 update. Closes #1591

Merge pull request #1586 from Lunatrius/fix-chat-1.8

[1.8] Fixed messages not being added to the chat history
Fixed messages not being added to the chat history and ClientCommandHandler not being called when sleeping.

Merge pull request #1581 from Lunatrius/fix-chat

Fixed messages not being added to the chat history
MinecraftForge/FML@5a4d362293fe70e1421d1f22c4a195944731d6ba Finish removing marker in mapping entry names. FMLMissingMappingsEvent/FMLModIdMappingEvent should fire with correct names now.

Fix incorrect logic in world change clumping.

Fix incorrect logic in world change clumping.

Remove our changes to Stitcher slot allocation.

Fixed messages not being added to the chat history and ClientCommandHandler not being called when sleeping.

Finish removing marker in mapping entry names. FMLMissingMappingsEvent/FMLModIdMappingEvent should fire with correct names now.

Remove our changes to Stitcher slot allocation.

MinecraftForge/FML@e3785c28930a218cf9374458c67c34e7fba17922 Ensure that EntitySpawn and OpenGUI packets are handled in the world thread. Also log all errors that are thrown in FutureTasks.

Ensure that EntitySpawn and OpenGUI packets are handled in the world thread.
Also log all errors that are thrown in FutureTasks.

Fix userdev for new BlockState change.

Merge pull request #1518 from RainWarrior/model-event

Added model bake event, ISmartBlock/itemModel, Block.getExtendedState, IExtendedState and IUnlistedProperty
Untie ItemModelMesher from using Item Ids internally by implementing our own simple mechanics using Trove.

Fix EnumHelper for new ArmorTexture argument.

Fix texture stitcher not using all avalible spaces.

Fix texture stitcher not using all avalible spaces. Closes #1557

Fixed NPE thrown when brewing event is fired and not all slots are filled.

Fixed log spam when breaking DoublePlants. Closes #1555

Fix missed patch causing Dispensed Armor to go into the wrong slot. Closes #1560

Make daylight sensor recipe use ore dictionary wooden slabs Closes #1565

Fixed NPE thrown when brewing event is fired and not all slots are filled. Closes #1564

Unbind Shaped/Shapeless Ore Recipies from Array list to normal List.

Expand PlayerWakupEvent to expose the three parameters passed into EntityPlayer.wakeUp.

Expand PlayerWakupEvent to expose the three parameters passed into EntityPlayer.wakeUp. Closes #1486

Improved Control of Enchantment.canApplyTogether() in Mod Enchantments, allowing both enchantments to determine if they can apply together. Closes #1434

Improved Control of Enchantment.canApplyTogether() in Mod Enchantments, allowing both enchantments to determine if they can apply together.

Changed ToolMaterial's repair material to ItemStack version to allow metadata sensitive versions.

Changed ToolMaterial's repair material to ItemStack version to allow metadata sensitive versions. Closes #1355

Fix invalid argument being passed to Block.isNormalCube from World.updateNeighbors. Closes #1339 and Closes #1346

Add quartz_ore tool init, more mojang special casing -.- Closes #1333 and Closes #1335

Add quartz_ore tool init, more mojang special casing -.-

Added PotionBrewEvent.Pre/Post. To allow for modification and cancelation of Brewing. Closes #1248

Added PotionBrewEvent.Pre/Post. To allow for modification and cancelation of Brewing.

Add LivingHealEvent called from EntityLivingBase.heal() Closes #1282

Add LivingHealEvent called from EntityLivingBase.heal()

Added CreateSpawnPosition event.

Added CreateSpawnPosition event Closes #1053

Cleanup deprecated code, and TODOs in OreDictionary. Down-typed things from ArrayList to List. Asking for the ores with a null stack will now throw an Exception.

Add "sand" to the OreDictionary

Add "sand" to the OreDictionary Closes #1487

Fixed bug in ServerConfigurationManager.transferPlayerToDimension where it would send the old dimension's information. Closes #1548

Fixed bug in ServerConfigurationManager.transferPlayerToDimension where it would send the old dimension's information.

Added Explosion Start and Detonate events to control explosion.

Added Explosion Start and Detonate events to control explosion. Closes #1469

Merge pull request #1547 from Draco18s/patch-1

Added tessellator calls to render the block's back faces, so that the liquid properly renders when the player is immersed in the fluid.
Add GuiScreenEvents for keyboard and mouse input

Save the mod list of players in their NetworkDispatcher (Make it accessable for mods)

Update RenderBlockFluid.java

Added tessellator calls to render the block's back faces, so that the liquid properly renders when the player is immersed in the fluid.
Added model bake event (allows mods to insert custom baked models, much like TextureStitchEvent allows to load custom textures), ISmartBlock/ItemModel (ability form models to react to block/item states), Block.getExtendedState, support for unlisted properties in block states. Includes example implementation of http://imgur.com/a/FyyJX

Only call blockBreak when block itself changes, not just meta. Fixes bottles poping out of brewing stands.

Fix finding of spawn location for mobs. Closes #1546

Remove debug patch I left in.

Updated FML:
MinecraftForge/FML@9c8ca4a4e3c4acc4980535e5c60da169b75a7810 Unlink banner block and item id. Mojang should of matched these up but they didn't -.-
MinecraftForge/FML@84a101f344b8fc21de1201fde717fbcbcba2aa79 Update Dev mcp mappings to 11-30 snapshot.

Update Dev mcp mappings to 11-30 snapshot.

Unlink banner block and item id. Mojang should of matched these up but they didn't -.-

Fix stickey pistons not retracting properly.

Fixed blocks not breaking properly when instantly destroied.

Fixed vanilla issue where exceptions in World tasks would not be logged.

Fix NPE with BlockSnapshots that caused items with TileEntities to be used up in creative mode.

Fixed vanilla bug where top part of double plants would flicker a tifferent texture before dissapearing.

Fix BlockPane's connection detection.

Fixed snow layers not being able to stack more then twice. Closes #1534

Fixed Entities not being able to climb ladders, Closes #1535

Fixed Entity extended properties init order. Closes #1532

Fix interacting with entities.

Updated FML:
MinecraftForge/FML@36644e97714b46dbbb24416febdde1332a3e753c Finalize modded handshakes in the World tick thread. Prevents potential CMEs when login event takes to long to fire.

Fix not being able to place blocks in liquids, and related issues.

Fix debug screen not showing grey background. Closes #1529

Finalize modded handshakes in the World tick thread. Prevents potential CMEs when login event takes to long to fire.

Fix destroy particles not being added. Closes #1528

Update RecipeSorter for new 1.8 recipies.

Fix potential NPE in Block.isToolEffective

Fix wrong state being passed to Block.getDrops

Fix Entityies not taking damage correctly. Closes #1511

Fix inverted logic preventing blocks from breaking.

Fixed crash with caomparators due to wrong position. Closes #1512

Fix creative picking a CommandBlock minecart returning wrong item. Closes #1523

Fix creative picking a CommandBlock minecart returning wrong item. Closes #1523

Fix acedential inversion causing some tress to not have leaves. Closes #1522

Fix fog colors, Closes #1524

Fix local variable conflict in Forge patch and latest MCP mappings.

Initial update to 1.8, Super beta. Most rendering related hooks are out due to major changes in 1.8.

Some notes:
Almost all int x, int y, int z parameters have been changed to BlockPos class
ForgeDirection has been removed, replaced by net.minecraft.util.EnumFacing.
All FML classes have moved from packet cpw.mods.fml to net.minecraftforge.fml
Fluid Rendering has been disabled for the time being, to be re-evaulated and a test mod created for it.
Minecraft now uses a Model based system for rendering blocks and Items. The intention is to expand the model format to better suit modder's needed once it is evaulated.
As such, The model loaders from Forge have been removed, to be replaced by expanding vanilla's model format.
Metadata has been extracted out in Minecraft to IBlockState, which holds a list of properties instead of magic number metadata. DO NOT listen to the fearmongering, you can do EVERYTHING with block states you could previously with metadata.
Stencil Bits are disabled entirely by for the main Display, Modders must enable and recreate the FrameBuffer if they wish to use Stencil Bits.

Removed exclusion of white stained glass recipes in ore dictionary. Closes #1502 & #1481

Merge pull request #1492 from XCompWiz/clientrain

Fixes client-side fake rain
Fixes client-side fake rain

Changes the updateWeather function in WorldServer to only send the
weather info to players in the correct dimension, rather than all
players on the server. This is what causes the client-side rain, as the
client believes that it has started raining locally, rather than in
another dimension.

Fix MC-30864 (sending web links in chat)

Add details message to MissingModsException and WrongMinecraftVersionException to make the Crash logs more useful.

Add duplicate protection to ModDiscoverer, do not process files in the mods directory if we already found them in the classpath. {Such as if LiteLoader is installed and added it} Closes #557

Merge pull request #1376 from founderio/patch-1

Modify WavefrontObject to allow '.' in group object names
Player sensitive version of Block.getPickBlock Closes #1348

Fix slots being black due to vanilla blending leakage Forge fixes. Closes #1325 & #1242

Merge pull request #1005 from luacs1998/patch-1

Create CONTRIBUTING.md
Merge pull request #547 from Parker8283/1.8

Re-enabled Entity-Render registration
Re-enabled Entity-Render registration

Merge pull request #1450 from Adubbz/master

Fixed desert list initialization. Fixes #1447
Bump version for new RB.

Fix logic error in Blodd's Snapshot capture that caused blocks to not be updated to the client. Closes #1451

Merge pull request #1461 from Azanor/master

 Fix for biome weights under 10 
Fix for biome weights under 10

This solves the problem where custom mod biomes with weights under 10
not being generated in the world.

Cleaned up the code and made the patch smaller

Merge pull request #1368 from matthewprenger/patch-1

Added username cache
Add username cache for determining a player's last known username

Merge pull request #1457 from AbrarSyed/master

implemented crowdin support
Merge pull request #545 from bspkrs/1.8

changed pass-thru method name to fix MCP name conflict
changed pass-thru method name to fix MCP name conflict
fixed a few old javadoc object name mistakes

implemented crowdin support

Add the ability to register custom variant names in ModelBakery.

Compleetly disable stencil bits unless told not to by using the -Dforge.forceDisplayStencil=true flag. Should solve the 'menu in bottom corner' issue with Intel Integrated graphics cards.

Merge pull request #1418 from Parker8283/wakeupevent

Added PlayerWakeUpEvent
Added PlayerWakeUpEvent

Fixed desert list initialization. Fixes #1447
Removed unneeded rebuild, was toying with where to put it.

Automatically register BlockStates when block is initally registered, and clear the list when new snapshots are injected. Modders DO NOT touch the registry in Block directly. Closes #537

Merge pull request #1364 from Adubbz/master

Fixed biome weights not working with non multiples of 10
Fix vanilla lighting issue and blending issues in achievements gui. Closes #1445

Fix FML's package for net.miencraftforge on maven. Fixes uploading of new builds.
Note: 1.7.10 builds are bug fixes only while FML/Forge for 1.8 stabelizes.

MinecraftForge/FML@d00feb58c762b0bbc506d79faf1ce40bc96732e9 Remove debug code that was causing console spam in Forge.

Remove debug code that was causing console spam in Forge.

Disable by default the Display Stencil bits. Keep FBO bits. Acording to Mumfery and ChickenBones, it should not be nessasary and should solve the 1/4 main menu issue. Use -Dforge.forceDisplayStencil=true to enable old behavior.

Merge pull request #1219 from Lunatrius/master

Prevent client only commands from bleeding through to the server.
Update TerminalTransformer for new FML package. Closes #535

General class name cleanup, spelling mistakes and FF decompile issues.

Take control over Item.BLOCK_TO_ITEM map and register Block's to this map from GameRegistry.

Renamed TileEntityRendererChestHelper -> TileEntityItemStackRenderer
  This class is used to render any tile entities in a non-location specific major
  Such as EntityItems, In minecarts, Held by entities, anyhting that isn't in world.

Switched the class names for BiomeGenForest $1 and $2 as Fernflower decompiled
  them in oposite order.

Merge pull request #533 from AbrarSyed/patch-2

Added mappings to default build.gradle
added mappings to default build.gradle
Merge pull request #1367 from bloodmc/blockplace

Added PlaceEvent and MultiPlaceEvent which fires before placing a block.
Added PlaceEvent and MultiPlaceEvent which fires before placing a block.

Before calling "ItemStack.tryPlaceItemInWorld", a recording flag is turned on for
setBlock to capture a blocksnapshot for each block that attempts to be placed.

If 1 block is captured, a "BlockEvent.PlaceEvent" is fired to notify mods.
If 2 or more blocks are captured, a "BlockEvent.PlaceEvent" is fired first with the first block
captured followed by a "BlockEvent.MultiPlaceEvent" with all captured blocks. This extra event
is required for items that have the ability to place 2 or more blocks such as a BlockBed.

If either event is cancelled, the recorded block snapshot(s), item stacksize, and item meta will
revert back to the captured snapshot(s).
If the events are not cancelled, a notification will be sent to clients and block physics will be updated.

What this means for mods is Forge will be able to capture all player block placement automatically and fire
a PlaceEvent and/or MultiPlaceEvent.
If for whatever reason your mod does not use the standard placement methods then you will need to fire the
appropriate placement events in order to notify mods/servers.

This commit also includes a new utility class called BlockSnapshot which is serializable. This new class is used in conjunction with
both PlaceEvent and MultiPlaceEvent in order to record a snapshot of block space before it is altered. This
allows us to restore the block(s) if an event is cancelled. The class also provides the ability to restore a snapshot
to any location using the restoreToLocation method. This should be helpful to many mods that are looking to be able
to capture block data then restore it to back to any location required.

Add joptsimple as a server required library. Closes #531

Restructure block and item mapping data in world save and network to potentially expand to custom mod ID registry syncing. Tip: ONLY use those functions in GameData that are marked as public API as internal API may change in 1.8.

Merge pull request #527 from bspkrs/1.8

Update Config Gui stuff for 1.8
Update Config Gui stuff for 1.8
updated mappings to snapshot 20140930
got rid of derpy generics code

Move FML to net.minecraft.fml package.

Move vanilla trades to inner class to prevent initilizer order issues.

Preliminary network protocol re-work. vanilla clients can now connect. Further cleanup needed.

Inital 1.8 patch update. 'It compiles!'

1.8 Conf update. Uses MCPData Snapshots now.

Prevent client only commands from bleeding through to the server.

Merge branch 'new'

MinecraftForge/FML@63b64482e6dd4c3e2226ec002ceee549045c35ed Add jsr305 dev-time dependancy for Nullable/Nonnull annotations. Unneeded at runtime.
MinecraftForge/FML@5365f5ea3e90ec85552bdb7f1f1237c51b4ea493 Add IEventExceptionHandler for EventBus to allow special handeling exceptions that are fired while running an event. Events now track what 'phase' they are in during the execution process. Each EventPriority is a 'phase'. An exception is thrown if the event attempts to set its phase to a previous one.

Merge pull request #1402 from nekosune/new

Fixed Clientside GameProfile UUID being null on offline mode
Fixed Clientside GameProfile UUID being null on offline mode

Merge pull request #1395 from lawremi/rendergasfix

Fix rendering height of non-liquid fluids
Add IEventExceptionHandler for EventBus to allow special handeling exceptions that are fired while running an event.
Events now track what 'phase' they are in during the execution process. Each EventPriority is a 'phase'.
An exception is thrown if the event attempts to set its phase to a previous one.

Add jsr305 dev-time dependancy for Nullable/Nonnull annotations. Unneeded at runtime.

check for IFluidBlock (in addition to Material.liquid) when
determining render height so that non-liquids (gases) render correctly

MinecraftForge/FML@7ab69aff2e19b349e457c1b5fcab8b3b01d22af2 Clean up import
MinecraftForge/FML@c5a90bd456230b201522c268dd9bc5e80a0b57be Is vanilla possible with this mod load, side tests.
MinecraftForge/FML@cad11f3165505e6d725411a9fc2c2ee8362f5827 Allow injecting alternative container types. This is the core support code for allowing sponge plugins!

Allow injecting alternative container types. This is the core support code for allowing sponge plugins!

Is vanilla possible with this mod load, side tests.

Clean up import

Merge pull request #1390 from diesieben07/beacon-items

Added Item#isBeaconpayment
Added Item#isBeaconpayment

Modify WavefrontObject to allow '.' in group object names

Blender names objects with .001 ir .002 when separating vertices or duplicating objects and the importer would crash on them. This fixes the regex to allow dots in the name.
MinecraftForge/FML@dc02d56195606d3ba2f1c5036fc8c0ddb67c843f Fix derp with ModType annotation. mods should load again now..

Fix derp with ModType annotation. mods should load again now..

MinecraftForge/FML@4ce3e73bfe36c02b10f504f93eff1bc94d640e32 Add overloaded version of SimpleNetworkWrapper#registerMessage that takes the MessageHandler instance directly, allowing to specify the same handler for multiple messages.
MinecraftForge/FML@cbe2ccbda461ec0ecf4d776fcd19ab31930cc3f1 Add in ModType to the jar manifest. If it's present, and doesn't have value "FML" it will be skipped from the modloading cycle. This should let liteloader mods have a .jar extension.
MinecraftForge/FML@37cf0174fc62a842d132b2c2cc31e477acfba205 OK, lets make that a csv list. It'll let you be liteloader and fml in one jar file!
MinecraftForge/FML@0475b15eb1a7c35bf4959f1af40606e6ee8a9d03 Change the mods and modListFile argument handling a bit. Other tweakers will get a chance at looking at them now - they're only removed right before launch.
MinecraftForge/FML@abeac06a2e9bf8825b058fa35291165b4d1f1fb3 Two new features. ModLists can have a "parent" mod list. Circularity will result in a crash, so be careful. Mods specified in a child will override ones from a parent (using the maven group:name:classifier triple to identify - ignoring the version component)
MinecraftForge/FML@7fcfedcfef9b5fd85cd1c17aa2013fca1bacd871 Canonicalized file paths in modListFile handling with the minecraftDirectory.
MinecraftForge/FML@633fce19d4b367aed56d79e916f17296842f675c Make Keyevent also fire for key releases
MinecraftForge/FML@57ba2339b630afa22c0fdf060bf28edbf7b34d0f Merge branch 'keyup-event' of github.com:diesieben07/FML
MinecraftForge/FML@1ff048062c7f122731619258a9e5a68a6111d5dd Merge branch 'simple-netw-improve' of github.com:diesieben07/FML

Merge branch 'simple-netw-improve' of github.com:diesieben07/FML

Merge branch 'keyup-event' of github.com:diesieben07/FML

Make Keyevent also fire for key releases

Canonicalized file paths in modListFile handling with the minecraftDirectory.

Two new features. ModLists can have a "parent" mod list. Circularity will
result in a crash, so be careful. Mods specified in a child will override
ones from a parent (using the maven group:name:classifier triple to identify -
ignoring the version component)

Finally, ModSide is now doable in MANIFEST.MF. If you have this, it can tell
a mod to only load on a client, or on a dedicated server (though I'd watch out
before using the dediserver one, you'll never load in integrated servers then).
The default value is BOTH, which means you'll load both sides, other values are
CLIENT and SERVER, obviously. Perhaps, also, CAULDRON might be possible?

Change the mods and modListFile argument handling a bit. Other tweakers will get a chance at looking
at them now - they're only removed right before launch.

OK, lets make that a csv list. It'll let you be liteloader and fml in one jar file!

Add in ModType to the jar manifest. If it's present, and doesn't have value "FML"
it will be skipped from the modloading cycle. This should let liteloader mods have a .jar extension.

GIANT FML UPDATE! Bump forge revision number, and fix patches for ItemStack changes. More to come on this branch I expect.

MinecraftForge/FML@7c5cf219042581545b6073de4e947448ffa10879 Implement STDOUT/STDERR redirection.
MinecraftForge/FML@bc78e31cb7ad4eda6e5faa173cd6b21e70a2c444 added support for \n in tooltip strings added \n test tooltip localization fixed int/double conversion error in slider entry added test slider scenario that highlighted conversion error
MinecraftForge/FML@a2908e5c596bb5502bf455d468d2b1ead0520f55 Clean up a bunch of compiler warnings.
MinecraftForge/FML@7f67523d870ae150071c67b002597542eb206725 Update realms to 1.3.2
MinecraftForge/FML@73f23c24b85240458f352f248e885684aaff4743 Merge branch 'std-redir' of github.com:Emberwalker/FML
MinecraftForge/FML@1c6b25df740a64c94d9ba05dd7e4412515abf5bb If an IO exception comes from the datawatcher, spew it all over the console don't discard it silently. Should stop pixelmon blaming forge for their mistakes.
MinecraftForge/FML@e77da9eb2f5c58a494ed100dd4c1dd1a0c341dbf And fix the read side too, incase someone is trying to bitbang and failing.
MinecraftForge/FML@305d8950c9332c7a7f290db05e6f18ef328016e2 Make LogContext optional. This can be useful for debugging mod issues, but Apache's implementation in log4j2 is responsible for a very significant % of the overall runtime. Quite frankly this is shockingly bad performance from what is supposed to be a high performance logging framework. Anyway, until we can figure out if we can fix it, we're turning it off by default.
MinecraftForge/FML@bdfca1c8ed463a6053526c7a46a990007711e3d0 Make more noise when people screw up mod downloading and put .jar.zip in their mod folders.
MinecraftForge/FML@21084941127fc882d9968316a8f0669531e484df Add a custom version range factory method. Should hush skyboy's complaints. Closes #486
MinecraftForge/FML@7c1e6aaa40704001231e602ceaedfa21a5df1edf Add a delegate to every item and block. this should help with renaming fun stuffs. Also, fix all the tabs from my previous commits. *sigh*
MinecraftForge/FML@61fcb4df06dc968fcc31d3e4e524e574acfdbb3b Tweak Itemstack patch to always delegate to the method call. Set the field, so it's in sync.
MinecraftForge/FML@eb8c5ab146f2eb3ad3833d40607da97831278ffb Fix nested directory for language resources. Closes MinecraftForge#1264
MinecraftForge/FML@7c05e5f70d5387512d0bee33ef99510ee5aac739 Default collections, so that we don't crash if useDependencyInfo is true. Closes #485
MinecraftForge/FML@9729fe23326a3d4f6b03e60b5cdaf78a484b3657 Kill net.minecraft.src warning. It hasn't served a purpose in a long time now. Closes #313
MinecraftForge/FML@21e875ef22eef6068ccd6df1bd71cf58cba48eed AllowPlayerLogins only after the server has completed the core init tasks. Closes #372
MinecraftForge/FML@46cfeade80ae60ad2d8cdb40c5fdfdaeeaf16d00 Add a constructor to CustomModLoadingDisplayException. Closes #387
MinecraftForge/FML@a6eab2683a15a0cceca7a0ded6095b746cdd017b Update README.txt
MinecraftForge/FML@f75838461cf6d9c5010cbfd2d9ef5ceec03268d7 Last part is the itemstack transformer. Itemstacks should now only be loosely coupled with the items within.
MinecraftForge/FML@51f24e9e6d1bee371cf23cdfd0071de7c5175417 First draft of add alias. It is probably not properly persistent atm.
MinecraftForge/FML@2a4c6424709b20ce1e9bda0d85ce7fac47d157c2 Finally fix stupid NPE error caused by FML trying to parse the super of Object in IDEA envs.
MinecraftForge/FML@c1b1417ee168523154a0edae68c3180814eab1c7 FML now supports passing a json formatted modlist as an argument, as well as a comma separated argument list. These facilitate modpacks mostly, by meaning you don't need to duplicate mods. The modlist is arranged in the maven style, with mods referenced maven-like.
MinecraftForge/FML@3d42cda2a2cf5b24e7a25537d883260857b2107a Build.Gradle Patch
MinecraftForge/FML@20c7add8455cd16a4551ed13336a9ad4f9770cd1 Merge pull request #484 from bspkrs/master
MinecraftForge/FML@26ed4b992eb6341d52d12fb6735415ab8e3c501d Clear button list on FML fatal error screens. The hidden cancel button should not be there. Closes #497
MinecraftForge/FML@ebe4f5c5e297d5d59ce57138810627a9c7a1b412 Merge pull request #494 from AntonBoch1244/patch-1
MinecraftForge/FML@ad0da05f5c78d7f3c35a331e993dd6e679fc7ac9 Fix the ItemStack transformer to find the method and field so it works with srg and mcp naming.
MinecraftForge/FML@65d380181a84d35a78791e1bc3c7712cd90506f6 Extend timeout for client to 5 seconds. Should fix Forge #1322
MinecraftForge/FML@45486a0b6dfca65c4d1dd23176d4c9d13d46b6f5 Fix almost invisible NPE in TerminalTransformer when loading a non-existant class
MinecraftForge/FML@13da3efce07653732971837709ccf4de7e4c5c8e Allow a clean way to exit the game without big ugly warnings, but with logging information available if needed. Closes #496
MinecraftForge/FML@fda305edfea15ba2015cede72327703f273f74e3 Some more tidying up of the exit handling
MinecraftForge/FML@b087f60c3379d0767247e51cbc3f7c631fe97a08 More cleanup of exit handling, also add a couple more noise classes to the list of things ignored.
MinecraftForge/FML@d6358a466b4614cfc35b403d756fe3ef550ebf50 Cleanup override warnings
MinecraftForge/FML@af7a58b9e50dbacf63cf4b5009abc52301609e1f Update to legacylauncher 1.10 and asm 5.0.3
MinecraftForge/FML@e6d00440a612c235013f3f92f1756811139a6de0 ItemStack swapping
MinecraftForge/FML@8597e45a0e417948db483006aa54e899f28b05ac Fix NPE from a boolean
MinecraftForge/FML@b9b9daa8a9d1cac8550561f31f118589abc0c30a Fix ups from feedback.
MinecraftForge/FML@d89165021f33fbffb4563d86b30bd261506c6ea6 Mark the promise a success in the outbound handler.
MinecraftForge/FML@2e5ccf7988385d38b964c615776f23a1718f5c27 Update for launchwrapper 1.11. Fixes java 6 compatibility.
MinecraftForge/FML@641250d8536bad3af5a036b70dae94097176b420 Fix java 8u20. Closes #501 and a bunch of other bugs too.
MinecraftForge/FML@292be72639feded03ced26d9a06a98159f7a95b7 Allow client handshake to be reset by server to support BungeeCord.
MinecraftForge/FML@092873fbe5baaee53bee67d26d2fc6d3d003f095 Merge branch 'bungeecord' of github.com:bloodmc/FML
MinecraftForge/FML@134f2f8e8865a91292386a3738bb45bad0477a4b Fix bug with entityspawn - if the entity doesn't extend livingbase, it fails to write a headyaw byte, and everything will be derped for that packet.
MinecraftForge/FML@4852de81e02e2b6c6d006abe20d8497499fdf51f Wrap the server description box a little bit shorter. Stops the overlapping. Closes #489

Wrap the server description box a little bit shorter. Stops the overlapping. Closes #489

Fix bug with entityspawn - if the entity doesn't extend livingbase, it fails
to write a headyaw byte, and everything will be derped for that packet.

Fixes #499, but probably a bunch of others.

Merge branch 'bungeecord' of github.com:bloodmc/FML

Fixed biome weights not working with non multiples of 10

Allow client handshake to be reset by server to support BungeeCord.

Fix java 8u20. Closes #501 and a bunch of other bugs too.

Update for launchwrapper 1.11. Fixes java 6 compatibility.

Mark the promise a success in the outbound handler.

Fix ups from feedback.

Merge pull request #1300 from zlyfire/patch-1

Update README.txt
Fix NPE from a boolean

ItemStack swapping

Fix Stained Glass pane rendering issues

Update to legacylauncher 1.10 and asm 5.0.3

Cleanup override warnings

More cleanup of exit handling, also add a couple more noise classes to the list of things ignored.

Some more tidying up of the exit handling

Merge pull request #1330 from bonii-xx/master

Write the correct default value for StringList comments in the config
Allow a clean way to exit the game without big ugly warnings, but with logging information available if needed. Closes #496

Fix almost invisible NPE in TerminalTransformer when loading a non-existant class

Write the correct default value for StringList comments in the config

Fix AIOOB in BiomeDictionary. Closes #1326

Extend timeout for client to 5 seconds. Should fix Forge #1322

Attempt to properly resolve this daft metadata and TE nonsense. This might be mod impacting, if you maintain a reference to a TE via neighbour update calls - you
might see two TEs for a single setblock where previously you saw one. This is a phantom TE being created by badly written neighbour triggers - I'm looking at you
redstone.

Anyway, with luck, this'll close a slew of bugs across Forge, IC2, MFR, TE, RC. Yeah, fun times. Thanks to LexManos, skyboy and KingLemming for helping figure this
issue out. Quite frankly, from now on, issues with phantom TEs will be mods behaving badly. Modders will need to adapt.

Fix the ItemStack transformer to find the method and field so it works with srg and mcp naming.

Fix invalid math in GuiContainerCreative.
Merge pull request #494 from AntonBoch1244/patch-1

Build.Gradle Patch
Merge pull request #1316 from GUIpsp/master

Add ItemStack sensitive version of getItemEnchantability
Add ItemStack sensitive version of getItemEnchantability

Clear button list on FML fatal error screens. The hidden cancel button should not be
there.
Closes #497

Add ability for creative tabs that have search bars to customize the text box's width, and prevent the default set of enchanted books from being displayed in those tabs. Closes #1303 Closes #1301

Merge pull request #1187 from Abastro/skylight

Skylight Hooks for Minecraft Forge
Skylight Hooks for Minecraft Forge

Mainly for solar/lunar eclipse.

Merge pull request #1217 from Glassmaker/patch-1

Adds getLocalizedName and getUnlocalizedName to FluidStack
Merge pull request #484 from bspkrs/master

Added support for \n in GuiConfig tooltip strings + a slider fix
Update README.txt

Add in reference to running setupDecompWorkspace to get decompiled classes
Merge pull request #1297 from ShetiPhian/patch-1

Legacy Liquid Load Fix
Legacy Liquid Load Fix

nbt.getString("FluidName") no longer returns null, it returns an empty string.

This patch allows legacy liquids to be resolved once again.

Fix metadata for every permutation -.- Closes #1294

Fix patch screwup in Skyboy's Fishing PR -.-

Merge pull request #1296 from Vazkii/patch-3

Fixed items with more than 2 render passes rendering wrong in first person
Fixed items with more than 2 render passes rendering weird in first person
Build.Gradle Patch

Changing assetDir to runDir and set runDir to "eclipse"
Merge pull request #1292 from DemoXinMC/master

New PlayerRepairEvent and AnvilUpdateEvent
* Added AT for ContainerRepair.stackSizeToBeUsedInRepair (Now public)
* Added ability to AnvilUpdateEvent to alter stackSizeToBeUsedInRepair (vanilla behavior is now reproducable)
* Added AnvilRepairEvent, fired when the player removes an ItemStack from the output slot of ContainerRepair, and allows the chance to damage the anvil to be altered.

Merge pull request #1288 from skyboy/master

Add EntityFishHook AT
Add EntityFishHook AT

Merge pull request #1128 from skyboy/patch-fishingapi

Add API for fishing results, I'm tired of this, If shit breaks, Blame Skyboy and King_Lemming.
Merge pull request #1272 from rwtema/master

Fixed ItemFluidContainer always draining the maximum amount, regardless ...
Closes #1280

Fixed bug that allowed duplication of Fluids with redstone dust. Closes #1279

FML now supports passing a json formatted modlist as an argument, as well as a comma separated argument list.
These facilitate modpacks mostly, by meaning you don't need to duplicate mods. The modlist is arranged in the
maven style, with mods referenced maven-like.

Finally fix stupid NPE error caused by FML trying to parse the super of Object in IDEA envs.

First draft of add alias. It is probably not properly persistent atm.

Last part is the itemstack transformer. Itemstacks should now only be loosely coupled with the items within.

Fixed ItemFluidContainer always draining the maximum amount, regardless of the amount remaining.

Update README.txt
Add a constructor to CustomModLoadingDisplayException. Closes #387

AllowPlayerLogins only after the server has completed the core init tasks. Closes #372

Kill net.minecraft.src warning. It hasn't served a purpose in a long time now. Closes #313

Default collections, so that we don't crash if useDependencyInfo is true. Closes #485

Fix nested directory for language resources. Closes MinecraftForge#1264

Tweak Itemstack patch to always delegate to the method call. Set the field, so it's in sync.

Add a delegate to every item and block. this should help with renaming fun stuffs. Also, fix all the tabs from my previous commits. *sigh*

Merge pull request #1263 from Zarathul/master

Added drainFluidContainer() and getContainerCapacity() helper methods to FluidContainerRegistry.
Add a custom version range factory method. Should hush skyboy's complaints. Closes #486

Make more noise when people screw up mod downloading and put .jar.zip in their mod folders.

- Added drainFluidContainer() and getContainerCapacity() helper methods.

Make LogContext optional. This can be useful for debugging mod issues, but
Apache's implementation in log4j2 is responsible for a very significant % of
the overall runtime. Quite frankly this is shockingly bad performance from
what is supposed to be a high performance logging framework. Anyway, until we
can figure out if we can fix it, we're turning it off by default.

And fix the read side too, incase someone is trying to bitbang and failing.

If an IO exception comes from the datawatcher, spew it all over the console
don't discard it silently. Should stop pixelmon blaming forge for their mistakes.

Merge branch 'std-redir' of github.com:Emberwalker/FML

Update realms to 1.3.2

Clean up a bunch of compiler warnings.

Merge pull request #1254 from Adubbz/master

Added a RenderFogEvent
Added an event for fog rendering

Update FishingHooks

MinecraftForge/FML@3231db9376766d619f942b6a526718daa3c68038 Sorta revert 908491d5e7ac26becdac938f38cc90d6b9d73ce1 but merge assets into the map, rather than force overwriting. Fixes skyboy's comment.

Revert old light amortization patch. It seems to be breaking chunk sending pretty badly when more
than a couple of people are online. Tests indicate it is not useful anymore.

added support for \n in tooltip strings
added \n test tooltip localization
fixed int/double conversion error in slider entry
added test slider scenario that highlighted conversion error

Add FishingHooks

Sorta revert 908491d5e7ac26becdac938f38cc90d6b9d73ce1 but merge assets
into the map, rather than force overwriting. Fixes skyboy's comment.

Updated FML:
MinecraftForge/FML@53887ac59cec8f747e21fd251f94d5a438a69114 Hacky interm solution to #1207 to buy me time to re-write FML's network protocol.

Hacky interm solution to #475 to buy me time to re-write FML's network protocol.

Made skulls respect Block.isReplaceable when placing, also prevented them from deleting blocks when placed at certain angels. Closes #1233

Fixed NPE that happens sometimes when exiting the game witout fully loading a world {main a dev-time thing}

Updated FML:
MinecraftForge/FML@9d40b761974f10ec2b5868a992260792f8a98e5d Don't scan ObjectHolders if there was an error already, derpitude will ensure.
MinecraftForge/FML@76538c1781d6d6a1e4134fb317af99e6f13b46cc Add a terminal transformer and tweaker.
MinecraftForge/FML@aec9228845e50107112bd1f8693f9b4729694c8b Add ExitVisitor to the TerminalTransformer that finds and intercepts any calls to Runtime.exit or System.exit.
MinecraftForge/FML@908491d5e7ac26becdac938f38cc90d6b9d73ce1 Move LaunguageRegistry call above normal asset loading to allow resource packs to override mod's language systems.
MinecraftForge/FML@d13295e28113a1c310d5bbb90ebfe241fefabe02 Fix FMLAT manifest AccessTransformers, class loader fun!

Merge pull request #1235 from darkhax/master

Changed exception message for duplicate enchantment ids
Changed exception message for duplicate enchantment ids to contain the
class path for both enchantments along with the enchantmnet id that has
been duplicated. 
Fix FMLAT manifest AccessTransformers, class loader fun! Closes #477

Merge pull request #1232 from bspkrs/patch-3

Fixed missing assignment of constructor arg (thanks @Lunatrius)
Fixed missing assignment of constructor arg (thanks @Lunatrius)

I must have edited this out when I was cleaning up my formatting commit spam.
Merge pull request #1226 from williewillus/xporb

Fix experience orbs spawning at 32x coordinates clientside
Fix comment derp (+1 squashed commits)

Squashed commits:

[52c40bc] Fix experience orbs spawning at 32x coordinates clientside

Add // FORGE comment

Add // FORGE comment to clarify the purpose of the change

Move LaunguageRegistry call above normal asset loading to allow resource packs to override mod's language systems.

Merge pull request #1225 from williewillus/master

Fix chat opacity
Fix chat opacity

Add // FORGE comment

As per convention, add // FORGE comment to clarify the purpose of the change

Add ExitVisitor to the TerminalTransformer that finds and intercepts any calls to Runtime.exit or System.exit.

Add a terminal transformer and tweaker.

Don't scan ObjectHolders if there was an error already, derpitude will ensure.

Updated FML:
MinecraftForge/FML@ab52901b8b47a525e2719cf280327e97bad7f91e Force preferIPv4Stack to true early in the load chain to combat netty loopback issues.
MinecraftForge/FML@11893fbbb76569417a415ae794494b8c1150a716 Add system property to skip doing world backups when game registry changes. This is SEVERLY ill-advised, if you do this DO NOT ask for any support.
MinecraftForge/FML@fdb6b34b8fc3f1e0c6beb7bfb940a01a309f1603 Update authlib and realms to latest json data.
MinecraftForge/FML@b3a74882b4d0d704d7061b9d896febb59ab0c269 added slider controls for numerics. default control is textbox, but slider can be used as a custom list entry class. fixed constructor javadocs in GuiConfig
MinecraftForge/FML@7c6d1f7568885ff677e34692ff87b1f0826dfd48 Merge pull request #468 from bspkrs/master
MinecraftForge/FML@692d955c1a5b6d0b8601ae88632ef42136d37393 Update tweaker login to use authlib.
MinecraftForge/FML@c2119eb1c1246ba37304d9e565b4430ed7056db1 Update realms library to 1.3.1, and implement network latch when connecting to Realms. Tested and working.

Update realms library to 1.3.1, and implement network latch when connecting to Realms. Tested and working.

Update tweaker login to use authlib.

Adds getLocalizedName and getUnlocalizedName to FluidStack

Add a system property for the stencil, in case config is not available..

Merge pull request #1213 from TheCountryGamer/master

RenderBlockOverlayEvent patch
RenderBlockOverlayEvent patch

Fixes skewed XYZ parameters

Fixed Enchantment.addToBookList Closes #1160

Add ability for modders to designate custom biome types. And remove note about automatically registering. Closes #1167

Merge pull request #468 from bspkrs/master

Added slider controls for numerics. Default control is textbox, but slider can be used as a custom list entry class.
added slider controls for numerics. default control is textbox, but slider can be used as a custom list entry class.
fixed constructor javadocs in GuiConfig

Merge pull request #1194 from diesieben07/potion-icon

Added hook for potion inventory icons
Merge pull request #1199 from Adubbz/master

Enhanced the Biome Dictionary
Merge pull request #1163 from TheCountryGamer/master

Added RenderBlockOverlayEvent
Added World to ChunkProviderEvent.ReplaceBiomeBlocks, and exposed metadata to End and Nether generation events. Close #1201

Enhanced the Biome Dictionary with tags based on temperature, vegetation, moisture, trees and others

Made EmeraldOre respect isReplaceableOreGen. Closes #1157

Added RenderBlockOverlayEvent.java

Adds a Forge event which controls whether an overlay is rendered.
Overlays include: First-person fire, Block (when inside a block)
	and water when a player is inside a water block.

Patched for easier manipulation of event

Fixed for Lex

To be squashed

Removed Contructor

Added block XYZ parameters

TODO, the second block overlay event’s XYZ might not be correct

Merge pull request #1200 from tterrag1098/master

Add AchievementEvent
Update authlib and realms to latest json data.

Add system property to skip doing world backups when game registry changes. This is SEVERLY ill-advised, if you do this DO NOT ask for any support.

Force preferIPv4Stack to true early in the load chain to combat netty loopback issues.

STENCIL buffer and DEPTH buffer, attempt a fix for GL errors.
Merge pull request #1210 from Ghosrec35/master

Added Javadoc comments for Forge Event documentation.
MinecraftForge/FML@ac994e178a3533aa3c2ad8359aef9e5852c27a72 Scala people test your shit.

Scala people test your shit.

Remove the BLEND enable in rendering damage bars. And exclicitly fix blend states in some GUI elements.

Added Javadoc comments for Forge Event documentation.

MinecraftForge/FML@3ee86d0f3e47249030ba2309386f9120025e95c1 updated gradle wrapper to gradle 2.0
MinecraftForge/FML@627ae73ea655277617912df48b03288ecc79ffea Merge pull request #464 from AbrarSyed/upgradle
MinecraftForge/FML@ee38c1b3f4642c567612f88070d7f9d651994aab Fix unneeded cast causing crash in new Config GUI system.
MinecraftForge/FML@eb92c35a2fa49a0fbe35a33e31cfb58e0674f78e updated run configs for GradleStart/Server classes
MinecraftForge/FML@70dcf80410a6d12c00300c00522582ee49ac4cc8 Merge pull request #465 from AbrarSyed/upgradle
MinecraftForge/FML@0ebdbe77a2b3503db43d36aec50c98ffb8366e20 Updated Scala to latest stable
MinecraftForge/FML@ddba18e6e33a9d9c5b113b1bfc0bfc82803b2607 Merge branch 'patch-1' of github.com:Soaryn/FML into scalaupdate
MinecraftForge/FML@220a37660b2656136c634b435afee6a915fc88fe Update realms to 1.2.9
MinecraftForge/FML@abd7d0969bed5ce3d766f52b921c2b44e8ba87d2 Merge branch 'scalaupdate'

Merge pull request #1159 from ganymedes01/master

Added FluidStack sensitive version for Fluid's localised name
Merge branch 'scalaupdate'

Update realms to 1.2.9

Merge branch 'patch-1' of github.com:Soaryn/FML into scalaupdate

Updated Scala to latest stable

Updates the -dev portion of the json files for 1.7.10 for scala 2.11.1
Updates the -rel portion of the json files for 1.7.10 for scala 2.11.1

Merge pull request #465 from AbrarSyed/upgradle

fix run configs to use new GradleStart class
updated run configs for GradleStart/Server classes

Fix unneeded cast causing crash in new Config GUI system.

Add AchievementEvent

Allows modders to react to players receiving achievements, and cancel
them.

Fix indentation

More shortening

Down to one line...

Remove newline

Merge pull request #464 from AbrarSyed/upgradle

updated gradle wrapper to gradle 2.0
updated gradle wrapper to gradle 2.0

Merge pull request #1197 from MrIbby/patch-1

Add RenderItemInFrameEvent
Add RenderItemInFrameEvent

Fixed issue where Fire's 'fizz' would not play for the person who extinguished the fire.

Merge pull request #1195 from iChun/patch-1

Fixed inverted params in FogDensity use
Fixed inverted params in FogDensity use
Add config option to specify the default spawn fuzz factor for the overworld. Closes #1190

Add config option to disable attempting to creat screen with Stencil Bits.

Added hook for custom PotionEffect rendering in the inventory

Fix creative inventory tabs not blending base don items rendered. Closes #1179

Add overloaded version of SimpleNetworkWrapper#registerMessage that takes the MessageHandler instance directly, allowing to specify the same handler for multiple messages.

Merge pull request #1191 from bloodmc/chunkasync

Fixed wrong method call in ChunkIOProvider.
Fixed wrong method call in ChunkIOProvider.

When a chunk fails to load async, we fallback to the original sync method.
In this case, it was calling the async method twice which ended up causing
a stackoverflow.

MinecraftForge/FML@db219fb287b14fea5148ecdbf07d8ff08704c66a API is now able to "provide" and "own" itself. Useful for libraries without a Mod in them. To go along with this, you can now require an API, with a version, in your mod dependency string

API is now able to "provide" and "own" itself. Useful for libraries without a Mod in them.
To go along with this, you can now require an API, with a version, in your mod dependency string

Merge pull request #1183 from bspkrs/master

fixed dupe quotes issue with category names that require quotes when save is called more than once
fixed compounding quotes issue with category names that require quotes when save is called more than once

Update to MC 1.7.10, bump to 10.13.0

MinecraftForge/FML@bc420dcb0b086899e2aaa218a6f5bd7e91091a90 Fix Eclipse launching attribute
MinecraftForge/FML@1e0134a1ca97a1107ebbe604e5318e6f350fe9c4 Merge pull request #455 from rumickon/feature
MinecraftForge/FML@1c5db211afc9962fedb7fd8450abc45d07807634 Update for release 1.7.10
MinecraftForge/FML@79a0c5e55905f0f08471d026b744a563ea421236 Merge branch 'mc179'

Merge branch 'prerelease'

Merge branch 'mc179'

Update for release 1.7.10

Fix API incompatibilities. Should mean mods will work with new config changes.

Merge pull request #455 from rumickon/feature

Fix Eclipse launching attribute
Merge pull request #1180 from luacs1998/patch-2

Update mc version string
Update mc version string

Or was I not supposed to?
Fix API incompatibilities. Should mean mods will work with new config changes.

Fix mcp release number

Merge branch 'master' into prerelease

Merge branch 'bspkrsgui'

MinecraftForge/FML@701d98eafa4d55144b166d26030818baa9b2f680 Added config GUI system
MinecraftForge/FML@50164db5c13c85636c7fda0e13bae1fc0aedc745 Merge branch 'master' of github.com:bspkrs/FML into bspkrsgui
MinecraftForge/FML@7eb36a1481aea9f68fa46bc199195769b27d904b Merge branch 'bspkrsgui'

Merge branch 'master' of github.com:bspkrs/MinecraftForge into bspkrsgui

Conflicts:
	src/main/resources/assets/forge/lang/en_US.lang

Clean patch cruft.

Fix new method with Side.CLIENT when it shouldn't have it. Closes a bunch of reports of problems.

MinecraftForge/FML@701d98eafa4d55144b166d26030818baa9b2f680 Added config GUI system
MinecraftForge/FML@50164db5c13c85636c7fda0e13bae1fc0aedc745 Merge branch 'master' of github.com:bspkrs/FML into bspkrsgui
MinecraftForge/FML@7eb36a1481aea9f68fa46bc199195769b27d904b Merge branch 'bspkrsgui'
MinecraftForge/FML@96a7e14a45404449fb72af6d2d5e1efd30003318 Merge branch 'master' into mc179
MinecraftForge/FML@f45f18b1d71e1c1d12582faa337a19e73ed5fb18 Fix accessing guava from transformers
MinecraftForge/FML@8f7adced471951c798cfa6844b0abc176c93d19b Fix library issue. mojang auth requests newer libs, so we get them at dev time. But the mojang json doesn't refer them at runtime. So there's a lib mismatch. Fortunately all are available at mojang, so we can update the json.

Fix library issue. mojang auth requests newer libs, so we get them at dev time. But the
mojang json doesn't refer them at runtime. So there's a lib mismatch. Fortunately all are
available at mojang, so we can update the json.

Fix accessing guava from transformers

Merge branch 'master' into mc179

Merge branch 'bspkrsgui'

Fix Eclipse launching attribute

Merge branch 'master' of github.com:bspkrs/FML into bspkrsgui

MinecraftForge/FML@5d6dc5dce37e488188d6fc468c16e8a6183a3610 Fix up other exit points. Should stop process hangs for clean exits.
MinecraftForge/FML@8a240ec3c7e4cf4c57beabdfe9bd408e57de1bdc Merge branch 'master' into mc179
MinecraftForge/FML@0cd5ef6bb71cda1ef6add892d1247148bf1ecc15 Fix NPE when no FMLAT is defined

Fix NPE when no FMLAT is defined

Merge branch 'master' into mc179

Conflicts:
	src/main/java/cpw/mods/fml/relauncher/FMLSecurityManager.java

MinecraftForge/FML@5d6dc5dce37e488188d6fc468c16e8a6183a3610 Fix up other exit points. Should stop process hangs for clean exits.

Fix up other exit points. Should stop process hangs for clean exits.

MinecraftForge/FML@e1529845384f4935b7c11d4d36d25db51c0b9a31 Add support for mod access transformers without a coremod requirement. Use the "FMLAT" manifest attribute, with a space separate list of files that live in the 'META-INF' directory. They should conform to standard AT formatting.

Add support for mod access transformers without a coremod requirement.
Use the "FMLAT" manifest attribute, with a space separate list of files
that live in the 'META-INF' directory. They should conform to standard AT
formatting.

MinecraftForge/FML@06ab104c9ab798af6d2726e02a238211ff8124e1 Force the descriptors to the right type for the field they're referencing. Fixes the sand issue

Force the descriptors to the right type for the field they're referencing. Fixes
the sand issue

Fix flower pots not droping the items that are inside them.

Update to 1.7.10-pre4.

Null check the Item in the supplied stack as well as the stack itself.

And fix firing for single player loading.

Fix derpity derp.

Harden the security manager and make it less spammy. Clean up a bunch of deprecation warnings from guava.

remove the deprecation patches. The methods are gone now

Merge branch 'master' into mc179

Fix server side to write properly

Pre4 update

Fire an event when a player loads or saves from disk. Mods that want to load an additional
player related file from the players dir can now do so in that event.

Some patch offsets
MinecraftForge/FML@7219061b05db73d245405ef777b412d0787398b6 Also patch in warnings for Vec3Pool - similarly removed.
MinecraftForge/FML@dff22045587b37282adeb2167486a572f51f1f16 FML now sets a security manager (FINALLY!). It's primary purpose at this point is to catch rogue calls to System.exit so that they can cause a proper crash report, rather than silently abandoning the game.

Fix up some patching bugs. Fully functional @ pre3

Merge pull request #1164 from lumien231/Fix-DimensionCrash

Fixes a server crash caused by a player joining that is in a non existen...
Fixes a server crash caused by a player joining that is in a non existent dimension

Merge pull request #1162 from Thog92/1.7-biome

Add missing 1.7 biomes to BiomeDictionary
Add missing 1.7 biomes to BiomeDictionary

Added FluidStack sensitive version for Fluid's localised name

Would be helpful for determining names for more complex FluidStacks (with tag compounds for example)
Merge pull request #1155 from Zarathul/master

Added soft return for modders passing invalid negative ids to OreDictionary.getOreName. Warning: WILL Error in 1.8+
Fixed ArrayIndexOutOfBoundsException in getOreName

Added sanity check to prevent ArrayIndexOutOfBoundsException in getOreName for negative ids.
FML now sets a security manager (FINALLY!). It's primary purpose at this point is to catch
rogue calls to System.exit so that they can cause a proper crash report, rather than
silently abandoning the game.

Fixed vines generation for hanging off of trees.

Also patch in warnings for Vec3Pool - similarly removed.

Merge pull request #1147 from bloodmc/chunkasync

Don't call ChunkDataEvent.Load async
Don't call ChunkDataEvent.Load async

ChunkDataEvent.Load must be called after TE's are loaded since this is
what mods expect. The event is handled by ChunkIOProvider during
callStage2.

Checking in pre3 work

Merge pull request #938 from bloodmc/chunkasync

Load chunks asynchronously for players.
Merge pull request #1125 from alucas/addmissingjumpevent

Add missing onLivingJump calls
Pop version for new Recomended build.

Load chunks asynchronously for players.

When a player triggers a chunk load via walking around or teleporting
there is no need to stop everything and get this chunk on the main thread.
The client is used to having to wait some time for this chunk and the
server doesn't immediately do anything with it except send it to the
player. At the same time chunk loading is the last major source of file IO
that still runs on the main thread.

These two facts make it possible to offload chunks loaded for this reason
to another thread. However, not all parts of chunk loading can happen off
the main thread. For this we use the new AsynchronousExecutor system to
split chunk loading in to three pieces. The first is loading data from
disk, decompressing it, and parsing it in to an NBT structure.  The second
piece is creating entities and tile entities in the chunk and adding them
to the world, this is still done on the main thread. The third piece is
informing everyone who requested a chunk load that the load is finished.
For this we register callbacks and then run them on the main thread once
the previous two stages are finished.

There are still cases where a chunk is needed immediately and these will
still trigger chunk loading entirely on the main thread. The most obvious
case is plugins using the API to request a chunk load. We also must load
the chunk immediately when something in the world tries to access it. In
these cases we ignore any possibly pending or in progress chunk loading
that is happening asynchronously as we will have the chunk loaded by the
time they are finished.

The hope is that overall this system will result in less CPU time and
pauses due to blocking file IO on the main thread thus giving more
consistent performance. Testing so far has shown that this also speeds up
chunk loading client side although some of this is likely to be because
we are sending less chunks at once for the client to process.

Thanks for ammaraskar for help with the implementation of this feature.

This commit is based off the following :

Bukkit/CraftBukkit@b8fc6ab2c12e9b4c8d7b5370e44f23cc838014b2
Bukkit/CraftBukkit@85f5776df2a9c827565e799f150ae8a197086a98
Bukkit/CraftBukkit@0714971ca2a31bc729bdd78ded8c69ffb2284813
Bukkit/CraftBukkit@7f49722f457dcc31f8cac8e011871ff1b7fd3306
Bukkit/CraftBukkit@53ad0cf1abe9c060ef411a86e9a16352f3e5197e

Implement STDOUT/STDERR redirection.

These streams now redirect to log4j2, with form '[class:method:line]: Original message'.

MinecraftForge/FML@1a99ec7db612f258983c6ac685da906bf7cde0a6 Deprecate getAABBPool so people can stop using it in mods. Failure to do so will result in 1.7.10 upgrade incompatibility. Use getBoundingBox instead.

Warn when chunks are being self-recursively loaded. This can cause serious issues. Modders should watch out.

Changed dustLapis to gemLapis to make OM SHUT THE HELL UP.
Fixed missed metadata offset, and now cache return values of getOres for speed.

Add missing onLivingJump calls

Merge pull request #1126 from Cojomax99/fog_customization

World fog color and density can now be controlled through an event
World fog color and density can now be controlled through an event

Merge pull request #1134 from diesieben07/ender-teleport

Fix EnderTeleportEvent for Ender Pearls.
Fixed inverted player parameters in PlayerEvent.Clone, Closes #1142 Closes #1140

Changed EntityWolf to EntityTameable in EntityLivingBase.attackEntityFrom, to allow for more custom pets. Closes #1141

Rework OreDictionary's internals to be a bit more speedy to help combat modders using it inapropriatly. Closes #1022 Closes #1131

Deprecate getAABBPool so people can stop using it in mods. Failure to do so will result in 1.7.10 upgrade incompatibility. Use getBoundingBox instead.

Tweak bad packet warning some. Makes it a bit more log friendly.

Fix not being able to change target & attackDamage for EnderTeleportEvent.

MinecraftForge/FML@e3ce211cc798f4d86ca6f974d9ba8b4e389b4dc9 Nullcheck the dispatchers on players. Should stop some crashes when spamming connectivity.
MinecraftForge/FML@480bf2c1d078038bb59c4254a01a5af685c7cb22 Fix REPLY handling in SimpleNetworkWrapper. Closes  #440

Fix REPLY handling in SimpleNetworkWrapper. Closes  #440

Fix inverted parameters in OreDictionary.getOreID Closes #1123
-.- Closes #1120

Added support for new FML config GUI classes
refactored lots of stuff based on comments

added Configuration.load() exception handling and logging

Added config GUI system

Merge branch 'master' into mc179

Nullcheck the dispatchers on players. Should stop some crashes when spamming connectivity.

Merge pull request #1034 from Adubbz/master

Greatly simplified the addition of new biomes to the default world. If this breaks things blame Adubbz.
Added Noteblock change and play events. Closes #1027 #1025

Add target world to PlayerInteractEvent for potential 'cross dimension' interaction such as LittleBlocks. Closes #1071

Add a couple of localizations to Forge added strings. Closes #1068

Merge pull request #1095 from rwtema/master

Fixed setBlock not using the location version of getLightOpacity()
Filter all vanilla blocks that we missed through Forge's getDrops and BlockDrops events. As well as implemented IShearable for DoublePlants and DeadBushes. Mojang really should generic out some of this stuff instead of repeating logic all over the place!

Add comment to RotationHelper telling modders where to actually look, closes #1115

Fixed GuiContainer calling button.mouseReleased. Closes #1116

Fix patch fuzz

MinecraftForge/FML@585d3a91e15213da20fb1669b81cc6563ab4e780 If a packet is not handled by the channel, log it, and clear it. Could be spammy, but this is a serious bug and could cause a memory leak otherwise.
MinecraftForge/FML@cd715efca14604cd8c7b1bdb54c0796202d55e69 Log the queue as well

Merge pull request #1112 from diesieben07/entity-tracking

Add PlayerEvent.StartTracking and .StopTracking
Add PlayerEvent.StartTracking and .StopTracking & make trackedEntityIDs visible
& Update, as discussed on IRC (squash)

Merge pull request #1109 from Open-Code-Developers/finite-patch

Make finite fluid blocks drainable
Fix enum helpers for EnumRarity {moved to Commn and changed paramter} and EnumCreatureType {new parameter} and added junit test for them. Closes #1009

Log the queue as well

If a packet is not handled by the channel, log it, and clear it.
Could be spammy, but this is a serious bug and could cause a memory leak
otherwise.

MinecraftForge/FML@1d41aa978d41267e4040ec449e10f49a20edd4fa Fix the side for the compatibility check. Should result in green ticks finally!

Fix the side for the compatibility check. Should result in green ticks finally!

Change IShearable JavaDoc by one line so Anti would shut up. Closes #1054

MinecraftForge/FML@4512f8e5e316ddaf6a4fe35470f1f88dcdddae1a Warn when the objectholder finds nothing in the registry. Helps debug mismatched names. Also, actually make the scoping thing work with objectholder

Warn when the objectholder finds nothing in the registry. Helps debug mismatched names.
Also, actually make the scoping thing work with objectholder

Also handle Blocks.air as a special case. It should never be a valid block in the block registry.

Nothing can ever replace the default block registry block. It is disabled for replacement.

Air is properly skipped

Merge pull request #1089 from RainWarrior/render-events

Added world display list render events
Added world display list render events

Merge pull request #1103 from ganymedes01/patch-1

Fix getOreIDs not using the wildcard value correctly
Fix getOreIDs not using the wildcard value correctly

You can see it's not working by requesting the ore IDs from lapis, and you'll see the name "dye" is missing (and that's the one registered using the wildcard).

Fixed it by inverting the order of the item stack parameters.
Prevent duplciates in registered Ores in the OreDictionary and clean up some of the code, add new function to return all ores the specified ItemStack satisfies. Closes #1102

Merge pull request #1101 from Open-Code-Developers/master

Fix fluid blocks
Make finite fluid blocks drainable

Fix fluid blocks
For https://github.com/BuildCraft/BuildCraft/issues/1843 .

Updated FML:
MinecraftForge/FML@3aba56440aa7a95f6431efcdcb5c127ebafc8891 lastIndexOf, Note Don't code while sick.

lastIndexOf, Note Don't code while sick.

Updated FML:
MinecraftForge/FML@3a687f48b9606b4f9179d63ef0b831a25821ff8f -.- Save File First. My Bad.

-.- Save File First. My Bad.

Updated FML:
MinecraftForge/FML@c828bb63c57cb10c23d9b1c3a6934e9f9ddba37b Make AccessTransformer change INVOKESPECIAL to INVOKEVIRTUAL when making methods visible
MinecraftForge/FML@a9aa468457a1eeed3366505b93e36da654610f05 Merge pull request #431 from diesieben07/at-invokevirtual
MinecraftForge/FML@31d726abad0dec6d1b853e9adf6a01580aee2af4 Fix the null networkHandler in the MessageContext
MinecraftForge/FML@725d988e36a7b104b9f5d8ae2daf993ac12af5bd Add in the objectholder, autopopulated by FML based on simple rules. Allows for reference driven substitution of mod blocks and items based on their server running state.
MinecraftForge/FML@f07bf5cb30a20ca9f62337512e936cfefcfbf0c4 Fixed deobfusication of nested inner classes. And removed legacy ModLoader remaps.

Fixed deobfusication of nested inner classes. And removed legacy ModLoader remaps.

Add in the objectholder, autopopulated by FML based on simple rules. Allows
for reference driven substitution of mod blocks and items based on their
server running state.

Fix the null networkHandler in the MessageContext

Add Glass, Colored glass, ore storage blocks, alines, and a few others to ore dicitonary. Closes #1011

Made WorldGenShrub respect Block.canSustainPlant, Closes #1096

Add new PlayerEvent.Clone called when an EntityPlayer is cloned via dimension travil or respawn.

Fixed setBlock not using the location-specific version of getLightOpacity()

Merge pull request #431 from diesieben07/at-invokevirtual

Make ATs replace INVOKESPECIAL when needed
Merge pull request #1091 from Clashsoft/master

Don't render ItemStack tooltip twice
Update GuiScreen.java.patch
Make AccessTransformer change INVOKESPECIAL to INVOKEVIRTUAL when making methods visible

Merge pull request #1086 from WaDelma/master

Added amount that is being filled/drained to the FluidEvent
Fluid events now know how much fluid is moved

Added amount that is being filled/drained to the FluidEvent

Added constructors without amount to ensure backwards compability

Added deprecation to amountless constructors

Fixed Stems not droping a random number of seeds based on metadata, Closes #1087

Merge pull request #1081 from XCompWiz/master

Bug Fixes to Biome Decoration and Chunk
Bug Fixes to Biome Decoration and Chunk
Fixes issue with biome decoration crashing on worlds with exposed void
Fixes same issue in JungleBiome decoration
Fixes forge bug in getting lighting from a block in chunk

First draft 1.7.9 support.

This is not modding minecraft. It's performing an update. Go away!

Added accessible instance to RenderBlocks and RenderItem for modders to use who don't wish to create there own instance. Warning: Other modders may influance the transient state of the instance, BE WEARY MODDERS.

Added Farmland to PLAINS type plants as that has changed in 1.7. Also made BlockTallGrass call it's super.canBlockStay to better support custom soils. Closes #1077

In Flower Forest biome a Poppy should spawn instead of Blue Orchid Closes #1078

MinecraftForge/FML@43e3ee1af1cab54db238dab4994076fdbe68bc6a Swap Listenerlist constructor around. Should fix parent resizing issue?

Swap Listenerlist constructor around. Should fix parent resizing issue?

MinecraftForge/FML@70570a863ffa6a3ba7e2dd30b471bb47615b8bf8 Fix up possible CME

Fix up possible CME

MinecraftForge/FML@503da3a2577a069b7847c158a27e8316c85ed852 Don't consider null NetworkDispatchers. This should fix a bunch of fakeplayer issues.

Don't consider null NetworkDispatchers. This should fix a bunch of fakeplayer issues.

Nothing to see here. No modding being done.

Fixed No Blue Orchids spawn in swamp when using bone meal Closes #1072

Fully clear DimensionManager's DimensionID bitset when world is loaded. Closes #1074

Fix forge validating strict versions on remote connections.

MinecraftForge/FML@a8cbef2321a8e1bdfac56476bdfb5b306f71d38b Finally hopefully fully kills the race condition causing a classcast on slow machines.
MinecraftForge/FML@8dbd1ae0a177a556d03630a059242a2ee7f45e55 Fix ObjectIntIdentityMap sporadically matching non-identical objects.
MinecraftForge/FML@42713c66e565a26e963099baa838800f250089c3 Merge pull request #426 from sfPlayer1/master

Merge pull request #426 from sfPlayer1/master

Fix ObjectIntIdentityMap sporadically matching non-identical objects.
Fix ObjectIntIdentityMap sporadically matching non-identical objects.

Finally hopefully fully kills the race condition causing a classcast
on slow machines.

This is me bugfixing. NOT MODDING! No! Stop it! I'm not!

Greatly simplified the addition of new biomes to the default world

MinecraftForge/FML@d8b6adb2598ce144568a0aaf26fa8b988c028b7c Add a helper for casting some common collection types into generic form
MinecraftForge/FML@5275cea844a6afacc0deb41d153f01c1c25bb924 Try and see if there is anything to the identityHashCode collision hypothesis. If you see this in your error messages, kindly let us know!

Try and see if there is anything to the identityHashCode collision hypothesis. If you see this in your error messages, kindly let us know!

Add a helper for casting some common collection types into generic form

Updated FML:
MinecraftForge/FML@a70308ef41f1e24074ea718f64caf75b8d6acba7 Update mcmod.info
MinecraftForge/FML@8555344eb33e4f0cc676defdb7391a24ebd5677d updated wrapper to gradle 1.12
MinecraftForge/FML@1d5fc60f82e911c1abfbebbe781316126c02c987 Merge pull request #411 from matthewprenger/master
MinecraftForge/FML@3612ad0c25d103ba9bc81b32e8ecfef2dfc1cadc Attempt to fix another race condition related to reading NetClientHandler.
MinecraftForge/FML@c73a2076e3dd5d1f60c2fe2f589109cefa2dc6ce Fix potential rance condition in connecting to vanilla servers as well. And move latch into client side only.
MinecraftForge/FML@1436ac2f14fbdb48777c90b1b93378108c9cbf36 Fine use FMLCommonHandler.
MinecraftForge/FML@542e9acec1016c950c6f80af0c9da3190691359b documented dependencies
MinecraftForge/FML@ddc2cfbe864bd377232dbd1aa65df6e710d4639d Merge pull request #402 from AbrarSyed/patch-1
MinecraftForge/FML@362ec8dee7ed2c291a8ed287c52eacdd80582eff Merge pull request #419 from Thog92/master
MinecraftForge/FML@b9de9ebc960bbf26e7aee570701aa4c226252fee Revert "Fix refreshResources not happening if an error occurs."
MinecraftForge/FML@738ce1d7cd5575269375066586d0a37881c536e2 Re-add removed genericiterable to clean a warning
MinecraftForge/FML@b0eb1ef7c6f4a63689898bf28f28e84d2dbae6e7 Split loadmods into loadmods and preinitmods, to allow resource loading to occur *always* between the two phases. This should fix mods not being able to access resources during preinit.
MinecraftForge/FML@de546bdf6cbeadb612cd6385bac8d54480073496 Clean up some missing generic info
MinecraftForge/FML@cd43eacbb25bc9cc0e81138844fa3aa7fd133037 Ensure that the loadcontroller is ready to preinit.
MinecraftForge/FML@f2fe80dc36972fe9db57e700380b6869abbc1832 Fixed default network mod checking to allow client side mods without the server side. Mods wishing to REQUIRE server side components must specify a custom check handler using @NetworkCheckHandler
MinecraftForge/FML@0c36868f92a3516c83ae363e13e5cb1db81236d1 Fix network disconnect with message on the client side in NetworkDispatcher.

Fix network disconnect with message on the client side in NetworkDispatcher.

Fixed default network mod checking to allow client side mods without the server side. Mods wishing to REQUIRE server side components must specify a custom check handler using @NetworkCheckHandler

Merge pull request #1064 from bspkrs/patch-2

Fixed unforeseen NPE
Ensure that the loadcontroller is ready to preinit.

Clean up some missing generic info

PS: NOPE: still not modding.

Split loadmods into loadmods and preinitmods, to allow resource loading to occur *always* between the two phases. This should fix
mods not being able to access resources during preinit.

PS: I'm still not modding.

Fixed unforeseen NPE
Re-add removed genericiterable to clean a warning

Revert "Fix refreshResources not happening if an error occurs."

This reverts commit fff86ee9d35874bdf77a1eaabe77615441644064.

Revert "Implemented hashCode and equals in ItemStack, Closes #986"

This reverts commit 0b01545a03942abca7b7ea28030be81e2ebeaa59.

Merge pull request #419 from Thog92/master

updated wrapper to gradle 1.12
Merge pull request #402 from AbrarSyed/patch-1

Added dependency examples to the shipped example mod's build.gradle.
documented dependencies

Implemented hashCode and equals in ItemStack, Closes #986

Fix extended entity properties being lost when leaving the end, This introduces the concept of calling IExtendedEntityProperties.init when entites/worlds change. Lets see if mods explode.

Fine use FMLCommonHandler.

Merge pull request #1062 from bspkrs/master

New GuiScreen events and a new ElementType DEBUG for RenderGameOverlayEvent
Fix potential rance condition in connecting to vanilla servers as well. And move latch into client side only.

New GuiScreen events and a new ElementType DEBUG for RenderGameOverlayEvent

Attempt to fix another race condition related to reading NetClientHandler.

Added new hook to WeightedRandom.getItem that allows for use of custom rnadom generators, prevents redundant code in mods.

Merge pull request #411 from matthewprenger/master

Update ExampleMod mcmod.info
Fixed hard references in WorldGenBigTree and ForgeCommand that caused worlds to leak in the client.

Updated FML:
MinecraftForge/FML@2c56c32c5aa8842cfadaf8c237396cdb75673909 Fix saving backups with the raw name. Fix air block not being assigned as the default.
MinecraftForge/FML@d0f8073fa51db7426d5ded373f3404fa60d722f0 Merge pull request #413 from sfPlayer1/master
MinecraftForge/FML@810b1f3075e6061ab189e1f6975bd77b20040d71 Clean some generic warnings up. Make a generic list handler. Helpful for others I think too.
MinecraftForge/FML@fff86ee9d35874bdf77a1eaabe77615441644064 Fix refreshResources not happening if an error occurs.
MinecraftForge/FML@76d8d0e870a4e389167634283984dc10abb08e84 Fix mod version checking
MinecraftForge/FML@b84d0760ae47832e5b1e4d50237b582b2d50d520 Fix display of mod status at the server
MinecraftForge/FML@251af1d09dfbf636e2fb3f323a5345c81cc07aea Fixed memory leak on the client caused by Netty holding references to the World.

Merge pull request #1060 from Azanor/master

Fix for Block.getExplosionResistance getting passed the wrong parameters
Fix for Block.getExplosionResistance getting passed the wrong parameters

It is being sent the x, x, y coordinates instead of x, y, z

updated wrapper to gradle 1.12

Fixed memory leak on the client caused by Netty holding references to the World. Closes #415 #417

Fix display of mod status at the server

Fix mod version checking

Fix refreshResources not happening if an error occurs.

Clean some generic warnings up. Make a generic list handler. Helpful for others I think too.

Merge pull request #413 from sfPlayer1/master

backup+default block use fix
Fix saving backups with the raw name.
Fix air block not being assigned as the default.

Merge pull request #1051 from Deadrik/ChunkProviderFixes

ReplaceBiomeBlocks Event changes
Adds a new ReplaceBiomeBlocks Event constructor that supplies the metadata array if applicable and updates the ChunkProviderGenerate class to pass in the metadata array.

Merge pull request #1050 from CovertJaguar/master

Flexible Rail return value was inverted between 1.6 and 1.7
Fix issue with flexible rail return value

Between 1.6 and 1.7 the return value to BlockRailBase.isFlexibleRail()
was inverted. While this is not a huge deal and could be worked around
by simply inverting your return value, it does mean its no longer
consistent with the function name and javadocs.

Update mcmod.info
No, this is not me modding either. I'm doing this as a favour for Lex, who's a bit computerless at the minute.

MinecraftForge/FML@77c254a6d9658a38768d53425291e93557fddc85 I am not modding, I am fixing an annoyance. The MCP version has long since been 9.03. Also, the JSON from MC updated..
MinecraftForge/FML@7f01cf549b88f8d5f4dfae7bc17d08f8c5e525c8 I'm still not modding. Player has contributed greatly to the 1.7 release of FML. He needs authorship credit.
MinecraftForge/FML@2b8d0f6680de6257583912f3159cce38ce2bf08c Fix SimpleNetworkWrapper - this is not me modding, I didn't realize it was broken until Pahimar told me.
MinecraftForge/FML@ddee7eb117a50d190d6e987d94076f53b3b6807b Fix vanilla bug causing integrated server saving from 2 threads concurrently after a crash
MinecraftForge/FML@59a5adfdb3ffdffe0df206109dd59a3d4d023afe Registry: Fix Block-before-ItemBlock allocation when loading 1.6 world saves, more validation
MinecraftForge/FML@d88b2aa0c5401c9b2b48cb451f1ab9bbee52bec1 prevent the world from getting saved twice at shutdown
MinecraftForge/FML@9b1cbab03b75fc15905c8ce02f401f48b174782c Registry: Crash earlier with conflicting name/object registrations.
MinecraftForge/FML@7ba167c500cbccc05ce5104e9b26eb6a799aaaa8 Registry: Misc tweaks
MinecraftForge/FML@78248da399c04a438586d1a5d7f36d6d752dd5c3 Registry: Treat all 1.6 entries as items.

Registry: Treat all 1.6 entries as items.

Registry: Misc tweaks

Registry: Crash earlier with conflicting name/object registrations.

prevent the world from getting saved twice at shutdown

Registry: Fix Block-before-ItemBlock allocation when loading 1.6 world saves, more validation

Fix vanilla bug causing integrated server saving from 2 threads concurrently after a crash

Fix SimpleNetworkWrapper - this is not me modding,
I didn't realize it was broken until Pahimar told me.

Put an example in the docs.

Merge pull request #1044 from bspkrs/patch-1

Fixed typo in update checker
I'm still not modding. Player has contributed greatly to the 1.7 release of FML. He needs authorship credit.

I am not modding, I am fixing an annoyance. The MCP version has long since been 9.03. Also, the JSON from MC updated..

get a spelling checker :P
Bump Forge version in prep for release.

Try and fix invalid framebuffer depth/stencil setup, Thanks Ivoforce. Closes #1032

Merge pull request #1038 from planetguy32/master

Fix infinite loop in RecipeSorter
Fix infinite loop in RecipeSorter

If recipe is multiple levels of inheritance from Object and not categorized, cls=cls.getSuperclass(); needs to be repeated more than once. It must therefore be moved to inside the while loop.
Merge pull request #1029 from iChun/patch-1

Fixes stencil buffers on platforms not supporting OpenGL 3.0 or higher.
Fixes stencil buffers on platforms not supporting OpenGL 3.0 or higher.
Small wording change in license to allow for specifc differnet licnense contributions.

Updated FML:
MinecraftForge/FML@e58562d3edfd1cd37fdc0a9e54181aed7433fdff Fix remaining issue with autoassigned Block and Item IDs overlapping.
MinecraftForge/FML@a82195772e539437911c25508168cb607659bc71 Registry: Block IDs after failing to find a mapping for them
MinecraftForge/FML@fd9389015fd5c6150155531bf1fffb38cfe9d551 Fix FMLMissingMappingsEvent.get
MinecraftForge/FML@5eebd4df718d65ac8426deba61e1ebb6ae2fde18 Registry: Implement support for remapping blocks/items to a new name.
MinecraftForge/FML@7325aa5033e7a5b5db79340777dd7a1c763315a0 Registry: cleanup, fix missing id error GUI formatting
MinecraftForge/FML@eb29d651ebda7086fe6d1f716295b087e2c17e6f Fix old 1.7 worlds with broken ID mappings
MinecraftForge/FML@6fd3c12a4a15a5cf38c421a94576a5cacd3fb7c1 Registry: allow handling missing blocks/items regardless of the mod id
MinecraftForge/FML@038fa17ad33aeba276db84ab170504fce884c1e7 Merge branch 'master' of https://github.com/MinecraftForge/FML
MinecraftForge/FML@49c623f59c440ba177adf2d76332ecee25e12236 initial attempt at a better way to ask the user in case of startup issues
MinecraftForge/FML@9be92dcfcb1c737025397c92b18ed027a6c7f4fa Registry: Complain about bogus registrations
MinecraftForge/FML@fd6d55afcc4f4c650c143ad43e09fbdc2cb9d850 Registry: Allow ignoring missing mods from the GUI, with confirm+backup
  Registry: Add confirm+backup for automated corrupted id table fixup Require the user to confirm loading from a backup level.dat
MinecraftForge/FML@c47fc3b382434d435050b4ee02a02550b81f5717 Enable custom gui rendering only as required
MinecraftForge/FML@f77632df35dbf53fb31420fa86e6792f13257020 Remove unneeded entity spawn debug logging.
MinecraftForge/FML@c7adb42199a0684d8748451d39deb8326c0a2194 Registry: Repair mismatched ItemBlocks as well Fix a few misc issues
MinecraftForge/FML@c8a245a985779fd2545ee4b58a93270973aeb435 Registry: Fix debug info
MinecraftForge/FML@c8a0b72eba9265be608670424e1bd835a9d2f1e2 Registry: Complain about missing mods when repairing broken worlds Registry: Reduce console spam
MinecraftForge/FML@8e44006f432f1b36b826ff0469d99986a6051e4b Registry: Protect against putObject misuse, handle duplicate registrations better
MinecraftForge/FML@294c93212cd9f30c50b9d1a3b048a6141c45cdea Registry: Add support for registering ItemBlocks before their Blocks
MinecraftForge/FML@3b42b33b6ec4020b5032cae06760053ed135fae8 Merge pull request #400 from sfPlayer1/master

Merge pull request #400 from sfPlayer1/master

Fix various registry issues
Registry: Add support for registering ItemBlocks before their Blocks

Merge pull request #1028 from alexbegt/patch-1

Small Fix: Held Items & Multiple Render Passes
Small Fix: Held Items & Multiple Render Passes

Passes beyond 1 now have the correct icon.
Registry: Protect against putObject misuse, handle duplicate registrations better

Registry: Complain about missing mods when repairing broken worlds
Registry: Reduce console spam

Registry: Fix debug info

Registry: Repair mismatched ItemBlocks as well
Fix a few misc issues

Fix line offset in Minecraft patch, and mix RenderPlayer looping once to many on multi-pass items.

Merge pull request #1024 from ShetiPhian/patch-1

Add a variable for SoundCategory in PlaySoundEvent17
Update PlaySoundEvent17.java
Remove unneeded entity spawn debug logging.

Enable custom gui rendering only as required

Finally do SoundSystem workup for 1.7, Closes #982

Add NPE protection to GuiingameMenu.actionPerformed, Closes #961

Update access transformer, Closes #951 and #1021

Fix potential threading issue if FluidRegistry.loopupFluidForBlock is called from two threads at the same time before being setup. Closes #936

Use BiomeGenBase's array size instead of hardcoding it in BiomeDictionary. Closes #871

Add AnvilUpdateEvent which is fired when a user places a item in both input slots of a Anvil and allows modders to control the output. Closes #838

Add ANIMALS tpe to PopulateChunkEvent.Populate Custom providers should call this function if they spawn animals curing population. Closes #790

ItemStack sensitive version of Item.getAttributeModifiers, Closes #816

New hook to truely seperate the display of the 'durability' bar from the current / max durability. Allowing modders to control that display easier.

Advanced Model Loader available server-side for data driven models. To be cleanuped and re-evaluated in 1.8. Closes #773

Add position to BreakSpeed event. Closes #621

Registry: Allow ignoring missing mods from the GUI, with confirm+backup
Registry: Add confirm+backup for automated corrupted id table fixup
Require the user to confirm loading from a backup level.dat

Registry: Complain about bogus registrations

initial attempt at a better way to ask the user in case of startup issues

Merge branch 'master' of https://github.com/MinecraftForge/FML

Conflicts:
	src/main/java/cpw/mods/fml/client/FMLClientHandler.java
	src/main/java/cpw/mods/fml/client/GuiModItemsMissing.java
	src/main/java/cpw/mods/fml/common/FMLContainer.java
	src/main/java/cpw/mods/fml/common/registry/FMLControlledNamespacedRegistry.java
	src/main/java/cpw/mods/fml/common/registry/GameData.java

Update patches for new Fixed FernFlower used in FG 1.2.

Merge pull request #1012 from AbrarSyed/master

Updated for ForgeGradle 1.2
Update patches for Fixed FF in FG 1.2.

Registry: allow handling missing blocks/items regardless of the mod id

Fix old 1.7 worlds with broken ID mappings

fixed remaining noop patches and exc derp

updated FML to latest master

added .exe file.. fixed a bunch of patches

Registry: cleanup, fix missing id error GUI formatting

Merge pull request #392 from AbrarSyed/master

Updated to ForgeGradle 1.2
updated wrapper to gradle 1.11

updated example a little

updated for ForgeGradle 1.2

COnverted patches to SRG names

Registry: Implement support for remapping blocks/items to a new name.

Fix FMLMissingMappingsEvent.get

Registry: Block IDs after failing to find a mapping for them

Fix remaining issue with autoassigned Block and Item IDs overlapping.

Update CONTRIBUTING.md

Add link to wiki page on contributing
Create CONTRIBUTING.md

Simple file (which github will show for those making PRs) containing guidelines for making PRs.
Feel free to comment if you want/need anything added. I can pull the same thing to FML too if you'd like, Lex.
updated for ForgeGradle 1.2

Update README.txt
Fix network close events never getting called. Closes #381 #382

Merge pull request #998 from Eurymachus/master

This correctly uses the world height less one block for placement of a door
This correctly uses the world height less one block for placement of a
Door.

Required for placing doors inside a littleblocks area.
Fix long standing deobf issue that caused announce-player-achievements property to have no effect on dedicated servers.

MinecraftForge/FML@ef07de4f65ea16e1db1467845e316cb4c7d01a1f Fix hard link to DedicatedSerever when opening a LAN connection causing stalls on connecting.

Fix hard link to DedicatedSerever when opening a LAN connection causing stalls on connecting.

-.- Both null combinations.

properly implement equals, sod off Player.

Implement simple hash based equals in Fluid ContainerKey.

Make StructureVillagePieces.Village public.

Merge pull request #995 from iChun/master

Fixes stencil bits not existing in Minecraft's framebuffer causing stencil test to not work.
Fixes stencil bits not existing in Minecraft's framebuffer causing stencil test to not work.

Updated FML:
MinecraftForge/FML@e8b60441ccca8cccdc130560b4c8bf400aebc605 Reload game settings after mod loading is finished to capture mod keybindings. Closes #378
MinecraftForge/FML@399770e572c9177babfb65a27280253023db2d9e Kill the modEventTypes list, register anything that extends FMLEvent, Fixes MissingMappingEvent handler, and any futureevents added.
MinecraftForge/FML@b7ad532ab5eb3e00d77ffde946d25675c9f69cf7 Re-enable post initalize texture pack reloading to allow Icons to be registerd through any init phase.

Re-enable post initalize texture pack reloading to allow Icons to be registerd through any init phase.

Merge pull request #983 from DemoXinMC/master

Added Ore Dictionary entries and recipe replacements for Diamond, Emerald, Crops, Redstone, and Glowstone
Merge pull request #984 from ShetiPhian/item-renderer-fix

Small Fix: Held Items & Multiple Render Passes
* Fixed Items.glowstone to Items.glowstone_dust

Small Fix: Held Items & Multiple Render Passes

Passes beyond 1 now have the correct icon.

* Added Ore Dictionary entries and recipe replacements for Diamond, Emerald, Crops, Redstone, and Glowstone

Kill the modEventTypes list, register anything that extends FMLEvent, Fixes MissingMappingEvent handler, and any future events added.

Fixed hashcode in FluidContainerRegistry, still needs a redesign. Closes #967

Reload game settings after mod loading is finished to capture mod keybindings. Closes #378

Merge pull request #978 from iChun/master

Add cancelable RenderHandEvent.
Add cancelable RenderHandEvent.

Fix a typo in our tile entity fix causing it to be ineffective.

Fix items with color rendering incorrectly.

Update Forge for patch changes

MinecraftForge/FML@064b66af3d6c92b19821b88ec26cbb59577d68b4 Prevent players from logging in until server has finished starting.
MinecraftForge/FML@2aa73afa15908dadb0a033c49deb0ffefad2f265 Fix ExampleMod.java for build #1024+
MinecraftForge/FML@c890206268da3c594d97198f5426b52ff6b8460c Try and handle removal of mods a bit better. Currently no way to allow a world which has missing blocks to load - but i have the code in place to allow it i think.
MinecraftForge/FML@995c204338cd601e118396d4b4ef8feb6e759037 Fix failing to load a world with missing mod blocks and items. There will be a way to force worlds to load when stuff is missing, but for right now, it will fail as this is "world safe".
MinecraftForge/FML@fa5f4c884272f415933329a9e914e0b7d052e31a Some argumentation
MinecraftForge/FML@45409bfa0c136078823a1aef1358396d92a269ee Prevent player dat files getting reset during disconnects.
MinecraftForge/FML@33100d6bab654a4bd59701b1ec2bf91caa3399da Merge pull request #371 from bl4ckscor3/patch-1
MinecraftForge/FML@572d32358ab11e5916d91c4c7b9c04a70cfed2f6 Merge pull request #373 from bloodmc/master
MinecraftForge/FML@d0dd05a15c2eca9eabd308319c2ed85cb632922b FML expands S3F to support payloads up to 2 megs in size. Should be transparent

FML expands S3F to support payloads up to 2 megs in size. Should be transparent

Merge pull request #373 from bloodmc/master

Prevent player data getting reset during disconnects.
Merge pull request #371 from bl4ckscor3/patch-1

Fix ExampleMod.java for build #1024+
Prevent player dat files getting reset during disconnects.

Since FML nulls out the player's playerNetServerHandler during login, we need to
make sure that writePlayerData does not attempt to overwrite the player's dat file
if the player disconnects during the "Logging In" process.

Fixeed a missed -1 in SpawnerAnimals patch. Thanks Blood.

Cull FakePlayers when worlds are unloaded.

Use correct tag types when reading Forced Chunk data. Fixes ticket loading. Closes #964

Fixed FluidContainerRegisry.contansFluid closes #845

Some argumentation

Fix failing to load a world with missing mod blocks and items. There will be a way to force worlds to load
when stuff is missing, but for right now, it will fail as this is "world safe".

Try and handle removal of mods a bit better. Currently no way to allow a world which has missing
blocks to load - but i have the code in place to allow it i think.

Fix ExampleMod.java for build #1024+
Fix AIOOB error with Endermen and blocks >256. Also better support for ID remapping. More to come later.

Prevent players from logging in until server has finished starting.

This improves server security as it guarantees no players will be
allowed to connect until the server has fully initialized.

Add the beginnings of a Constants class, to document/clean some of the magic numbers that are in the MC code base.

Updated FML:
MinecraftForge/FML@03fb1879d72fbd347badc140fed6c2c3191d2990 Fix obf error when right clicking a Empty Map.
MinecraftForge/FML@6bb9b8b9532b276450d03a3419e0da016aecead8 Clean up FMLEventChannel. Closes #367.
MinecraftForge/FML@b7b3450dcd123ab5df6b3693c9c2123bc3846b88 Update MCP mapping snapshot to latest crowdsourced names.
MinecraftForge/FML@8c9e8b52708bd0630303f8b5dc184ab60e2553a1 Fix isRemote, this is integral to so many parts of the code, everyone knows it by this name, People should not change it.

Fix isRemote, this is integral to so many parts of the code, everyone knows it by this name, People should not change it.

Update MCP mapping snapshot to latest crowdsourced names.

Clean up FMLEventChannel. Closes #367.

Fix obf error when right clicking a Empty Map.

Fix up the event handler so it knows it's owned by forge

Add a discriminator for fluididspacket. remove extraneous channel handler.

MinecraftForge/FML@d87822ad8519da1c808e48bcc0a1bf8eb15c0095 Bump gradle wrapper to 1.10
MinecraftForge/FML@359ac3ca2a941d70709168fbbbc0725c861668dd Ensure we check both item and block registries when finding valid IDs. Should fix #365
MinecraftForge/FML@cee0f0b81179d307059843f08401f8700fb3ddb2 Tweak so that writing to the context will automatically send a message back to the originator in handshakeestablished.

Tweak so that writing to the context will automatically send a message back to
the originator in handshakeestablished.

Ensure we check both item and block registries when finding valid IDs. Should fix #365

Fixed missed parens causing trapdoors to fall off incorrectly.

Fixed issue where enchantment effects caused slight rendeirng issue.

Bump gradle wrapper to 1.10

Uncomment aa few FluidRegistry entries.

Inital Fluid system update, untested. Still in progress.

Attempt a AIOOB error fix in tesselator when there are alot of transparent blocks in the rendering range.

Fix NPE when breaking ice.

MinecraftForge/FML@544320b8d239df4a5ee2b3a7ec331ce2ec0a2c09 Beginning of a saveinspectionhandler.
MinecraftForge/FML@ab199c5811fe2d831592601d4f77691fbf82d1b8 Try harder to find a mod container.
MinecraftForge/FML@8633d780c925ebb719c37ac52e2f3db5f9957895 And make a loud message if there isn't a modcontainer found, substitute Minecraft. In general, this can only happen for coremods not properly registering their code. Closes #363

And make a loud message if there isn't a modcontainer found, substitute Minecraft. In general, this can only happen
for coremods not properly registering their code. Closes #363

Try harder to find a mod container.

Fix imporerly efficient tools breaking blocks to fast.

Adds a WeatherRender in the style of SkyRender, Closes #844

Fixed potential NPE in SlotCrafting, and added ItemStack sensitive version fo hasContainerItem. Closes #854

Move change of metadata to immediatly after change of Block, should prevent any 'invalid' tile entities from breaking created. Reference: #897

New PlayerUseItemEvents, Start, Stop, Tick and Finish. See PlayerUseItemEvent.java for more details. Closes #924

Don't short circuit item icons for multiple render passes while being used. Closes #929

Add the ability for custom records to have finer control over there sound resource location. Closes #933

Exclude cobblestone slab recipe from ore dictification, closes #940

Implement PlayerPickupXpEvent, fired when a player aquires XP from a EntityXPOrb. Closes #942

Missing EntityAITasks.tasks and MapgGenStructreIO register ATs, Closes #949

Make ItemBlock.field_150939_a public, closes #945

Fix Furnace stopping on 63rd Item, Closes #947

Beginning of a saveinspectionhandler.

MinecraftForge/FML@b6d95d704b65dd8232ec8ddd333de378db8fe161 Name the log files properly. fml-junk is an early startup annoyance I can't kill because log4j2.
MinecraftForge/FML@8692ca17d13eda036b5ef996ec8e8706e7707d80 Log4j2 logging context for things. This should help add context when things go wrong in mods.
MinecraftForge/FML@a7ca131a337b5f0d4fc6f438626ac2d5b7771b3c And don't spam NONE everywhere
MinecraftForge/FML@741e172ffe163f0dd3018e1474af46ef0696396a Log4j2 doesn't need debug level logging for itself anymore

Log4j2 doesn't need debug level logging for itself anymore

And don't spam NONE everywhere

Log4j2 logging context for things. This should help add context when things go wrong in mods.

Name the log files properly. fml-junk is an early startup annoyance I can't kill because log4j2.

MinecraftForge/FML@458b0620b43116c943549a0f060c7e8830c2d77a Log the bad packet in a prettier way. Also, don't show the authlib debug data in the log file.

Log the bad packet in a prettier way. Also, don't show the authlib debug data in the log file.

Add BookCloning to the recipe sorter.

MinecraftForge/FML@9a8d16b66e67691a4c83a9e1e236304e9f6d5139 Fix log4j2 config. Fix server gui to *show* logging. Fix log spamminess in the console. Fix bug in servergui that can cause deadlock.
MinecraftForge/FML@a355eecb2c14123964c6ae2402a0933d57ae9736 Add in error logging for outbound messages. Fix bug with indexedcodec NPE
MinecraftForge/FML@1c793abe0eef6846f681c9673019b0ebc49caaaf Fix derp with networkcheck
MinecraftForge/FML@675b5a07788ada17bc26a9c4f26598e77d2098cf And turn down some more logging, now we have useful logging back again..

And turn down some more logging, now we have useful logging back again..

Fix derp with networkcheck

Add in error logging for outbound messages. Fix bug with indexedcodec NPE

Fix log4j2 config. Fix server gui to *show* logging. Fix log spamminess in the console. Fix bug in servergui that can cause deadlock.

MinecraftForge/FML@4aa2416ce5dcd8e77761703c018d1e7d08464025 Propagate Optional method removal to trait implementation classes
MinecraftForge/FML@fc025a7b73d9b3f46ecf2257227657592f5506b5 Logging Changes
MinecraftForge/FML@f0132a6f3b47e746a1a7df3ef84f4be989f140dd changed fml log level to all
MinecraftForge/FML@f23eba4352c38fd21e04e81f3db72c6cafe65a36 put max number of FML log files to 3
MinecraftForge/FML@449ac98b77025eba38a75d0242113fffe26a8cf9 SSP Worlds updating from 1.6 will now pop a warning message before loading, and will capture a timestamped zip file in the minecraft dir before starting to load. Allows for people to test updates.
MinecraftForge/FML@3557fe31c92ea8d76c90052f9b8b6da963300c4f Throw an exception when discriminator is not found
MinecraftForge/FML@25240457283ba40c32022c97fc982c2ff4408e46 Make NetworkEventFiringHandler sharable
MinecraftForge/FML@dfc0899ec66f87502b5727939ac2f0ad0fabf89f Merge pull request #357 from jk-5/sharable
MinecraftForge/FML@79d42fca8d6b9d73204890ef0edb9d73cf075d87 Merge pull request #355 from jk-5/errorhandling
MinecraftForge/FML@7907e16e96de21e8ba536906ae71adcf02bfa535 Add a type adapter for artifact version. Should fix #354
MinecraftForge/FML@7ac5bddbc3c227e0ed9385904a2bd9621078e2de Allow indexed messages to validate themselves. Also, catch exceptions from an embedded channel, and cause them to close the connection. It's ugly, but it means that the client doesn't crash if it connects to a screwy bungycord that's trying a 1.6 handshake for some reason.
MinecraftForge/FML@5adacc3b336bacbe30aa06175ef80c3aac08a62a Check the mod, not it's container, in the check handler. Closes #358
MinecraftForge/FML@3d26f28bcf3e79e1f5fe20fcf056c604487dc35b Allow connection when server is apparently offline. Might allow :NOFML circumvention though. Hmmm. Closes #359
MinecraftForge/FML@a62374d4aceac1c4ab39b3c0bae624ccbca65b6b findBlock should now return null, not the default block, if the thing being looked for is not found. Closes #352
MinecraftForge/FML@6a695c4348d062af50b8cf5208530fc5036eba17 Try and stop the epic channel closed spam at close time. Closes #353
MinecraftForge/FML@35a38d7840a5d0cd842005822c4ec6a9d3b65b6a Make sidedproxy support non-public fields. Closes #344
MinecraftForge/FML@9d2e089df692655df04315a3822f43140015f3af Merge branch 'logging' of github.com:AbrarSyed/FML into abrar-borked
MinecraftForge/FML@79b04898d43d354714e09ce7e66efb5357ebcf61 And restore suppressions. ABRAR, DON'T TIDY CODE!!!!
MinecraftForge/FML@3dfb54e066ab91e44405706233f2dfffee9add72 Merge branch 'trait-optional' of github.com:RainWarrior/FML
MinecraftForge/FML@32bb7315cc6beff84f186a33e73219cc5280821a Add in example assets dir. Closes #308
MinecraftForge/FML@16d33d298953b41dbbe3e3b504e800f4f46a3e1b Clean up and document outbound handler a bit better. Add in dispatcher target. Closes #361
MinecraftForge/FML@5719b9ec533b3e43213dbafcb448221884efd9e8 Fix reply handling. Make the proxy message available for subclasses of indexedcodec. Fire user events into the network event firing.

Fix reply handling. Make the proxy message available for subclasses of indexedcodec. Fire user events into the network
event firing.

Clean up and document outbound handler a bit better. Add in dispatcher target. Closes #361

Add in example assets dir. Closes #308

Merge branch 'trait-optional' of github.com:RainWarrior/FML

And restore suppressions. ABRAR, DON'T TIDY CODE!!!!

Merge branch 'logging' of github.com:AbrarSyed/FML into abrar-borked

Make sidedproxy support non-public fields. Closes #344

Try and stop the epic channel closed spam at close time. Closes #353

findBlock should now return null, not the default block, if the thing being looked for is not found. Closes #352

Allow connection when server is apparently offline. Might allow :NOFML circumvention though. Hmmm. Closes #359

Check the mod, not it's container, in the check handler. Closes #358

Allow indexed messages to validate themselves. Also, catch exceptions from
an embedded channel, and cause them to close the connection. It's ugly, but
it means that the client doesn't crash if it connects to a screwy bungycord that's trying a 1.6 handshake for some reason.

Add a type adapter for artifact version. Should fix #354

Merge pull request #355 from jk-5/errorhandling

Throw an exception when discriminator is not found
Merge pull request #357 from jk-5/sharable

Make NetworkEventFiringHandler sharable
Make NetworkEventFiringHandler sharable

Fixes #356

Throw an exception when discriminator is not found

SSP Worlds updating from 1.6 will now pop a warning message before loading, and will capture a timestamped
zip file in the minecraft dir before starting to load. Allows for people to test updates.

put max number of FML log files to 3
changed fml log level to all
Add support in Techne models for the TextureSize tag. Closes #856

Fixed RenderWorldLastEvent never being called, was missed in 1.7 update. Closes #932

Updated FML: MinecraftForge/FML@444a7d7fa1cf7fad7dda67f581fa0e3be36069b7 Move placement of single player world load hook to fix NPEs.

Move placement of single player world load hook to fix NPEs.

Fix flexible rails, Closes #944

Updated FML:
MinecraftForge/FML@7c5d62704ac1d3e586f3bfe26265a534e5362c73 Make UniqueIdentifier final and add a hashCode. Closes #348
MinecraftForge/FML@ff7b5845e7f6b300d413b917f57adc472a4ebcff Clean up some warnings about @Override
MinecraftForge/FML@275ccac6f14bc66b88c76b1040aa7167f995967c Fix NPE at startup
MinecraftForge/FML@2a5a8d0cd062d3feac9c4de234e3dab1ff4462e5 Fix memory leak?!

Fix warnings in Forge codebase.

Fix memory leak?!

Fix NPE at startup

Clean up some warnings about @Override

Make UniqueIdentifier final and add a hashCode. Closes #348

Clean up language registry. It can be used to access all translations of mods on client or server.
Auto loads from assets files.

Add exception logging to forge channel handlers as well

MinecraftForge/FML@53557dcd0582e09f7f35eb3bc2fd130fba3be4a0 Put logging exception handlers on all channel inbounds. Fix problem with failure to login. Closes #350

Put logging exception handlers on all channel inbounds. Fix problem with failure to login. Closes #350

MinecraftForge/FML@9c96ca4402e4c231285f170281dd543bfffa191a Fire a custom packet channel registration/deregistration event, for any mods that care about that kind of thing

Fire a custom packet channel registration/deregistration event, for any mods that care about that
kind of thing

MinecraftForge/FML@e14efe786f6255a18e148c4137f560f5e2d2a38f Some fixes and tweaks
MinecraftForge/FML@c013870b1df5e63bd84d92545ebdd434db74b5d1 Merge branch 'simplenet'
MinecraftForge/FML@30882b0c1d2743afebbebc288d73f25696e0815c Clean up some warnings. Add in simple network impl
MinecraftForge/FML@9cab2ab36e7981c847e3e9ae8c3fbbb36531ba6d Add in some tests and examples for the "simple" network stuff
MinecraftForge/FML@a429e106dd00b34302ec5893e0a8fc97c8fc8019 Fix bug with SSP, and hook so we can do confirmation of world loading, as well as other things

Fix bug with SSP, and hook so we can do confirmation of world loading, as well as other things

Add in some tests and examples for the "simple" network stuff

Clean up some warnings. Add in simple network impl

MinecraftForge/FML@b362e8a2733eb3082975edfdf83c996f048b65d3 At the request of AbrarSyed.
MinecraftForge/FML@e344303ec7a5ed27c4378ff072a036df7a350902 Merge pull request #346 from Jezzadabomb338/master
MinecraftForge/FML@a4686b1261a9bad523b4efa8a36a4433a58897cc Added basic Mojang account authentication support for development time login.
MinecraftForge/FML@dd17979a2f6f02ac4a9dda09b52c96365cc5fec9 Fix bukkit connectivity issue.

Merge branch 'simplenet'

Fix bukkit connectivity issue.

Some fixes and tweaks

Updated FML:
MinecraftForge/FML@1db3daa0e82e67fc27ca3d535a09c806c1a54d67 added override toString method for getting full name.
MinecraftForge/FML@acf74a34032224a73c4c03280cafa0042c35cf5a changed the readme to reflect new setup task.
MinecraftForge/FML@96c19b35807fa078cb18b4ae50567d0360bcdb03 undid readme change
MinecraftForge/FML@a89939e57e9ff061df3d53cf1cb075b31de5de1b Merge pull request #336 from jadar/master
MinecraftForge/FML@717a8d694532bd9438eed8d9cf4b57318b2b4cfd Fix csv string vs list of strings. Thanks immibis. Closes #334
MinecraftForge/FML@584c0f368bca1d5b0223b5b3611b366b9a00f7d7 Fix potential ordering issue, clean up some imports
MinecraftForge/FML@28293b29ea65c30fe80c49e85e2ae15a4db68933 Add in a simple(ish) event driven network handling system. Register using newEventDrivenChannel and you'll get a simple network handler that will fire events at the subscriber(s) of your choice, whenever a packet is received. You'll also get some convenience methods for sending to things.
MinecraftForge/FML@80b00dc7966d96111e2ce8643db8e0f544c2bc89 Fix openGui. Closes #342
MinecraftForge/FML@fc69bcf2807dc2b85eb52681ba9531cb3e2f1945 Fix up privacy derp in TickEvent. Closes #343
MinecraftForge/FML@10d056a494aac22137b644cff341a5958e8168fc Fix possible NPE derp
MinecraftForge/FML@5da6dcc7e3607e5f107f6a7d39a4b4e1eb7fb306 Divert connection through FML, so we can deny connections to servers that don't want us

Added basic Mojang account authentication support for development time login.

Merge pull request #346 from Jezzadabomb338/master

At the request of AbrarSyed.
At the request of AbrarSyed.

Divert connection through FML, so we can deny connections to servers that don't want us

Fix possible NPE derp

Fix up privacy derp in TickEvent. Closes #343

Fix openGui. Closes #342

Add in a simple(ish) event driven network handling system. Register using newEventDrivenChannel
and you'll get a simple network handler that will fire events at the subscriber(s) of your
choice, whenever a packet is received. You'll also get some convenience methods for sending
to things.

Fix potential ordering issue, clean up some imports

Merge pull request #926 from iChun/master

Fix erroneous position when getting player position with changed eye height.
Squash commits so Lex would stop whining. Fix erroneous position when getting player position with changed eye height.

Logging Changes

Propagate Optional method removal to trait implementation classes

Fix csv string vs list of strings. Thanks immibis. Closes #334

Merge pull request #336 from jadar/master

added override toString method for getting full name.
Updated FML:
MinecraftForge/FML@d5bfd69e35b21f701390a8c4c4c58d7ec1fff1fc Fix problem with connecting to vanilla. SHOW what's modded and what's vanilla in the list. Hooks that make the blocking work to come
MinecraftForge/FML@dd098854b0b65b8509b8788422e02d989a991b87 Fix the keybinding array to the right one
MinecraftForge/FML@43068eb9862f280611f26f4107ff5ac2b42b08e4 Fix TargetPoint to be static

Fix TargetPoint to be static

Fix the keybinding array to the right one

Fix problem with connecting to vanilla.
SHOW what's modded and what's vanilla in the list. Hooks that make the blocking work to come

Attempt to prevent a NPE when MC renders a lot of things at once.

undid readme change

changed the readme to reflect new setup task.

added override toString method for getting full name.

Merge pull request #928 from Minalien/master

Fixed issue with forward-slashes in texture names when registering icons, fixed custom item renderer retrieval.
Fixed MinecraftForgeClient for custom Item Renderer implementations. Removed check for forward-slashes (/) in texture asset locations (but left check for backslash in place).

MinecraftForge/FML@0d810c01fab99ac491c2277097a4198518fe6c75 Mark jopt needed on the server, herp derp, blame Abrar!

Mark jopt needed on the server, herp derp, blame Abrar!

Fix DoublePlant placement, closes #921

Deprecate BlockFire.func_149842_a, and throw exception if someone tries to set the burn properties for air. Should prevent 'The Air is on fire!' reports.

Merge pull request #919 from VeryBigBro/patch-2

Create ru_RU.lang
Create ru_RU.lang
Updated FML:
MinecraftForge/FML@5317672631f30e1c9655f0bb28dd8b158deea2fb Add a utility method for finding the channel handler name based on type. Should fix naming weirdnesses.
MinecraftForge/FML@9de9a1553086ebeeb5d5fc0f6d96da8680e52df0 Fix stupid hardcoding derp

Fix stupid hardcoding derp

Add a utility method for finding the channel handler name based on type. Should fix naming weirdnesses.

Fixed pipeline naming issue in the ForgeNetworkHandler.

Merge pull request #882 from Vexatos/patch-2

Create de_DE.lang
Fixed the run config for dev time server, Cloases #913

Fix panes/iron bars not connecting correctly. Closes #904

Models now load from resource packs
Models must now be loaded from resource packs using the standard resource pack reference. For example, to load a model named "assets/mymod/models/mymodel.obj", you would call AdvancedModelLoader.loadModel("mymod:models/mymodel.obj");
Closes #670

Fixing an infinite recursion case, Closes #916

Merge pull request #915 from Adubbz/master

Made canBeReplacedByLeaves default to whether a block isn't opaque rathe...
Made canBeReplacedByLeaves default to whether a block isn't opaque rather than if it is, also uninverted the checks for canBeReplacedByLeaves in WorldGenBigMushroom, WorldGenSwamp, WorldGenTaiga1 and WorldGenTaiga2

Fix inversion

Updated FML:
MinecraftForge/FML@6f1da6550e10164bd6c678829f111bb5de9383b6 Fix up mcpname derp in GuiScrollingList.

Fix up mcpname derp in GuiScrollingList.

Updated FML:
MinecraftForge/FML@21b13d63512ce399c82cbb6b9042eefa6dcdaacd Lots of network cleanup. Gui packets now work too!
MinecraftForge/FML@b3f98d1ee0416aa452f8611d458968afdf50775a Fix derpiness with Mods button when Realms is available
MinecraftForge/FML@cdd9d92a4f8cd199e2d8a34bb398ef32e5f1e275 Starting work on the actual GUI. Still work to do. Needs an API.
MinecraftForge/FML@ab5eb3ccfff7f9ccfd8720b23fcef3131e54d57d Fix button size for GuiModList
MinecraftForge/FML@3113138bd1377d71afe3b8290e18511bfb6e5e97 Tweak button positions.
MinecraftForge/FML@c5e29b574a315d48668ebc9189bcc497a0eae13e Avoiding redundant calls to LogManager
MinecraftForge/FML@fbc1f8f6f9effa4a538880f9fec0ce5010226d09 Config GUIs in the modlist now work.
MinecraftForge/FML@fa4f3015a0d7147cbde3edec7664e78e5bcacbb9 Added transparent background for GuiIngameModOptions as per cpw's request. May not compile due to manual de-mcp-fication.
MinecraftForge/FML@7bf119e1e54cadff690ec31a4bab93c0d1d0aad1 Fix up readmes and credits. We no longer support modloader.
MinecraftForge/FML@779cd05aa1ced720a63cc508b82e68cc6fc8daa9 Tweaks
MinecraftForge/FML@b51fb913551a5116cc3b9bb7583b1666f280c650 Merge branch 'patch-1' of github.com:airbreather/FML

Merge branch 'patch-1' of github.com:airbreather/FML

Tweaks

Fix up readmes and credits. We no longer support modloader.

Added transparent background for GuiIngameModOptions as per cpw's request. May not compile due to manual de-mcp-fication.

Config GUIs in the modlist now work.

Avoiding redundant calls to LogManager
Update de_DE.lang
Merge pull request #912 from Adubbz/master

Fixed sky colour transitions on a render distance of 16, fixed the World...
Fixed sky colour transitions on a render distance of 16, fixed the WorldGen of various things

Tweak button positions.

Fix button size for GuiModList
Starting work on the actual GUI. Still work to do. Needs an API.

Fix derpiness with Mods button when Realms is available

Lots of network cleanup. Gui packets now work too!

Merge pull request #908 from jk-5/patch-1

Add constructors to DimensionRegisterMessage
Fix inverted login in BlockPistonBase causing blocks to break incorrectly. Closes #910 #909

Update patches for AT changes.

Update for the FMLEmbeddedChannel change.

Updated FML:
MinecraftForge/FML@22ba6fda5ee2dbf29dc03ba93ff9c7707edeaeee Expose the nethandler in a few places, and pull out FMLEmbeddedChannel, exposing a utility method on it. More to come.

Expose the nethandler in a few places, and pull out FMLEmbeddedChannel, exposing a utility method on it.
More to come.

Added default constructor for reflection
Added a constructor and made the fields package-private
Update ForgeMessage.java
Fix build.gradle for tweakClass property

Updated FML:
MinecraftForge/FML@f36152398d1d287e7a55a31c77a2614cfb63e1b6 Add in the tweakclass, fix the json for lzma @ the server.

Add in the tweakclass, fix the json for lzma @ the server.

Updated FML:
MinecraftForge/FML@5d069629cf47cd04f2002b3b9a2c32b0ea73c26e Allow itemstacks for furnace recipe inputs. Allow passing extra arguments through registerblock into the itemblock constructor.

Allow itemstacks for furnace recipe inputs. Allow passing extra arguments through registerblock into the itemblock constructor.

Updated FML:
MinecraftForge/FML@061288909de0f0452adf51a5a9935fd09992c801 Fire simple network connect/disconnect gameevents.

Fire simple network connect/disconnect gameevents.

Merge branch 'master' of github.com:Adubbz/MinecraftForge

Fix the network handler for forge

Updated FML:
MinecraftForge/FML@34819c9303870f560232464a2d16eb46d152515c Make gradlew executable on linux
MinecraftForge/FML@53a1f9841421b41d543d7d1d51319b44c86a527e Attempt to load old pre-1.7 worlds. ENSURE YOU HAVE A BACKUP!
MinecraftForge/FML@6a5f9e135f88b662e4e01e8882f861448910ca90 Fix example mod code for 1.7

Fix example mod code for 1.7

Made BlockCrops.getDrops call its super method

Allow tools to override their material harvest levels.

Tidier implementation of previous commit. Should fix for subclasses of individual tools too

Add in harvesting abilities of the items, should fix effectiveness

Attempt to load old pre-1.7 worlds. ENSURE YOU HAVE A BACKUP!

Make gradlew executable on linux

Updated FML:
MinecraftForge/FML@f8d6213829d570501166d64d7c8bb4977567131f Update render registry
MinecraftForge/FML@ec316f113fefef12f6defed9eb68de368d7f4420 AT for renderblocks

AT for renderblocks

Update render registry

Updated FML:
MinecraftForge/FML@268bbabee6ae3fa1d596bd18e172298e26dc9ce4 Fix handling world reloads when new stuffs are added

Fix handling world reloads when new stuffs are added

Merge pull request #893 from iChun/master

Add render offset to event.
Add render offset to event.

Fix dig speed on redstone ore and obsidian.

Add a version check mechanic to startup, it is done in a seperate thread and has a config option to compleetly disable it. This allows us to notify users of new recomended builds. Hopefully stemming the flow of outdated help request. Also adds a warning to the main screen if you are running a 'Beta' Forge. Which means a Forge for a new version of Minecraft that we have not promoted a recomended build for yet.

Resize pending tile updates when it goes over the curent length. Fixed AIOOB error.

Forgot to regen patches...

Added constructor to WorldType, and delegated the BiomeLayer management to it. Also updated the access transformer for Item/Block classes.

MinecraftForge/FML@c180d9b15735ce89a38c497acd65fa3fab595f77 Add 1.7.2 base json, Gradle will automatically download updated versions of this. Keeping it in the repo allows us to se
e what base json we have built our jsons off of. And if it changes update accordingly.

Updated FML:
MinecraftForge/FML@156a9ae03a3c80bd1499a8e692c44a322ad9df62 Fix build script
MinecraftForge/FML@7d3b1250e8368886bed0e0da350a94abaa4b6247 Fix handshaking properly. Also, fix ID syncup. It now will completely freeze the idmap after preinit. This frozen map is used to inject "new" stuff into existing serverside worlds. Interesting sideeffect: remote servers lacking things will change the client, to also LACK ids for those things. watch for -1 ids in your remap events. Note: idmaps should be considered temporary per server instance. SERVERSTOPPED will restore "startup" state, as will client logout.

Add 1.7.2 base json, Gradle will automatically download updated versions of this. Keeping it in the repo allows us to see what base json we have built our jsons off of. And if it changes update accordingly.

Fix handshaking properly. Also, fix ID syncup. It now will completely freeze the idmap after preinit.
This frozen map is used to inject "new" stuff into existing serverside worlds. Interesting sideeffect: remote
servers lacking things will change the client, to also LACK ids for those things. watch for -1 ids in your remap
events. Note: idmaps should be considered temporary per server instance. SERVERSTOPPED will restore "startup" state,
as will client logout.

Fix items rendering on the GUI with invalid state due to glint rendering changing it. Thanks iChun.

Fixed accedential inverted logic that caused Potions to render incorrectly. Thanks iChun.

Move Grass {Flower} registry to BiomeGenBase as 1.7 made flowers Biome specifc, this means modders who wish to add global base flowers need to add them to all the biomes indavidually.

Temporary fix for items rendering with effects on one layer. Restores default vanilla rendering, which is considered a bug in modded community.

Fix debug HUD rendering semi-transparently.

Fix build script

Bump version to 10.12.0 to mark 1.7.

Updated FML:
MinecraftForge/FML@58132ccda3a575f10fc209c421fd5d80e01164cc Add new required --accessToken to launch specs.

Add new required --accessToken to launch specs.

Fix:
  Block placement/interaction
  Tesselator crash due to wrong mapping
  Missing isreplaceable check in world.canPlaceAt
  Small foratting/logging cleanup
  Temporarly commented out efficancy changes till I implement it.

Fix MethodNotFound crash when shutting down internal server.

Forge uses the FORGE channel for packets.

Get object based on identity not name.

Merge pull request #890 from bloodmc/master

Refactored BiomeManager stronghold add/remove methods to support new MapGenStronghold dynamic biome changes.
Refactored BiomeManager stronghold add/remove methods to support new

MapGenStronghold dynamic biome changes.
Changed InitNoiseGensEvent to pass a NoiseGenerator array instead of
NoiseGeneratorOctaves due to new NoiseGeneratorPerlin in
ChunkProviderGenerate.
Fixed worldgen crash caused by wrong metadata in Chunk patch.

Updated FML:
MinecraftForge/FML@a17489172cd54ca955548b15fa0669c9f95d7f45 Code to disable mods at runtime, or other times.
MinecraftForge/FML@85516d9588ebfadbba25f21b2f973e4e81abbaa6 ICraftingHandler, IPickupHandler are now both events.
MinecraftForge/FML@e4b63a1801b453797f5e820eb3f5bd42e6d43948 IWorldGenerator now has an ordering at registration time. This means the order of worldgen should be much more stable.
MinecraftForge/FML@ef3856f9a34e82a05cb2b7715e3611f8fb1a9a6b Update patches for Gradle's rename rewrite: MinecraftForge/ForgeGradle@19e7acf2a27a6c6ae60f6e8ab38337defddc16d3
MinecraftForge/FML@31ea100b29dfdb4fc907e212c3d49a5240ca72a9 Working on id missing handling
MinecraftForge/FML@3e76dfba34aaba4397fc3fb2bd28e0d1f0abe3e4 More tweaking on id stuffs at worldload
MinecraftForge/FML@f860c8ad3bc7537f885b27c7f045b5b1140c05f4 bump to legacy launcher 1.9 with logging unification stuffs.

Inital patch update for 1.7.2, Doesn't compile, not done yet.

bump to legacy launcher 1.9 with logging unification stuffs.

More tweaking on id stuffs at worldload

Working on id missing handling

Update patches for Gradle's rename rewrite: MinecraftForge/ForgeGradle@19e7acf2a27a6c6ae60f6e8ab38337defddc16d3

IWorldGenerator now has an ordering at registration time. This means the order of worldgen should be much more stable.

ICraftingHandler, IPickupHandler are now both events.

Code to disable mods at runtime, or other times.

Updated FML:
MinecraftForge/FML@32561265fc935cd6639d5b2e086e879f375676fa Ticks, Player events, keybindings, all migrated to the new event driven system.

Ticks, Player events, keybindings, all migrated to the new event driven system.

Moved the core event handler parts to FML. Implemented the Forge network handler based on the new
netty strategy.

Updated FML:
MinecraftForge/FML@3b2994a3def35a2d3058960b71dc59dc48b802f9 Some patching touchups
MinecraftForge/FML@557357fe179529e0b44aab2f3fcef0c5adf981d5 Update for log4j2
MinecraftForge/FML@a2b324beb2ef6ec73000678c9305fd70d4ec1643 Copy eventhandler from Forge into FML. It is going to replace a lot of the runtime event systems.
MinecraftForge/FML@4071ff38afe15fddf5db0be882f5627f503a37c6 Patch some GUIs. We're gonna add some basic mod gui config support.
MinecraftForge/FML@0b419ac79c307579f162d47e0388a9d75bcd0a6e Fire a user event down the channels when a handshake has occured.

Fire a user event down the channels when a handshake has occured.

Patch some GUIs. We're gonna add some basic mod gui config support.

Copy eventhandler from Forge into FML. It is going to replace a lot of the runtime event systems.

Update for log4j2

Killed a few hundred compile errors.

Comment out fluids until King gets his hands on it

Updated FML:
MinecraftForge/FML@1d71c017f45aa7ed9d7d7c5ed5250a8d22477980 ID syncing.
MinecraftForge/FML@fd36f50d8210342f65cb0272bac56a3bcc42dd18 Cleanups
MinecraftForge/FML@89e4e483c204c11b6fdfed34893fc223a7d6a899 Add in a remapping event for mods to consume.
MinecraftForge/FML@cd417c6786256fa23f181ff0b76696bc6dfb0291 Fixed remote and local connections work with mods now.
MinecraftForge/FML@ef492407ef812bb6bbc7f0bd8efbd16d07efcafb Entity spawning works.
MinecraftForge/FML@d0d31d9575403eb2ec058898b86ffd99a9220f75 SpawnAdjustment packet. Clean up stuffs. No more compile errors.
MinecraftForge/FML@3e278acb71e4e3d0406e80f0fad5071c9215ed33 Fix stupid possible compiler error.
MinecraftForge/FML@009d4dee2328cc8d97b74177a2c5a3c359e6564a Fix the exc file. Fix the deobfremapper for handling inner classes.
MinecraftForge/FML@49cb893d12bd4f82b5d1b50d1e6517a256525d32 Fix exc this time *sigh*
MinecraftForge/FML@31efcfc3b2085f5d4e070ddab34a0be1481b4c6f Clean up patches for latest exc.
MinecraftForge/FML@7a4ceebf5efe5b3650080cf912e371d92fc70a55 Kill old patches and add rejects to ignore file.
MinecraftForge/FML@7ea571f593464ad4226ba845da27ff66161621b1 Fix AT, Fix exc. Almost works now!
MinecraftForge/FML@b852e302851cfaf77e1db6f86408e8d049703656 First functional release under reobfuscation.
MinecraftForge/FML@df870c1a3341d8e2e88d7fc3e2f3d9ed2507989f Update shiped ForgeGradle for 1.7
MinecraftForge/FML@55aa337f952bc72c5a001a6ed661978b11822c63 Rename synthetic bridge methods, these methods are not decompiled, but need to reobf correctly cross the recompile boundary.
MinecraftForge/FML@0098c57f94808751062ee45f2ee267324bb42089 Merge pull request #316 from AbrarSyed/patch-4

Some patching touchups

Merge pull request #316 from AbrarSyed/patch-4

Update shiped ForgeGradle for 1.7
Rename synthetic bridge methods, these methods are not decompiled, but need to reobf correctly cross the recompile boundary.

Update shiped ForgeGradle for 1.7
First functional release under reobfuscation.

Fix AT, Fix exc. Almost works now!

Kill old patches and add rejects to ignore file.

Clean up patches for latest exc.

Fix exc this time *sigh*

Fix the exc file. Fix the deobfremapper for handling inner classes.

Fix stupid possible compiler error.

SpawnAdjustment packet. Clean up stuffs. No more compile errors.

Entity spawning works.

Fixed remote and local connections work with mods now.

Create de_DE.lang
Add in a remapping event for mods to consume.

Cleanups

ID syncing.

Updated FML:
MinecraftForge/FML@a30f17362764f3e4e594386e193f9e4368e6836e Add sonatype snapshots repo for SpecialSource snapshots.
MinecraftForge/FML@b2550b8a693315ccc205f5315eac67c5283d7af9 Add mappings for Items/Blocks fields.
MinecraftForge/FML@57f7f1d7abd304d3e9f42567f1d66c10122e4ec6 Update for fixed Enum cleaning and names.
MinecraftForge/FML@99c681ad8736e4976053718c3d453b2fb30eefe0 Did it manually, forgot it needed the end comma

Some work on 1.7, waiting for Abrar to fix a few things.

Did it manually, forgot it needed the end comma

Update for fixed Enum cleaning and names.

Add mappings for Items/Blocks fields.

Add sonatype snapshots repo for SpecialSource snapshots.

Bump data for 1.7 start.

Kill liquids finally.

MinecraftForge/FML@3714426e19f8f0edaaeda8c787993f8f3615a44d fix derp in example builscript
MinecraftForge/FML@01fb451b6918599de5e732d7ff30c761438ab930 Merge pull request #311 from AbrarSyed/patch-3
MinecraftForge/FML@30d532f4fc6fc65ea7e79707a75ff4d6ea0ea031 Pass 1: Most patches are restored.
MinecraftForge/FML@53127eec308d3929d68d3d9fafabcfef37e95c37 Merge branch 'master' of github.com:MinecraftForge/FML
MinecraftForge/FML@7ab3c3a37ceb8ab945208206aec86739a2138329 Update gitignore
MinecraftForge/FML@38cec7a11fae7cf12bda3a8d16a50bb6136d8886 The basic network handshaking for FML is done. All scenarios seem to work.
MinecraftForge/FML@9f928963f20bc9bbfbe1391fb16c6f5ca5fd4344 A network design I like. It uses the netty embedded channel to allow mods to build channel pipelines on top of custom payload packets.
MinecraftForge/FML@58f7487cfaf4a25a8349021b9cca5ef4ba0b541c Check in patches. Add in some network timeout tweaking values so you can debug the network.
MinecraftForge/FML@e544adba5c7e9286f917342af2669e5888fa0a17 More cleanup. Bidirectional server <-> client network works for mods as well as FML|HS now.
MinecraftForge/FML@f5c38e2359c2e6eca13cd6606465ee36086a7113 OK, network channels appear to be working well for both dedi and integrated servers. The beginnings of the new mod structure too.
MinecraftForge/FML@9c96a0a10a5cbe34786be8fd41f9818b5ac929bc More network stuff, partially done id syncing.
MinecraftForge/FML@2aaaeba15eabdec189daa8662e9ffdf0b5a09dbe ID loading from the server save now works.

ID loading from the server save now works.

More network stuff, partially done id syncing.

OK, network channels appear to be working well for both dedi and integrated servers.
The beginnings of the new mod structure too.

More cleanup. Bidirectional server <-> client network works for mods as well as FML|HS now.

Check in patches. Add in some network timeout tweaking values so you can debug the network.

A network design I like. It uses the netty embedded channel to allow mods to build channel pipelines on top of
custom payload packets.

The basic network handshaking for FML is done. All scenarios seem to work.

Update gitignore

Merge branch 'master' of github.com:MinecraftForge/FML

Conflicts:
	install/build.gradle
	patches/minecraft/net/minecraft/client/multiplayer/NetClientHandler.java.patch
	patches/minecraft/net/minecraft/network/NetServerHandler.java.patch

Pass 1: Most patches are restored.

NOTES: 1. Network is completely broken. 2. GameRegistry is partially broken. 3. ID sync is not in.

Merge pull request #311 from AbrarSyed/patch-3

fix derp in example builscript
fix derp in example builscript
Bump build for gradle fixes:
  Now Builds for java 1.6
  Include version,json in universal
  Fixed classpath issues in eclipse task.

Merge pull request #868 from luacs1998/patch-1

Update readme for ForgeGradle
Updated FML: MinecraftForge/FML@c2b919d339e5f63271cfb67a77235c21c5c3b80e Don't validate signatures in dev env.

Don't validate signatures in dev env.

Update README.txt
Another update for eclipse users
Updated
Update readme for ForgeGradle

Let me know if there's anything else to add or change.
Fix build file pom closures.

Proper configuratuion name for jenkins.

Merge pull request #867 from GUIpsp/master

Fix gradle wrapper.
Make the gradle wrapper executable.

Merge pull request #859 from AbrarSyed/master

Gradlization
update build.gradle

Regenerate all patches, No functional change as added this is a formatting change only.

Updated FML:
MinecraftForge/FML@e9a7660cb8961660186c7c23e61ab35f9c2dfb81 updated samples
MinecraftForge/FML@30894f7afadf5d3f3c3d5a54c3f904413d5f2309 Merge pull request #307 from AbrarSyed/master
MinecraftForge/FML@c4b8a393f90b00ad7ee4992ea4341ffb6d676abb Make the working directory the root of the eclipse workspace.

Update run configs.

Make the working directory the root of the eclipse workspace.

Merge pull request #307 from AbrarSyed/master

updated samples
updated samples

Fix for new FML, and publish to maven local

Update forge

Merge pull request #306 from MinecraftForge/1.6.4

Actually do it correctly. Should be more forge friendly now.
Fix NPE in FakePlayers when they are created in a purely client side environment. To remove in 1.7 as FakePlayers should be used for server side interaction with the world on a player's behalf, not for client rendering.

Fix NPE on specific tile entities when the block break event is canceled. Closes #863

added buildSrc to the gitIgnore

    Updated FML:
    MinecraftForge/FML@23baf3a8ce58cb8306189401a60647957ccbb4c2 Actually fix the nethandler code

Update patches

Actually do it correctly. Should be more forge friendly now.

Merge branch '1.6.4'

Updated FML:
MinecraftForge/FML@da72640c7ef1f44c49f7f592fbdd193622a30b40 Way to go, missing import. *sigh*

Way to go, missing import. *sigh*

Updated FML:
MinecraftForge/FML@b7f34629c3c47b92ee89d72b0dc935b4997cb009 Don't try and open GUIs on the server.

Don't try and open GUIs on the server.

Don't send openGui commands from the fakeplayer. Fixes thaumcraft and probably others.

Updated FML:
MinecraftForge/FML@6af42bc656dfb98972d034363352affc9e777805 Add in null protection for client/server sides of handleChat

Merge branch '1.6.4'

Merge pull request #855 from CovertJaguar/patch-4

Fix Water/Lava Fluid Localization
Fix Water/Lava Fluid Localization
Noop out FakePlayer.addStat.

Add in null protection for client/server sides of handleChat

Kill more references to modloader.

Remove all public all the time from Minecraft. It is unnecessary with ModLoader gone. DEAL WITH IT. File AT public requests, make a coremod, whatever. This needed to die.

Deprecation cleanup. Bye bye more modloader stuffs

First pass : kill modloader, clean up warnings

fixed versioning and stuff

Step 3: The Rebirth

Join the developers list in the pom and fix the client run configs in the workspace.

Merge pull request #302 from AbrarSyed/patch-1

Update 1.6.4-rel.json
Update 1.6.4-rel.json
Change the build to capture an MCP version, also, tweak the sources so mavenLocal can be used for ForgeGradle

Step 2: The Reformation

update FML for gradle changes

Step 1: The Purge

Updated FML:
MinecraftForge/FML@3d25b4e793c59a9131a441d6c7a2d80cac9cd701 Add in the ability to strip interface references for specific interfaces - this is probably mostly useful for scala scenarios where sythetic methods are generated and is not a substitute for using Optional.Method where appropriate. Closes #300

Fix license and naming

added src distribution gradle file

Move to install to not clutter root directory with the .bat and .sh files I know are coming.

Include eclipse template workspace, for packaging in src distro.

Add gradle wrapper

Publish to repo folder for local testing.

Step 3: The Rebirth

Step 2: The Reformation

Step 1: The Purge

Add in the ability to strip interface references for specific interfaces - this is probably mostly useful for
scala scenarios where sythetic methods are generated and is not a substitute for using Optional.Method where appropriate.
Closes #300

Merge pull request #852 from MinecraftForge/breakevent

Merge BreakEvent branch, as nobody has told me that it breaks everything. And in prep from 1.7.
Updated FML:
MinecraftForge/FML@f4532410ec1dbf43ce15dfa78d07e5f7be408b08 Change a couple of warnings, as a prelude to 1.7- preinit is now required for all GameRegistry activity, and every item and block REQUIRES registration.

Change a couple of warnings, as a prelude to 1.7- preinit is now required for all GameRegistry activity, and every item and block REQUIRES registration.

Updated FML:
MinecraftForge/FML@8f87021b0f1ae5b277ad4d1891761b7a7ae1ab71 Fix derp with custom properties. They work now!

Fix derp with custom properties. They work now!

Updated FML:
MinecraftForge/FML@bc57ff9e83803d804e9d5374d76273fcd68611f4 Fix recursive API dependency resolution. Allows nested APIs, such as BuildCraft's

Fix recursive API dependency resolution. Allows nested APIs, such as BuildCraft's

Updated FML:
MinecraftForge/FML@de8ab934d8ae960ebc0dede16218ca1e9e488ebc Fix up duplicate entries

Fix up duplicate entries

Updated FML:
MinecraftForge/FML@81fe1c9682234297443402a54e4b852ef49d0ba8 Add in an API marker for API type packages. This does several things: 1. Packages marked as API will generate a new "modid" (the provides) that can be depended on. 2. Packages marked as API will be searched systemwide, and anything declaring that package (even without the API marker) will get an implicit dependency on the API package. 3. The API package itself will get a soft dependency on the "owner" package.

Add in an API marker for API type packages.
This does several things:
1. Packages marked as API will generate a new "modid" (the provides) that can be depended on.
2. Packages marked as API will be searched systemwide, and anything declaring that package (even without the API marker)
will get an implicit dependency on the API package.
3. The API package itself will get a soft dependency on the "owner" package.

@Optional elements can refer to the API packages instead of a concrete mod as well.

Add new recipe sorter that is called after all mods are initalized. This is disabled by default in 1.6 to not break current worlds as it may change machine's recipy outputs. Will enable by default in 1.7. Players may enable it in the forge config.

Merge pull request #841 from XCompWiz/biomecheck

Adds a Check to prevent Biome Replacement
Adds a Check to prevent Biome Replacement

Splits the BiomeGenBase constructor to create one which takes a flag
that indicates whether to insert the biome object into the biomeList
array.  The standard constructor calls the new one with the default of
true.  This allows biome wrapper-objects to exist.

Format strings properly in MC's internal logger. Fixes resource pack case warnings.

Updated FML:
MinecraftForge/FML@dac7f590eabb326c4467dbc829b4aae1e4be2779 Modify ordering of networkmod registration and mod instantiation. This fixes VersionCheckHandler logging an incorrect failure message due to NPE.
MinecraftForge/FML@f0dc530b2833a1c89673208fe296dba5520671c1 Fix up documentation of VersionCheckHandler - it only ever accepted a String and only works on the NetworkMod annotated class
MinecraftForge/FML@243a21a353e6b7717f64008776928c7132110ddf Wrapping coremods as tweakers. Part 1.
MinecraftForge/FML@58a299aabcfadb4139f126a2d46b5247bede4185 Attempt to inject coremods as tweakers, so both can share a dependency ordering

Attempt to inject coremods as tweakers, so both can share a dependency ordering

Wrapping coremods as tweakers. Part 1.

Fix up documentation of VersionCheckHandler - it only ever accepted a String and only works on the NetworkMod annotated class

Modify ordering of networkmod registration and mod instantiation. This fixes VersionCheckHandler logging an incorrect failure message due
to NPE.

Fix null pointer exception in BiomeDictionary causing the ChunkManager's config to not load/save.

Updated FML: MinecraftForge/FML@bf54d4d66799f2e58944095826d0722ed0120b1f Make each mod's EventBus log a child of it's main logger.

Make each mod's EventBus log a child of it's main logger.

Add wildcard versions of OreDict replacements, Closes #827

Updated FML:
MinecraftForge/FML@da4337efbfa07b35f5883107768f9ba2f1b24b9b Fix up handling the new method signature data for NetworkCheckHandlers

Fix up handling the new method signature data for NetworkCheckHandlers

Merge branch 'master' of github.com:OniBait/MinecraftForge into breakevent

Updated FML:
MinecraftForge/FML@f92962bbbbb90c19788a5dc2eafdc2eeefdd77ce Use null to empty, so missing values work. *sigh*

Use null to empty, so missing values work. *sigh*

And remember to make the event class static *sigh*

Add in an event for zombie summoning. Allows for mods to control summoning behaviour, as well as custom summoned mob.

And set the RIGHT variable *sigh*

And allow for tweaking baby chance as well.

Allow configuration of the zombie additional summoning mechanic. The vanilla mechanic is a little borked at times.

Updated FML:
MinecraftForge/FML@58577775d277a4408bda510534eb36841b08ced4 Very minor style fixes
MinecraftForge/FML@96be82343c25b83dd842ada8d6e8b66eb4e4ee00 Merge pull request #280 from mc10/patch-1
MinecraftForge/FML@2714da10228020a6f2321f6c9a703f0d24fe1370 Primitive capability for tweakers to order. Add a "TweakOrder" integer property to your manifest, or accept the default of zero.

Prevent session from being printed to the console, also make sure the username is not empty. Causes a lot of bugs further down the line.

Primitive capability for tweakers to order. Add a "TweakOrder" integer
property to your manifest, or accept the default of zero.

Cleaned up patches to BlockOre and BlockRedstoneOre
Fixed trailing whitespace (it bugs me too)

Fixed formatting

Merge pull request #280 from mc10/patch-1

Very minor style fixes
Very minor style fixes

Replacing tabs with spaces consistently, making brace styles consistent, etc.
Updated FML:
MinecraftForge/FML@fc3e7647d2aff01146b1f5bd2ab6b57ef8e833e5 Support, and fix up, interface lists for Optional

Support, and fix up, interface lists for Optional

Added some missing air checks to world gen features.

Merge branch 'upstream/master'

Add block break events based on @bloodmc's initial 1.5.2 Pull Request

Fix repeated argument in CleintCommands.

MinecraftForge/FML@a381874bb9c3bdeeb508bb81719b4d210eb29696 Delay sound system backend initalization to speed up startup and prevent race condition on some computers.

Delay sound system backend initalization to speed up startup and prevent race condition on some computers.

Merge pull request #792 from Eurymachus/opencontainer

Added PlayerOpenContainerEvent and added ForgeHooks.canInteractWith
Updated FML:
MinecraftForge/FML@bc64ceabef76b1f4667b22ca8241b72351b44338 Optional shouldn't be constructable itself. It's purely a wrapper thing.
MinecraftForge/FML@55525f6d2eb24f42c26a291b8ce98feb4d4498c9 ModLoader is officially deprecated. It will all cease to be with 1.7.

ModLoader is officially deprecated. It will all cease to be with 1.7.

Optional shouldn't be constructable itself. It's purely a wrapper thing.

Added PlayerOpenContainerEvent and added ForgeHooks.canInteractWith

- Used to override the canInteractWith during player tick
- setResult to ALLOW/DENY as required
- Defaults to Vanilla behaviour in any other instance.

Required for LittleBlocks Mod and to Assist Gullivers Mod

Updated FML:
MinecraftForge/FML@63ba3aa0099f43183315fb4e16f9e8e8007362f8 Add in support for Optional interfaces and methods. Be gone coremods!

Add in support for Optional interfaces and methods. Be gone coremods!

Add block break events based on @bloodmc's initial 1.5.2 Pull Request

Fix missing patch which caused per-world storage to not be saved.

Merge pull request #808 from rhilenova/player_list

Added pre/post to player list rendering in GuiIngameForge.
Merging in master.

Bump version number for todays changes.

Make isItemStackDamageable() pass the stack to getMaxDamage() to use the Forge version of getMaxDamage().
Fixes display issues with mods using getMaxDamage(ItemStack) instead of the vanilla one. Closes #805

Merge pull request #803 from benblank/block-power

Allow blocks to choose how they handle indirect power
Moved PLAYER_LIST event inside display check.

Merge pull request #793 from jrtc27/install-args

Pass arguments to install.sh and install.cmd to install.py
Add cancelable EntityStructByLightningEvent, Closes #789

Stack sensitive version of Item.getItemStackLimit. Closes #771

Merge pull request #772 from Lomeli12/master

Villager Trading GUI will now not open if Player is sneaking. Allowing for bypassing of the GUI.
Added all the vanilla records to the ore dictionary. Closes #731

Direct canApplyAtEnchantingTable through canApply Closes #740

Add pre and post event to rendering Chat, allowing for placement of the chat box. Closes #733

Set densityDir in BlockFluidBase's constructor, closes #737

Fix placement of snow cover over metadata 6. Closes #724

Add the ability to register chat commands that only execute on the client. Works with autocomplete.
Client commands are gray when shown in the autocomplete list (when you press tab)
Closes #640

move `shouldCheckWeakPower` to Forge section

Vanilla hopper should obey the IInventory contract, TileEntityHopper now takes into account IInventory.getInventoryStackLimit() when inserting items Closes #597.

Update workspace to point at launchwrapper 1.8

Merge pull request #796 from HoBoS-TaCo/master

Added ItemTooltipEvent
Added ItemTooltipEvent

This event is fired at the end of ItemStack.getTooltip(EntityPlayer, boolean), which in turn is called from it's respective GUIContainer. It allows an itemstack's tooltip to be changed depending on the player, itemstack or whether the advanced information on item tooltips is being shown, toggled by F3+H.

Updated FML:
MinecraftForge/FML@5265e34a350adbb762264379f0134bfa40d33eaa Fix null killing the server

Fix null killing the server

Added pre/post to player list rendering in GuiIngameForge.

MinecraftForge/FML@35ab9f52b02d84592e4c7607feb6009710b2f7d9 Fix md5s for new checksums.sha1 in scala libraries.

Fix md5s for new checksums.sha1 in scala libraries.

allow blocks to choose how they handle indirect power

Updated FML:
MinecraftForge/FML@e356f4d713b1269825839954fe86f5312ede0fc6 Cross-modsystem compatibility fix with thanks to Mumfrey @ liteloader
MinecraftForge/FML@9b55f1f48f89a5348ac1d58622b71946f310316a Attempt at a shared modlist implementation - should allow visibility between liteloader and fml for "mod list display"

Attempt at a shared modlist implementation - should allow visibility between liteloader and fml for "mod list display"

Cross-modsystem compatibility fix with thanks to Mumfrey @ liteloader

Updated FML:
MinecraftForge/FML@bfc25bc5da1ff0f6fd0faf817b32a8f6d35dedc2 Add to both the classloader and the parent

Add to both the classloader and the parent

Updated FML:
MinecraftForge/FML@9f0f9e7288afc6cce9a425ad770a208af9e28648 Fix deobf tweaker

Fix deobf tweaker

Updated FML:
MinecraftForge/FML@ce6404fd5bb5e8e425af3bcafeaa285575bf39a3 TYPOS!!!

TYPOS!!!

Updated FML:
MinecraftForge/FML@8f18a3de9a02b003762dace891829ef64dfedf49 Separate deobf tweaker so it runs last. Should fix problems with cascaded tweakers expecting an obf environment.

Separate deobf tweaker so it runs last. Should fix problems with cascaded tweakers
expecting an obf environment.

Updated FML:
MinecraftForge/FML@8e26c99de3b44d272d2fdc398e0687db17bce3b7 Add debugging for deobfuscation
MinecraftForge/FML@1d902df5814b815959165e4aa69272003f002d25 Use the negative cache in latest legacylauncher.
MinecraftForge/FML@9815d8c3793182a08fcdbd29376a3f70bff464d0 Update for launchwrapper 1.8

Add wrapper exception to the new Structure ID system to point to the correct Structure.

Update for launchwrapper 1.8

Use the negative cache in latest legacylauncher.

Add debugging for deobfuscation

Add negative caching for field and method maps. Should shortcut some work

Fix handling the case where a class doesn't exist, but still needs deobf

Ask the patch manager for the bytes for the class, not the classLoader

Fix up some more places where we should look for a patched class

Fix problem with empty source classes and runtime deobfuscation

Updated FML:
MinecraftForge/FML@fc8c3bef0380d59c0842a252e4f0bd29127ee78b Update to new installer that uses xz compression and better support for non-standard jvms

Update to new installer that uses xz compression and better support for non-standard jvms

Fixed typo in bounding box based ladder checks that caused potential infinite loops with entities in certian positions. Thanks Overmind for reporting it.

Remove some side onlys on BiomeEvents that don't need them.

Update dev workspace for 1.6.4 ..

Updated FML:
MinecraftForge/FML@a4de22c1addf0a6b95d38e467a96f2af417c86d5 And use the parent that's actually going to be valid. *sigh*

And use the parent that's actually going to be valid. *sigh*

Updated FML:
MinecraftForge/FML@70cffe6982b27df0ea7d8d4d8851a0c0043bb2cb Herpaderp. Make addURL accessible. *sigh*

Herpaderp. Make addURL accessible. *sigh*

Fluid Rarity should have a default

Oops.
Updated FML:
MinecraftForge/FML@4a94c2c71bb4cc9644caeb06011a189989b22f87 Fix NPE when loading second single-player world
MinecraftForge/FML@0e80fcb8f716cfef5b016a73ca32ff0e2f3c3c05 Merge pull request #284 from smcv/uninit
MinecraftForge/FML@39620f1e41464f53482277dc3bcb0b9eed8ca25c Fix injection of tweaker into system

Fix injection of tweaker into system

Merge pull request #284 from smcv/uninit

Fix NPE when loading second single-player world
Fix NPE when loading second single-player world

After leaving a single-player world, getServer() can return null, resulting
in the stack trace below, "Fatal errors were detected during the
transition from SERVER_STOPPING to SERVER_ABOUT_TO_START",
"The ForgeModLoader state engine has become corrupted" and the client
getting stuck forever.

Exception in thread "Server thread" java.lang.NullPointerException
at cpw.mods.fml.client.FMLClientHandler.serverStopped(FMLClientHandler.java:620)
at cpw.mods.fml.common.FMLCommonHandler.handleServerStopped(FMLCommonHandler.java:468)
at net.minecraft.server.MinecraftServer.run(MinecraftServer.java:471)
at net.minecraft.server.ThreadMinecraftServer.run(SourceFile:583)

Updated FML:
MinecraftForge/FML@79c39f8b7c711377f7919abd1ee6a56a339d1062 Fix classpath for launchwrapper 1.7

Fix classpath for launchwrapper 1.7

Merge pull request #794 from alexbegt/master

Correcting SoundManager Transformer
Correcting SoundManager Transformer

Clean patch fuzz

Pass arguments to install.sh and install.cmd to install.py

Updated FML:
MinecraftForge/FML@f6190e8752013c0d6857090ffd42559cf83809ae Update workspaces for 1.6.4

Update workspaces for 1.6.4

Updated FML:
MinecraftForge/FML@25981706ef12654b6c2baccc80fa2298bb5afb4a Update for MC 1.6.4
MinecraftForge/FML@0950b9fc8441a2d3b022ed876f17ee5ac0c47b9c Fix up a deep crash in the early server init hanging the client

Fix up a deep crash in the early server init hanging the client

Update for MC 1.6.4

Move have handler creation up, to prevent NPE.

Remove duplicate access transformer

Updated FML:
MinecraftForge/FML@e7dd728f955aa4713fef45fea770b1f91246d712 Format the log messages through MessageFormat. Thanks CovertJaguar for the pointer.
MinecraftForge/FML@82d896a35e08be5712bdc15bdb93e5d4fc0ddd46 Make final transformers actually work on methods as well.

Make final transformers actually work on methods as well.

Format the log messages through MessageFormat. Thanks CovertJaguar for the pointer. Closes #282

Move the Structure data save files to per-world data folders. Vanilla saves them to the global folder which will potentially cause conflicts if two worlds generate 'Villages'. Which in the modded world is highly likely. Refer back to the long standing vanilla issue where nether 'villages' would override the overworlds villages, it's the same situation.

Make MapGenStructureIO name registration functions public, Any mod that has anything extending StructureStart or StructureComponent must register there classes and create a default (no parameter) constructor.

Unfinalized Item.getIconIndex(ItemStack)

Actually push the submodule update -.-

Bump version for new MC version.

Updated FML:
MinecraftForge/FML@da70cdd35a378d02db47d2aa31fb9aac87beaedc Update tweaker for new Launcher API
MinecraftForge/FML@352117fd78eec745da6c80b8d354947c4dbbbb48 Update for new installer and thank you.
MinecraftForge/FML@40a34af43105ebcb5a63ce2351ca119da5a8158e Merge branch 'master' into newtweak
MinecraftForge/FML@e77d2547ad447025729ae7f3cccaaf343c4c86f9 Update for pre-ninja 1.6.3 update
MinecraftForge/FML@34493b0d99e2cf2bdca080ff226f2dfeedb1cf51 Update for real 1.6.3 update
MinecraftForge/FML@95afc95b248ecc69bc6ffcc5a95912820d8f4066 Update mcp mod info
MinecraftForge/FML@ff75416a325717770a5cf457c859bfb0abcbe281 Update mc_versions data and commands patch and eclipse workspace
MinecraftForge/FML@8f2e67558127f16d92399ea97cbcb0df46d52e19 Update the src distro's eclipse workspace.

Update the src distro's eclipse workspace.

Update mc_versions data and commands patch and eclipse workspace

Update mcp mod info

Update for real 1.6.3 update

Update for pre-ninja 1.6.3 update

Merge branch 'master' into newtweak

Update for new installer and thank you.

Updated FML:
MinecraftForge/FML@81328b6684c5127427153807b5e498c2efefb96b Add in support for using a mirror list and provide checksums for packed download of libs

Add in support for using a mirror list and provide checksums for packed download of libs

Revert "Added a RenderType that allows Map-style rendering w/o inheriting from"

This reverts commit eb4688bf5ea132cd8ddc802a7dad6d423ad50543.

Conflicts:
	patches/minecraft/net/minecraft/client/renderer/ItemRenderer.java.patch

Fix broken PR from vilml. TEST!

Merge pull request #784 from viliml/patch-1

Prevent NPE in fluid lookup for block
Prevent NPE in fluid lookup for block
Merge pull request #782 from CovertJaguar/patch-1

Allow Fluids to have Rarities
Fix the divider

Allow Fluids to have Rarities

Used for tool tips.

Move stuff around a bit- also tie range and enabled to options.

Merge branch 'master' of github.com:Adubbz/MinecraftForge into Adubbz-master

Sky colours now smoothly transition

Made transitions even smoother

Sky colours now smoothly transition

Tweak patch comment

Merge branch 'mapStyle' of github.com:Matchlighter/MinecraftForge into Matchlighter-mapStyle

Merge branch 'master' of github.com:micdoodle8/MinecraftForge into micdoodle8-master

Allows proper raytracing from actual player eye position rather than hardcoded eye heights.

Merge branch 'fovhook' of github.com:MachineMuse/MinecraftForge into MachineMuse-fovhook

Updated FML:
MinecraftForge/FML@b5af446d7111730c7973c9f0d6b76e62b78b9131 Fix sidedness derp in LanguageRegistry.

Fix sidedness derp in LanguageRegistry.

Villager Trading GUI will not open if Player is sneaking.

Check if block is air instead of just ID zero when growing from stem block.

Added a RenderType that allows Map-style rendering w/o inheriting from
ItemMap.

The partial tick should be available for all render player events. Weird it wasn't.

Redo harvest event. This time with simpler logic, that should be less liable to weird "missing" stuff.

Reverting HarvestEvent, for new implementation

Fix bug where guis were not closed properly, resulting in signs not having there text set.

Change trigger calculation so entities get some time to age before refiring the event.

Create helper apply_patches script and add paramter to change patch output folder.

Change from Cancelable to using a Result. This means you can force despawn mobs you
don't want around anymore. Also, deferred check to once every 20 ticks. May tune it
down further or make it a config if this event is a lag issue.

Create es_ES.lang

Added fov hook

Small formatting changes (opening braces on new line)

Add a cancellable despawn event- allows mods to decide to prevent the despawning
of certain otherwise normally despawnable mobs.

Small formatting changes (opening braces on new line)

fixed merge

Added fov hook

Add some javadoc to the HarvestBlock event.

Clean up some formatting.

Use the dropchance from the event.

Merge branch 'sometweaks'

Add in a block reverse lookup for fluids. Closes #749

Add a harvestblock event, to allow mods to intercept and change the drops for blocks. Don't abuse this, or we'll have to take safety measures.
Fires for both silktouch and non-silktouch harvesting, and provides the player. Note, you may need to
change your break overrides to pass on the player for best results.

Defer firing CreateDecorator until it's likely mods have had a chance to register their listener. Should close #759

MachineMuse, remember, there's TWO model formats supported!

Merge branch 'master' of github.com:jk-5/MinecraftForge into sometweaks

Conflicts:
	patches/minecraft/net/minecraft/client/Minecraft.java.patch

Merge branch 'master' of github.com:mhahn1976/MinecraftForge into sometweaks

Merge branch 'french' of github.com:robin4002/MinecraftForge into sometweaks

Add a bit of javadoc

Merge branch 'displayname' of github.com:MachineMuse/MinecraftForge into sometweaks

Conflicts:
	patches/minecraft/net/minecraft/entity/player/EntityPlayer.java.patch

Merge branch 'objTessellation' of github.com:MachineMuse/MinecraftForge into sometweaks

Fix patch for new MCP naming.

Merge branch 'mouseevent2' of github.com:MachineMuse/MinecraftForge into sometweaks

Reduce patch size significantly

Fix player push out of blocks clientside being hardcoded and not based on entity size.
Added player eyeHeight field to allow changeable eye heights of players rather than being hardcoded per player class as well as add a getDefaultEyeHeight function.

fixed logic error

inserted hook into Minecraft.java

Added mouse event

Memoization of display name result

Update version to 9.10.1 for mcp naming changes.

Update forge for MCP naming updates

Updated FML:
MinecraftForge/FML@d0c6e92900590f578b80d9a6c00fa28fd333d3bf Update MCP data

Update MCP data

Merge remote-tracking branch 'forge/master' into objTessellation

Added display name hook

Fix possible NPE in searching code.

Updated FML:
MinecraftForge/FML@2a9c485edc4cf3382154d5b3b9b600386f2ab8ae Remove @SideOnly from 70318 (getDistance) it makes no sense that it's not on the server.

Remove @SideOnly from 70318 (getDistance) it makes no sense that it's not on the server.

Updated FML:
MinecraftForge/FML@a13598b17ea9637c054d867a76298d6c080c5e32 Use java 1.6 compatible method of closing the zip file. Stops stupid compile error.

Use java 1.6 compatible method of closing the zip file. Stops stupid compile error.

Small fix to container registry. emptyContainer is not null, it's "NULL_EMPTYCONTAINER" now and won't match any valid container.

Tweak the release to add in assets to the distributable. *sigh*

create french localization

Add some starting work for a forge tps command. Also update coremod for new FML behaviour

Updated FML:
MinecraftForge/FML@1c9a853868f7df0daa5f67b99401dfab44ae18e6 Allow coremods to properly inject asset readers.
MinecraftForge/FML@40b54013b4c9b01686411cd47a7866eeb650ea2b Allow server side lang file injection, hopefully

Allow server side lang file injection, hopefully

Allow coremods to properly inject asset readers.

capacity was not respected

Updated to properly calculate the amount of free space in the tank
before checking that against the amount of the resource.

Added GuiOpenEvent

You can use this for a clean way to override guis, without needing an
TickHandler to check if the gui you want to override is open and show
your own gui

Proper close check

Update tweaker for new Launcher API

Updated FML:
MinecraftForge/FML@b993cf4a9825865b3a8a0c7b083c23d56dbd1d6f More exception handling for less derpiness.

More exception handling for less derpiness.

In the time honoured tradition of trying to fix vanilla, we today attempt to patch the pathfinding AI so that it doesn't lag when
there's a lot of entities. Basically, if the zombie can't reach the villager, backoff subsequent pathfinding attempts. Hopefully
should really help with lag caused by zombie swarms.

Allow multipass RenderItem rendering for terrain icons too. Should fix sengir's saplings.

Updated FML:
MinecraftForge/FML@913f6f6d36bd179db7c147db0485e99dee693933 Try and use the relaunch log, which should be classloaded..
MinecraftForge/FML@ac065ff5f76b6c512b346366107efde66e9e1c88 Reset the IWorldGenerator seed for each mod, before calling. That should mean worldgen is consistent and not dependent on mod ordering, or mod sideeffects.

Reset the IWorldGenerator seed for each mod, before calling. That should mean worldgen is consistent
and not dependent on mod ordering, or mod sideeffects.

Try and use the relaunch log, which should be classloaded..

Skipp toss event for null entity items. Closes #732

Cache world on all render passes in case some mod disables the first pass.

Fix bug with custom Fluids. You can now drown in them!

Updated FML:
MinecraftForge/FML@9468e41bbf3ea425c50daa710cf3ada11c82b238 Fix up scala refs, for better results

Fix up scala refs, for better results

Merge pull request #730 from Soaryn/patch-1

Adds Temperature to Lava
Updated FML:
MinecraftForge/FML@ffdd056a18eddb8f28b74435d40e69c956b9dd48 Check keys, not values *sigh*

Check keys, not values *sigh*

Updated FML:
MinecraftForge/FML@f157e7a6ecdeac2758fc0eaf547d3e8a763fb15b And more coremod logging

And more coremod logging

Updated FML:
MinecraftForge/FML@4a9d0f9bd522e543b76daaf9c49b6214443c595f Add in some log information

Add in some log information

Updated FML:
MinecraftForge/FML@03989166665956df03aa85472eb13dca2d74a38d And actually instantiate the collection *sigh*

And actually instantiate the collection *sigh*

Updated FML:
MinecraftForge/FML@dec9a3924d361bc016cb7f6b3e95764158cf5ae1 Add in "FMLCorePluginContainsMod" in the manifest. If this value is present, FML will attempt to parse your mod jar file as a normal mod file as well, instantiating mod containers there.

Add in "FMLCorePluginContainsMod" in the manifest. If this value is
present, FML will attempt to parse your mod jar file as a normal mod
file as well, instantiating mod containers there.

Updated FML:
MinecraftForge/FML@24701206808a43b9c7b10d7130c47b5d1e841bb6 Clean up a couple of resources. Also, don't parse jars just because they're in the mods dir

Clean up a couple of resources. Also, don't parse jars just because
they're in the mods dir

Updated FML:
MinecraftForge/FML@9a5e24e338c6172531efb086a4b584c26d4f1435 Fix stupid derp is stupid. Closes #275 and means sp614x can do his thing
MinecraftForge/FML@ba90b616070ce15793eb05e5afaed62a6f07c6e7 Make sure we only add args to the argument list if a tweaker hasn't already. Should fix LiteLoader compatibility issue.

Make sure we only add args to the argument list if a tweaker hasn't already.
Should fix LiteLoader compatibility issue.

Fix stupid derp is stupid. Closes #275 and means sp614x can do his thing

Adds Temperature to Lava

Missing lava temperature. Feel free to change it to any value. 
1300K is the typical max for Magma so wasn't sure what was desired. Regardless, better than the same temp as water at 295K :smile:
Fix NPE in enchangint books.

Fix inverted case, search works now.
Merge pull request #606 from Shukaro/master

Add stone and cobblestone to ore dictionary
Addition: Added isAllowedOnBooks hook to Enchantments Closes #589

Deprecate Block.addCreativeItems, Kill in 1.6.3+ Closes #655

Merge pull request #679 from Chicken-Bones/invchanged

Add onNeighborTileChange callback to block by generalizing func_96440_m ...
Merge pull request #702 from MrMasochism/master

Added new function for control over dismount underwater
Allow creative tabs to have a search box if they want to Closes #592

Merge pull request #717 from tommy1019/patch-3

Fixed Fluid Non-Solid Block Duplication
Add optional feature to check entire bounding box for ladders. Closes #709

Fixed Classic Checking
Fixed Double Item Drop
Fixed Fluid Non-Solid Block Duplication
Only refresh vanilla tile entities when IDs change.

Updated FML:
MinecraftForge/FML@f275a24b43559cfdced243ff77e9848c9d458362 Add in some reverse lookup methods for game registry data
MinecraftForge/FML@cb05c8c4aa60a131de92f0a21c06697c8f8896a8 Add missing SideOnly in BaseMod
MinecraftForge/FML@1857064afa9ace796440c19f3275637a6e659375 Merge pull request #266 from grompe/patch-1
MinecraftForge/FML@182aa9c0cbe61ac69b0d428ead1dc817dd2a2e71 Fixed install.sh not passing arguments to install.py
MinecraftForge/FML@f46a538b41157081c840f647f123513ac4c5a071 Merge pull request #268 from Bo98/sh-args-fix
MinecraftForge/FML@29ef3d5ab412dcabbd67695558880c45011ace82 Update installer.

Update installer.

Merge branch 'miscchanges'

Merge pull request #610 from purpleposeidon/patch-1

Add an InputStream constructor to WavefrontObject
Merge pull request #704 from StormTiberius/master

Adds cloud height to WorldType
Merge pull request #268 from Bo98/sh-args-fix

Fixed install.sh not passing arguments to install.py
Merge pull request #706 from heldplayer/fluidRendering

Fix small derp
Merge pull request #705 from heldplayer/fluids

Fix render colour on bottom of fluids
Fix small derp
Fix render colour on bottom of fluids
Fixed install.sh not passing arguments to install.py
Add cloud height to WorldType

Merge pull request #266 from grompe/patch-1

Add missing SideOnly in BaseMod
Merge branch 'master' of github.com:EnderShadow/MinecraftForge into miscchanges

Add missing SideOnly in BaseMod

NetClientHandler exists only on client side and thus method using it should be annotated with SideOnly.
added temperature to fluids

it could be useful for blocks that are affected by temperature

Added a new function to allow control over whether an entity is dismounted when the entity it is riding goes under water

Merge pull request #700 from iChun/miscchanges

Fix RenderLivingEvent.Pre/Post not being fired by most Renders.
Fix RenderLivingEvent.Pre/Post not being fired by most Renders.
Add in some reverse lookup methods for game registry data

Updated FML:
MinecraftForge/FML@57befa89bbbf2bc2fcc4a97b78e07b3f9e23ef9d Fix keybindings being derped
MinecraftForge/FML@1d84e8063e9d0dc73928dba006e6001201285cad Temporarily add a version of 'reobfuscate.py' that will resolve complex reobfuscation graph issues with specialsource. Copy it over 'reobfuscate.py' in the mcp runtime dir. Hopefully will have an MCP/specialsource fix in the coming days.

Temporarily add a version of 'reobfuscate.py' that will resolve complex
reobfuscation graph issues with specialsource. Copy it over 'reobfuscate.py'
in the mcp runtime dir. Hopefully will have an MCP/specialsource fix in
the coming days.

Fix keybindings being derped

Tweak setBlock in update tick - it should only send serverside updates for
source blocks. Experimental attempt to fix worldgen issues for fluid blocks

Fix formatting error in PR

Merge pull request #695 from tommy1019/master

Fluid Rendering Fixes
Fluid Rendering Fixes

Add a translation map for looking up legacy liquid names to convert
to new fluid names.

Add support for loading legacy liquid stacks as new fluid stacks.
Requires having been written with the "liquidname" code from forge 1.5.x

Merge branch 'master' of github.com:tommy1019/MinecraftForge into miscchanges

Fix names for water/lava fluids. Closes #689

Merge branch 'master' of github.com:iChun/MinecraftForge into miscchanges

Add SneakClick bypass to client

Fixed fluids eating each other

Fluids check for other fluids density before flowing, if their density
is higher they can flow into the other fluid, if not they can't.

Update RendererLivingEntity.java.patch
if statement added
Add Pre and Post events firing for RendererLivingEntity
Add Pre and Post events for RenderLivingEvent
Fluid Render Fix

Formatting

Merge pull request #665 from copyboy/master

Fix getArmorTexture by passing it the subtype
Fix getArmorTexture by passing it the subtype

Re-added deprecated liquids system. To be removed next major MC versions after issues with Fluids are fixed. (reverse-merged from commit 9b5208fa308f22c24e295ce3be38dcafea2857ea)
This WILL be removed and should not be developed against aside for a temporary 1.6 release.

Remove SideOnly(Client) in IBlockAccess.isAirBlock

MinecraftForge/FML@10b16d32da4b7c32b15e69cf1c636505ebbe2540 Use json 2.9.1 nightly for OSX in release json like vanilla does.

Use json 2.9.1 nightly for OSX in release json like vanilla does.

General code cleanup of Fluid system. Made Fluid icons and associated functions non-sided.

MinecraftForge/FML@3f21a2c1b413e591f61f2906c3adbadd9c5b09e3 Stupid spaces and windows escaping -.-

Stupid spaces and windows escaping -.-

Package 'version.json' with universal jar for maunchers to use. It's the json used by the vanilla Minecraft launcher for Forge.

MinecraftForge/FML@b2958c9066db8c95bb4260893fbfe00103fc4ba1 Add quotes for paths with spaces -.-

Add quotes for paths with spaces -.-

MinecraftForge/FML@9520978b81d4cba5d8b0af0d5f155bd115023795 Use a temporary file for recompile's command line to combat command length to long issues.

Use a temporary file for recompile's command line to combat command length to long issues.

Add onNeighborTileChange callback to block by generalizing func_96440_m to all blocks rather than just comparators.

Updated FML: MinecraftForge/FML@4981aa3421262c3c1c4705468fe202df8198b9f0 Fix potential NPE in villager skin registry. Closes #678

Fix potential NPE in villager skin registry.

Merge pull request #675 from Soaryn/patch-1

Fixes Vanilla Fluid Still Icon Setters
Fixes Vanilla Fluid Still Icon Setters

Fixes null icons from being set for both the still water/lava icons, and sets the correct Icon.
Updated FML: MinecraftForge/FML@c48b48ee15f38d3e794b6eb3499c536226ca5a79 Fix server launching.

Fix server launching.

Fix for new location of mcp logo.

Updated FML:
MinecraftForge/FML@0378355c3720d587652b7792665a8b70bf104eb3 The server.classpath generates the runtime manifest, so it needs the non-debug asm jars.
MinecraftForge/FML@a3f48734ffbbb2eccffdafcd3cbe73824bd1afd6 Fix up jar sanity check code. FML validation of the jar works now and doesn't derp classloading.
MinecraftForge/FML@9947ba85036542a3231e25328d3300f2a5337370 Fix logo handling. no more NPE if the logo can't be found. Also, fix location of mcp logo now.

Fix logo handling. no more NPE if the logo can't be found. Also, fix location of mcp logo now.

Fix up jar sanity check code. FML validation of the jar works now and doesn't derp classloading.

The server.classpath generates the runtime manifest, so it needs the
non-debug asm jars.

Monkey patch to try and make print flush properly.

Update changelog generator to point to new jenkins.

MinecraftForge/FML@c625ef30093abb0755985c74d1f31e2c4cf6cfdd Update Forge signature for new private key

Update Forge signature for new private key

Updated FML:
MinecraftForge/FML@7348929819b0ae8ad35419ef5dbf66e66b442858 Kill release time scala libraries, to be re-evaluated after all movement is done and shit is fixed. May require manual instalation for mods that use scala.
MinecraftForge/FML@6de36d78f57f6f08ec586b67b684d0e5406cd436 Coremods now have a primitive dependency capability. Also, we search mods dir for special "TweakClass" manifests. These are using the vanilla tweak mechanism to inject into Minecraft. Helpful for other "platform" systems, when you don't want to have to deal with json changes!
MinecraftForge/FML@d4b30422b64a62a2f8a8c2cccd94cb0fd06154e0 Update build and eclipse workspaces for debug asm.

Update build and eclipse workspaces for debug asm.

Coremods now have a primitive dependency capability. Also, we search mods dir for special
"TweakClass" manifests. These are using the vanilla tweak mechanism to inject into
Minecraft. Helpful for other "platform" systems, when you don't want to have to deal
with json changes!

Kill release time scala libraries, to be re-evaluated after all movement is done and shit is fixed. May require manual instalation for mods that use scala.

MinecraftForge/FML@b9f4b02cb0b041594656f05de70225df702a8ddd Kill mcp's truncate method, for more useful logs.

Merge pull request #661 from Adubbz/master

Made eating particles compatible with metadata
Kill mcp's truncate method, for more useful logs.

Updated FML:
MinecraftForge/FML@e44e8b3112bd56c716a00c19d0be2f15d9128b70 Force a global asset scan prior to mod construction : you should be able to reference assets anywhere in your mod now.
MinecraftForge/FML@20e93a412ee13498babef02d404f57bf5e0fd919 Fix up logos in the mod screen. Clean up some unnecessary casts and suppressions, use the -debug asm library at dev time, since it contains full symbols and code in compiled form.

Fix up logos in the mod screen. Clean up some unnecessary casts and suppressions, use the -debug asm
library at dev time, since it contains full symbols and code in compiled form.

Made eating particles compatible with metadata

Removed extra spaces

Made eating particles compatible with metadata

Force a global asset scan prior to mod construction : you should be able to
reference assets anywhere in your mod now.

Re-add reverted patch AGAIN cpw check your commits -.-

Updated FML:
MinecraftForge/FML@bab4d87ce76baa40200939cc46780b1d3b2ff466 Update FML for new stealth update for 1.6.2

Update FML for new stealth update for 1.6.2

Remove forge ISidedInventory, deprecated since 1.5.

Allow optional rider interaction for entities, thanks for the suggestion Vswe.

Updated FML:
MinecraftForge/FML@7af5c21d74679d1a53550f9719bba22b2f28dd13 @InstanceFactory was set to look for Fields instead of methods
MinecraftForge/FML@bc9d1fe657c7a0953adc7d4c5ed81c575bdfb0f1 Merge pull request #254 from CaptainShadows/patch-1

Merge pull request #254 from CaptainShadows/patch-1

@InstanceFactory was set to look for Fields instead of methods
Updated FML:
MinecraftForge/FML@97269a5e3dc0a0e2e1a79183f9f5f2ee120e90bd Decode the file URL. Hopefully will make things work more..
MinecraftForge/FML@d4d522c5978ecd7a9195977b3327b441901bb5b4 And don't forget to remove the test code

And don't forget to remove the test code

Decode the file URL. Hopefully will make things work more..

MinecraftForge/FML@c913258ca38e662264bdf4aafbfbef86881c9290 Disable signature check of client for now, it's broken.

Disable signature check of client for now, it's broken.

Updated FML:
MinecraftForge/FML@dfa3a2665d6782b87713cea26dda558ac990a72a Add MC Version to installed version name.
MinecraftForge/FML@e91431fb707ce3e7e4296ccb8f3b2e5208b4dfac Don't validate signatures on servers, they are not signed.
MinecraftForge/FML@c7ab872c85dd057a4e44e12e34089dfd1a1184b6 Temporarily disable GuiModList's Mod logos.

Temporarily disable GuiModList's Mod logos.

Don't validate signatures on servers, they are not signed.

Add MC Version to installed version name.

Updated FML:
MinecraftForge/FML@c997f2adbc4c11cd8c2abe5f82ccd00b0e954b68 FML now verifies that the minecraft jar is correct and intact. This is intended to discourage those who think that modifying the minecraft jar is still acceptable.
MinecraftForge/FML@0db4624b27a5ecf59ed506ccfc26459ca26ee408 Don't initialize the server.
MinecraftForge/FML@4fa375683fdb7edff67c951fb371ab4a23435308 Fix NPE in new debug line when patch targets don't exist.

Fix NPE in new debug line when patch targets don't exist.

Don't initialize the server.

FML now verifies that the minecraft jar is correct and intact. This is intended to discourage those who think that
modifying the minecraft jar is still acceptable.

Proper return for getRegisteredFluidContainerData thanks Soaryn. Ref issue #634

Fix accedential reverted patch.

Make resourcelocation the class available on the server.

Test server-siding ResourceLocation

Drop two domain related fixes that have been applied in vanilla.

Updated FML:
MinecraftForge/FML@c47d08c89dfcacb96e36c427593174e08dcb4224 Tweak debug data on patched classes
MinecraftForge/FML@dbf5fe38cee04288e92d57f8782114b452245bce We now generate an adler32 checksum for each patched file and verify at load time that they match. Mismatch won't crash, but will emit a big warning..
MinecraftForge/FML@e88a0cd13f63904f7317e1a73880611f58820389 Update for stealth update. Thanks mojang!
MinecraftForge/FML@2336002f20e9412a7663781b23c51de0eff6a692 The game is going to exit in face of patch mismatch, unless you force it to run with fml.ignorePatchDiscrepancies in the system properties.

The game is going to exit in face of patch mismatch, unless you force it to run with fml.ignorePatchDiscrepancies in the system properties.

Update for stealth update. Thanks mojang!

We now generate an adler32 checksum for each patched file and verify at load time that they match.
Mismatch won't crash, but will emit a big warning..

Tweak debug data on patched classes

@InstanceFactory was set to look for Fields instead of methods

"fix it" to now match the javadoc :P

if it was set like that so modders wouldn't use it, it might be better to just say so in the documentation
Bump version to 9.10 for new MC version and removal of Fluids.

Remove deprecated Liquids API, Use new Fluids system as replacement.

Updated FML:
MinecraftForge/FML@1d0384f8f664d7002019b865675a5fddf2963b3d Update for 1.6.2 and MCP 8.04
MinecraftForge/FML@111b0216fdc55f56a8361a584141bca7c9c3f070 Add the jsons for 1.6.2
MinecraftForge/FML@6f96d89e2bf9313b26eeb4c334a208bf3e1c9ad4 Update eclipse workspaces for 1.6.2

Update eclipse workspaces for 1.6.2

Add the jsons for 1.6.2

Update for 1.6.2 and MCP 8.04

Updated FML:
MinecraftForge/FML@c97ac284a5e7dbdbccbad2f7ccc95252c4aef239 Update ModLoaderFuelHelper.java
MinecraftForge/FML@3a200e901e34ade679e4485307f57bee725bbe94 Fix coremod injection into main system. Should stop double-dipping coremods.
MinecraftForge/FML@2676c8999cbede05b5475ba68bfc25467a67d4fc Update mcp data. fixes #248
MinecraftForge/FML@5990e29af7b70e343dfd9cf38bb3e033e71a4489 Merge pull request #247 from jk-5/patch-1
MinecraftForge/FML@adc89722770b7319884619cadc6f10cc9050df24 Add cascadedTweaks. This will allow simple coexistence for any other mod framework using the tweaker system as well. Hi Voxel and LiteLoader!

Add cascadedTweaks. This will allow simple coexistence for any other mod framework using
the tweaker system as well. Hi Voxel and LiteLoader!

Merge pull request #247 from jk-5/patch-1

Pull request for #232
Update mcp data. fixes #248

Fix coremod injection into main system. Should stop double-dipping coremods.

Merge pull request #645 from XCompWiz/bedspawn

Makes player-specific spawnpoints dimension aware 
Makes player-specific spawnpoints dimension aware

Makes ServerConfigurationManager correctly get player-specific spawn
point for the target dimension
Changes EntityPlayer to store and save a (bed) spawn point for every
dimension, as well as transfer them to respawn "clones"

Re-gather list of Icons when atlas textures are stitched, allows for addition/removal of blocks/items after the atlas's inital constrction.

Fix enchantment effect on single pass items. Closes #644

Merge pull request #642 from MinecraftForge/newliquid

New liquid system
Mark old liquid system as deperated to be removed next Minecraft release.

Merge remote-tracking branch 'refs/remotes/origin/newliquid' into newliquid

Merge branch 'master' into newliquid

Update ModLoaderFuelHelper.java
Updated FML: MinecraftForge/FML@54e06e841d1c8df24fc30e1ec3a51def67f58858 Move Resource refreshing until affter postInit.

Move Resource refreshing until affter postInit.

Add missing air checks to WorldGenTrees and ChunkCache Closes #593

Fix compile errors temporarily, dont use till updated to new system.

Merge pull request #539 from richardg867/techne-1

Techne model importer
Render pass sensitive version of Item.hasEffect, Closes #517

Fix lether item rendering colors.

Add hook for EntityWither trying to destroy a block.

Merge pull request #600 from Lunatrius/rotation

Added rotation support for all vanilla blocks that can be rotated.
Fix domain issue with SoundPool entries.

Updated FML:
MinecraftForge/FML@7ce84491d1d4eada442944e02fc0e50c51f8045c Fix missing argument and startclient/startserver support.

Fix missing argument and startclient/startserver support.

Updated FML:
MinecraftForge/FML@155e8468180c93f1886a64028628764b1b22dd58 Add in support for mods/<mcversion> as a mod location. Also drop coremods as a location. They go in mods too now.
MinecraftForge/FML@3f4bf61ae6757605b27078c7321de9f640876836 Update key
MinecraftForge/FML@4545beb49d5348d8632e42965627b9837115525b Add deobf-data to setup env.
MinecraftForge/FML@e24f94951741709329208f738000b72933302a24 Fix eclipse workspaces and launch configurations.
MinecraftForge/FML@532bee7ce1c4392ee11f0389d98f0c2be6240aa0 Update to new MCP bugfix version, Fixes: Missing Armor/Item rendering, and Boss health mapping issues.

Update to new MCP bugfix version, Fixes: Missing Armor/Item rendering, and Boss health mapping issues.

Fix eclipse workspaces and launch configurations.

Add deobf-data to setup env.

Include MANIFEST file from FML's universal.jar, makes the jar runnable now!

TEMPORARY fix for MCP mapping issue.

Update dev worksapce: Proper natives location and new server launch profile.

Update key

Add in support for mods/<mcversion> as a mod location. Also drop coremods as a location. They go in mods too now.

Updated FML:
MinecraftForge/FML@6f0eedc9a64e4e246c40335e91b4868ad7f5a9e2 Fixed ClassCastException when loading ModLoader mods
MinecraftForge/FML@8844554da6d5d15756d7b0a9da2f5924006b3190 Merge pull request #243 from jrtc27/modclassloader
MinecraftForge/FML@7aa7221756d62ea1fbc750d7cf7acfdb28d75f2e Fix transformer search
MinecraftForge/FML@5f7df5e742cbc21565cee0d25709b5cb5462127c Revert "Keep these on our servers until the launcher is actually fixed -.-"
MinecraftForge/FML@ad79b9ed86eaf8c2702d79505d78a931c1774560 Fix up some deprecation warnings, and clean up coremod code that's going away.
MinecraftForge/FML@ba3707af22376f8f18103f63db56e4614a9c37db More javadoc cleanup

More javadoc cleanup

Fix up some deprecation warnings, and clean up coremod code that's going
away.

Revert "Keep these on our servers until the launcher is actually fixed -.-"

This reverts commit f1b533ad87ea08d6e62259c59779bcec1636e2fe.

Fix transformer search

Merge pull request #243 from jrtc27/modclassloader

Fixed ClassCastException when loading ModLoader mods
Attempt to gather lastBuild information to fix ChangeLog's off-by-one issue.

Move resource location resolution down to TextureAtlasSprite and allow for sprites that are not stitched.

Fixed ClassCastException when loading ModLoader mods

Start: f1b533ad87ea08d6e62259c59779bcec1636e2fe
End: f21cd286ca8e974b75536224a38cc0dacaca8454
Updated FML:
MinecraftForge/FML@f21cd286ca8e974b75536224a38cc0dacaca8454 Resource packs, part two. FML mods are now resource packs. Vanilla will scan anything under 'assets' and turn it into a resource prefix. Use resourcelocations to look stuff up.

Resource packs, part two. FML mods are now resource packs. Vanilla will scan anything under 'assets'
and turn it into a resource prefix. Use resourcelocations to look stuff up.

Update ChestGenHooks for new Dungeon chest strcture.

Fix resource domain when loading icon. Textures should be located in /assets/{domain}/textures/{block|item}/{name}.png Same strcutre as before except 'assets' instead of 'mods'.

Update filler block to prevent useless console warning.

Make Block.setIconName public

Fix bound texture in Controls screen, Closes #631 and #629

Updated FML:
MinecraftForge/FML@5a97d183dfb13b0f831172a1afef7407347ea7bc Remember to update your patches!!!!
MinecraftForge/FML@f1b533ad87ea08d6e62259c59779bcec1636e2fe Keep these on our servers until the launcher is actually fixed -.-

Keep these on our servers until the launcher is actually fixed -.-

Remember to update your patches!!!!

Updated FML:
MinecraftForge/FML@91ecf711092e1610dd10e77cdd517c3324e62d8d Fix -rel json
MinecraftForge/FML@efc369ee83a7b62f605c13e16efad66b63b4bd8c Fix EventHandler annotation.
MinecraftForge/FML@fbd57b32641b540d609314d91fd64350d50b9013 Mods are now loaded as resource packs. Vanilla will scan for valid prefixes based on subdirs of 'ass
ets' which can then be referenced as ResourceLocations with the "<prefix>:path" notation.

Mods are now loaded as resource packs. Vanilla will scan for valid prefixes based on subdirs of 'assets' which
can then be referenced as ResourceLocations with the "<prefix>:path" notation.

Fix EventHandler annotation.

Fix -rel json

Fix installer unintended replace.

Updated FML:
MinecraftForge/FML@9b6525e80504ff72a1798cf5797bf148295db776 Point scala downloads to our servers, Launcher doesn't like standard maven repos.

Point scala downloads to our servers, Launcher doesn't like standard maven repos.

Updated FML:
MinecraftForge/FML@29d6c875d0675ffa14428c511bd6ebe9232a486c Add FML Installer logo crated by @ZaverSLO https://twitter.com/ZaverSLO/status/349947190300508162
MinecraftForge/FML@3d17434510e890574b68c8a181b80c830b5d043a Build installer package for the new client launcher.
MinecraftForge/FML@bf38d947569911dab03319a8b0f1964f36b195b2 Update json samples
MinecraftForge/FML@7037184a4e724300001dfc1f8df2e76a0ec30368 Fix up release JSON
MinecraftForge/FML@dc7d02ebf6c9fc5965344a9aeca79f230a40afb4 Fix json syntax error.

Release will now build a installer jar and use the standard 'target' output folder.

Update ToolMaterial enum helper.

Fix json syntax error.

Fix up release JSON

Update json samples

Build installer package for the new client launcher.

Add FML Installer logo crated by @ZaverSLO https://twitter.com/ZaverSLO/status/349947190300508162

Merge pull request #627 from MinecraftForge/1.6

Merge 1.6 branch
Update src distro installer script. Source distro works now!

Updated FML:
MinecraftForge/FML@1229c4c4ea888f4f69272eed94ef5a53ce79ccda Fix src distrabution, and got rid of pesky common folder in eclipse workspace. src is now installable.
MinecraftForge/FML@902772ed0cb6c22c4cd7ad9b0ec7a02961b5e016 Revert common folder fix, Common folder does nothing, feel free to delete it after first load.

Revert common folder fix, Common folder does nothing, feel free to delete it after first load.

Fix src distrabution, and got rid of pesky common folder in eclipse workspace. src is now installable.

Merge pull request #626 from MinecraftForge/1.6

1.6.1 Branch Merge
Try absolute path, to not confuse jenkins.

MinecraftForge/FML@7fecf2ad6bdd918149a3c43453f6a78bd11e5404 Update mcp URL.

Update mcp URL.

Deprecation sweep and update version to 8.9 to reflect 1.6.1 update.

Update release script to generate binary patches and include deobf data.

Updated FML:
MinecraftForge/FML@c418da353f6a8420b095fa737e8b0eae270d31ae Cleanup coremod code, server side working now.

Update GuiIngameForge to reflect Mojang changes in 1.6.1

Add new launch configs to dev workspace.

Cleanup coremod code, server side working now.

1.6.1 Update

Support dirty submodules in changelog script.

Updated FML:
MinecraftForge/FML@110cf372eb5aa85df20b248976f1acdefa85e102 Add deobf data to merge-common, workspace is now actually runnable!

Add deobf data to merge-common, worspace is now actually runnable!

Updated FML:
MinecraftForge/FML@8960f6869fbe30d358a40997c47999025c3eae68 Add windows lzma executable http://tukaani.org/xz/ He states that most things are under public domai
n, But I couldn't find an exact reference to this executable. I'm going to assume it under public domain and distribuiting it here is fine. If not someone pleas
e direct me to the apropriate license and I will act accordingly.
MinecraftForge/FML@70cfe24e67adf6872ef1501599e2115e420c2539 Fix wrong project name in distro eclipse launch.
MinecraftForge/FML@7a004087f79b94bc92f29d50eb71288b6c1c968c Add deobf data to src dist. Dont create deobf jar as we ship the lzma Added *.lzma to .gitignore

Add deobf data to src dist.
Dont create deobf jar as we ship the lzma
Added *.lzma to .gitignore

Fix wrong project name in distro eclipse launch.

Add windows lzma executable
http://tukaani.org/xz/
He states that most things are under public domain, But I couldn't find an exact reference to this executable.
I'm going to assume it under public domain and distribuiting it here is fine. If not someone please direct me to the apropriate license and I will act accordingly.

Updated FML:
MinecraftForge/FML@6a318ddb784ca8b2bef0f6718089f7beb4d404e0 Fix typo in new packages.
MinecraftForge/FML@3711da9c456d20865a965734cc5aeaf7f5cb5e5d Another typo
MinecraftForge/FML@e35e4b16ff3d6dea547c41f02f2ca31ebe1f74aa More fixups
MinecraftForge/FML@18371bd8c9bd107f774289da35519f593ccc8ee7 Some fixes for updated mcp code
MinecraftForge/FML@ef646d3146e1f285d2cb8e79a74373beffa84774 Merge branch '16launch'
MinecraftForge/FML@7406b38d8ad1bc5c2c641c74f1614b946f246588 1.6.1
MinecraftForge/FML@12c928c538c1c04d3a21255c747d15468328ace9 Tweak commands patch
MinecraftForge/FML@3f15cd54c2d776ea161aaedbecad9e188d66578f Functional client @ 1.6.1
MinecraftForge/FML@71a92de5d95fccc4fe17cc39d0836891c6622f4d Client launch for eclipse

Small fixup, need to Update GuiIngameForge for new HUD changes.

Client launch for eclipse

Functional client @ 1.6.1

Tweak commands patch

1.6.1

Merge branch '16launch'

Some fixes for updated mcp code

More fixups

Initial patch update to 1.6, Does not compile, need to update references to the old TexturePack system.

Update FML to 16launch branch

Update workspace for new library structure.

Another typo

Fix typo in new packages.

Push conf folder for 1.6, Relied heavily on a yet-unreleased version of MCP.

Added more render methods to IModelCustom interface.

Fixed both RenderAllExcept behaviours

More fixes, binpatching works

First draft of 1.6 update

New mappings for marker

Tweak missing mapping

Added tessellation methods to obj model, for ISBRH-friendliness

Add support for alternative maven servers in libraries.
Also download sources for public libraries, and atach them in eclipse. DOCUMENTATION!! YAYA!

Base GenDiff off deobf data's class list instead of the merged jar. Add option to delete target files that generate patches.

Add Clean Server/Client launcher. Update Start.java to new Main class and login system.

Update eclipse projects for new libraries dependancies, and update packages for new 1.6 classes.

Add suggestions output if it can.

Fixed update_packages.py for new folder strcture.

Add missing argument

Re-wrote/orginized a lot of fml.py. Almost everything is re-written/moved.
This is done in preperation for MCP to roll out SpecialSource support and the new 1.6 structure.
Also done for my sanity while reading through the code.

Intruduced a new function. If there is a 'mcp_data' folder in the FML folder, it will be copied to the MCP work directory after MCP is extracted.
It DOES overwrite anything that already exists.
This is intended for places like BuildServer to place libraries/assets to prevent them from needing to be downloaded every version.

Introduced a dev-env json. Need to write the eclipse workspace references to the new libraries.
Out custom json includes asm and legacylauncher.

Added proper OptionParsing to decompile.py

Add a simple property annotation system for mods.

Changed to the EventHandler annotation universally, documentation and stuff.

Fixes, so it builds again..

Ignore binpatch

Add filter support for MCPMerger, and filter out libraries from the server's 'fat jar'.

Upgraded minecraft downloader to work with new launcher's asset/library system
New parameter:
  --no-assets: Disables the downloading of minecraft's asset tree, recomended that build servers supply this flag to prevent downloading of useless data.

Add an InputStream constructor to WavefrontObject

It is said that Resource Packs will return InputStreams. And I like putting my models into texture packs which, obviously, give InputStreams rather than URLs.
Update OreDictionary.java
Add air check to Flint and Steel Ref: #602

Fic Chest content gneeration delegate call. Cloases #609

Bump Forge revision and mark recomended.

No more debug please

Fix build script. Add a sample JSON file. You'll need the newest Launcher code to run this.

More fixups for new launcher model

Merge in binpatch and use launcher

Add air checks to BlockSand falling and Piston pushing. Please report any other issues with custom 'Air' blocks in issue #602

Added EntityLiving to Block.isLadder arguments, deperacating older version. New parameter has the possibility of being null, so modders must take care. Closes #608

Merge pull request #607 from heldplayer/tripwires

Fix tripwire patches for solid side checks
Fix tripwire patches for solid sides
More tweaks

Server side tested and working. Setup is complex atm. That will change.

First cut of runtime binary patching. Needs some work to actually test it in a real scenario..

Add stone and cobblestone to Ore Dictionary
Fix server patch FML update

Updated FML:
MinecraftForge/FML@22738de028a9ba51d43d73857dfb8969985566f0 Attempt to properly fix deadlock if the internal server derps. It should never hang now. Damn you fast computer..
MinecraftForge/FML@05a854cd2af53ca822ee8b249b0b3bbe44f94675 Small tweaks to the mcp data. Nothing major..

Small tweaks to the mcp data. Nothing major..

Attempt to properly fix deadlock if the internal server derps. It should never hang now. Damn you fast computer..

Make glass panes and iron fences connect to block sides based on solidity. This does change IBlockAccess, so anything with a custom IBlockAccess may need to implement the new method.

Forgot most important side, release script.

Fixed changelog generation.

Fix AIOOB exception in crash reporting if exception does not have a stack. Possible, but odd.

Add NPE protection to refernce to MinecraftServer.worldServer

Fix hoes being able to till dirt under other blocks, and made it look for air type blocks.

Fix Air block check in BlockPortal.

Add NPE protection to ItemStack delegates. Closes #601
Also cleaned up the names of said delegates, we do not have to follow MCP's crowdsourced names as they are very bad.
Redirected damage through setItemDamage to allow items to have finder control of breaking.

Added rotation support for all vanilla blocks that can be rotated.

Disable ImageIO's File based cache, should speed up texturepack loading/stitching.

Updated FML:
MinecraftForge/FML@24c405665105a789a0708a7e30c8bcb96899da6b Add in an optional modid identifier for @SidedProxy. It's main use is when both scala and java @Mods reside in the same package, and you want the @SidedProxy behaviour for a specific @Mod language type. In general it should not be needed otherwise.
MinecraftForge/FML@cd0466395a8f1af3ec44f124bf4088df2d318603 Fix sysout with trailing messages after a newline

Fix sysout with trailing messages after a newline

Add in an optional modid identifier for @SidedProxy. It's main use is when both scala and java @Mods reside in the
same package, and you want the @SidedProxy behaviour for a specific @Mod language type. In general it should not be needed otherwise.

Merge branch 'master' into newliquid

Updated FML:
MinecraftForge/FML@6f3da9736531153629fb4213e3b2cae776bfb50a Don't throw an exception if the scala adapter find a java proxy. I may add some distinguishers to @SidedProxy so you know which mod it's for.
MinecraftForge/FML@59fe905695421a5be9370b0009ef794abaaf75bb Don't continue trying to send events to mods that depend on errored mods.

Don't continue trying to send events to mods that depend on errored mods.

Don't throw an exception if the scala adapter find a java proxy. I may add some distinguishers to @SidedProxy so you know which mod it's for.

Merge pull request #560 from jk-5/master

RenderGameOverlayEvent.Post ALL is not called in GuiIngameForge
Ignore registration of a object that is already registered. Preventing duplicate callback invocations. Thanks King_Lemming for pointing this out.

Add cache for ASM Event Handler bridge classes, should not need to redefine a class to invoke the same method on different instances.

Make changelog generation non-fatal untill we get jenkins issue figured out.

Fix isAir check to see if a portal can light. Should fix w/Railcraft and others

Patch village distance checking to use floats instead of ints, to avoid int wrapping

Fix arbitrary GUIContainer text coloring by forcing lighting to be disabled. Closes #594

Merge branch 'master' of github.com:KingLemming/MinecraftForge into newliquid

Conflicts:
	common/net/minecraftforge/common/network/ForgePacket.java

Updated FML:
MinecraftForge/FML@843a13c1ab1e3901160082fa63c557243fb64675 Try and clean up cycle detection output a bit
MinecraftForge/FML@82e9de8641c6a559eec711ea6d1e940d99cbc98f More tweaks to the mod sorting code
MinecraftForge/FML@ac97370f94d10beee5f021795cddda827c4411d4 Add in a pretty sorting error screen
MinecraftForge/FML@f1d68ed4c82cd28e50ec6a0befc55ff0165bfe08 Throw the sorting exception
MinecraftForge/FML@edc1fb24e2cad9badd2dd18ccccd590d77156e18 Send the "suspect list", and print the suspect versions

Send the "suspect list", and print the suspect versions

Throw the sorting exception

Add in a pretty sorting error screen

More tweaks to the mod sorting code

Try and clean up cycle detection output a bit

Forge Fluid System!

Signed-off-by: King Lemming <kinglemming@gmail.com>

Fix potential GL issue when atlas animations bind textures without informating RenderEngine.

Cleanup Dimension Registration packet, generate takes no arguments, and added fix to world to prevent providers from overwriting the dimension ID.

Merge pull request #590 from bloodmc/master

Add support for servers to register dimensions on client.
Add support for servers to register dimensions on client.

In order to support multi-worlds such as MultiVerse, the server needs the
ability to register dimensions on client or many forge mods such as IC2
will not function correctly. This has been an issue for MCPC which
provides both Forge and Bukkit support to players. By adding the
DimensionRegisterPacket class, MCPC now has the ability to send the
required packet to client to register a dimension with DimensionManager.

Introduced the framework for Forge's packet handler system. Heavily based off FMLPacket.
Packet splitting and reconstruction is handled.

Updated FML:
MinecraftForge/FML@3bf50c4bbe82f0cc317dafcf2a569cb5210bc738 Fix server side derp with Forge network packet handler

Fix server side derp with Forge network packet handler

Fixed creative tab rendering with invalid color closes #588

Fix type in biome list.

Add forge network handling support

Updated FML:
MinecraftForge/FML@4922e90d81d8b8b9374c4d04858a06c5bf03965c Separate network mod config from setup. Allows for Forge Packet Handler nicety

Separate network mod config from setup. Allows for Forge Packet Handler nicety

Merge pull request #584 from Chicken-Bones/hitinfo

Add hitInfo field to MovingObjectPosition for when an int doesn't suffice
Fixed render count for stacks of blocks 40+ and distrabution of items based on scale. Closes #579

Fix another NPE when Items are in Block range with custom renderers, Modders keep your items out of the block range! Closes #581

Add hitInfo field to MovingObjectPosition for when an int doesn't suffice

Remember x & z passed to getTopSolidOrLiquidBlock and use it for foliage tests. Fixes #575

Fix blending on the hotbar. Closes #574

Add in a very simple stencil bit registry to try and arbitrate between mods wanting to use stencil bits in rendering

Updated FML:
MinecraftForge/FML@23b070c7d02a8da44bf04c2f9ba2b485a44ad967 Alternative @SidedProxy setter for Scala.
MinecraftForge/FML@2cca7aa759b4b6c3a128ce43bbd924e4762c43c2 Some more Scala @SidedProxy adjustments. Now properly supporting pure singletons, i.e. object C {   @SidedProxy(...)   var proxy: P = null } Removed fallback, as all such singletons are properly handled by the new code now, and class implementations fall back to the code also used for plain Java mods.
MinecraftForge/FML@8517a824e5251c409e05999d42fc6d70497609f5 Merge declaration and initialization of a variable.
MinecraftForge/FML@a3a920437f3ede6841ae2c449a38975b02b28088 Merge pull request #230 from fnuecke/master

Merge pull request #563 from Asajz/master

Default Quartz Ore Dictionary
Merge pull request #568 from hitchh1k3r/master

Furnace XP bug fix (fixed)
Merge pull request #571 from odininon/master

Addition: ItemStack sensitive canHarvestBlock
Merge pull request #565 from CovertJaguar/patch-1

Possible NPE if the liquid isn't in the LD
Fix NPE when rendering EntityItems that are not blocks but int he block range.

Created an ItemStack sensitive version of canHarvestBlock.

Prevent water from dropping snowballs.

updated FurnaceRecipes.java.patch

Merge pull request #230 from fnuecke/master

Alternative setter logic for @SidedProxy in Scala classes/mods.
Fire EntityJoinWorled event for forced entities {Players and there mounts} as well, just ignore the cancelled value.

MinecraftForge/FML@787c0c4a6af3af60928b3a90f383a305a17a4347 Don't spit error on LWJGL not supporting 4.3 just warning.
Make custom item renderers attempt to use EQUIPPED type when running first person. For backwards compatiblity, will be removed in 1.6.
And a small change to make the 1.6 check not print it's stack trace.

Don't spit error on LWJGL not supporting 4.3 just warning.

Merge pull request #564 from purpleposeidon/patch-1

Fix render bounding box of trapped double chests
Merge pull request #566 from jampot5000/patch-1

Make getStencilBits static
Make getStencilBits static

Made getStencilBits static so it can be called.
Possible NPE if the liquid isn't in the LD

https://github.com/BuildCraft/BuildCraft/issues/787
Move Partical rendering down in the order, after everything else. Should fix particals rendering behind water, digging process, and selection.

Fix render bounding box of trapped double chests
Added oreQuartz

Gives a default quartz Ore Dictionary (I know of at least 3 used by different mods that use Nether Quartz as an equivalent).
RenderGameOverlayEvent.Post(ALL) is now called in GuiIngameForge
Fixed NPE in rendering dragged items.

Attempt to allocate a 8-bit stencil buffer when creating Minecraft's display context. If that throws an error it will revert back to it's default values.
Also contains a method for modders to rereive how many bits the context was created with. Closes #552

New RenderPlayer and RenderLiving events. Closes #493

Changed to just plane entity for flexability.

EntityPlayer sensitive version of Item.isValidArmor, deprecated older version. Closes #551

Merge declaration and initialization of a variable.

Some more Scala @SidedProxy adjustments. Now properly supporting pure singletons, i.e.
object C {
  @SidedProxy(...)
  var proxy: P = null
}
Removed fallback, as all such singletons are properly handled by the new code now, and class implementations fall back to the code also used for plain Java mods.

Alternative @SidedProxy setter for Scala.

Merge pull request #557 from pahimar/master

Expose the EntityLiving's combat tracker
Merge pull request #556 from micdoodle8/master

Separate EQUIPPED and EQUIPPED_FIRST_PERSON Item Render Types
Update forge_at.cfg
Capture and fire the PlaySoundAtEntity event for The client entity. Minecraft does some odd bypasses for no good reason. Thanks iPixile for reporting this.

Separate EQUIPPED and EQUIPPED_FIRST_PERSON Item Render Types

Updated FML:
MinecraftForge/FML@99bb50d8f8d27217ba58a41c802a504213e99461 Improved Entity Spawn Error
MinecraftForge/FML@c0cca7f41d5b080e39dd8d3d6cfc329295c822e6 Merge pull request #227 from CovertJaguar/patch-1
MinecraftForge/FML@49111e9c5cffab49ec35f965801c3f0496f6def6 Add version detection to astyle and print error if it doesnt detect version 2.0+
 Also fixed astyle's config for max-instatement-indent that sometimes caused crashes with certian versions of astyle.

Add version detection to astyle and print error if it doesnt detect version 2.0+
Also fixed astyle's config for max-instatement-indent that sometimes caused crashes with certian versions of astyle.

Merge remote-tracking branch 'refs/remotes/origin/1.5.2'

Conflicts:
	common/net/minecraftforge/common/ForgeVersion.java

Bump version number for 1.5.2

Merge pull request #550 from cadyyan/master

Build Script Error Handling Error
Merge pull request #227 from CovertJaguar/patch-1

Improved Entity Spawn Error
Improved Entity Spawn Error
Fixed build error handling using invalid Python syntax.

Fixed hardcoding of MC version in debug text.

Updated FML:
MinecraftForge/FML@00f00b17bf0da262e6fe3e327ca2deedf7146305 Fix scalac detection to actually use the located command instead of defaulting to 'scalac'

Fix scalac detection to actually use the located command instead of defaulting to 'scalac'

Changelog generator will now bundle failed builds with the next successful build. Should make it look better and prevent the version numbers from being confusing.

Bump version to 7.7.2 so I can make a release.

Update to 1.5.2 PR.
MinecraftForge/FML@f0bba74a4748935ef3a715ae2f45feb75cc20376 Update for minecraft 1.5.2
MinecraftForge/FML@62fdbad74c2507d147ecab56f56029135d88c6f5 Update MCP's md5 for the fixed srg files.

Update MCP's md5 for the fixed srg files.

Update for minecraft 1.5.2

Merge pull request #543 from Chimaine/master

Fix unregistering of event listener
Replaced derpy tabs with spaces

Fixed ListenerListInst not being rebuild after unregistering a listener, causing calls to unregistered event listeners.

Merge pull request #542 from KingLemming/master

OreDictionary additions + ItemStack maxDamage hook
-Add vanilla Ores to the Ore Dictionary. No recipe replacement required.
-Add NBT-sensitive getMaxDamage() for ItemStack.

Signed-off-by: King Lemming <kinglemming@gmail.com>

Attempted a fix for the changelog generation, should print all builds back to 1 now.

Updated FML:
MinecraftForge/FML@cf9b5b445ba284d389c7e32a03d9c8ef43469042 Don't leave scala running in interactive mode.

Don't leave scala running in interactive mode.

Updated FML:
MinecraftForge/FML@aa200923f0fe0c548faa4f103d803ade2e49d19d Fix patch derp.

Fix patch derp.

Updated FML:
MinecraftForge/FML@ddadf93ca1d648d88fdb61c9625cd675c3650ccd Fix when an old scalac is present on the system to not fail the build

Fix when an old scalac is present on the system to not fail the build

Fix rotation issue with non-block items.

ItemStack delegation to Item for damage values.

Try and be less noisy about world leaks

Updated FML:
MinecraftForge/FML@cfda7fc738ce6079f625a3822ebff5e7e0db5669 Fix URL for MCP
MinecraftForge/FML@781c68121626321e0efddaf4c4db9f1b8b5911db Some fixups for scala compilation in MCP. Scala should now be compilable and reobfuscatable with srgnames in MCP.

Some fixups for scala compilation in MCP. Scala should now be compilable and reobfuscatable with srgnames in MCP.

Fix URL for MCP

Updated FML:
MinecraftForge/FML@dcf069ca52738a7bb7bde01f1c7ebd2e06cd0ac6 Attempt to reduce lines on the screen for id mismatch. Hopefully prevents game crashes.
MinecraftForge/FML@58ba24add2a96bf4c079d5919f2d90dcc2f380e4 Fix possible NPEs in GameData

Fix possible NPEs in GameData

Attempt to reduce lines on the screen for id mismatch. Hopefully prevents game crashes.

Complete it, got the bug figured out

Techne model loader (incomplete for debugging)

Add forge/FML data to the f3 screen.

Updated FML:
MinecraftForge/FML@a3b5eaacfdd9218ef68d3dc064bba729b797cb3d Fix a small modloader compatibility derp: closes #222
MinecraftForge/FML@677a6e578e84109702365da4a784f9a57d8c9957 Fix scala supporting SidedProxy. It should work now.
MinecraftForge/FML@334a76de75f2b417f04c23526c7e66ceb48e0de2 Update FMLDeobfuscatingRemapper.java
MinecraftForge/FML@42f1d8795599e0d1a516a1fdd7488a09b77e4565 Merge pull request #224 from Glought/master
MinecraftForge/FML@2dcabe01232b48009acbca6724565598761f561b Add a to string to fmlmodcontainer: should mean less derpy cyclic dependency data
MinecraftForge/FML@11ac46daebe901a6012a09ba5f6fe44af5b1be06 Fixing the GameRegistry. Now it is possible to register a Block with a BlockItem using following code: MyBlock myBlock = new MyBlock(); GameRegistry.registerBlock(myBlock, MyBlockItem.class, "myBlock"); where MyBlockItem class has one constructor with signature: public MyBlockItem(int id, Block block)
MinecraftForge/FML@c3fda11d100f9db7c32ef212ac37eade3e35d701 Merge pull request #225 from MarcinSc/master

Merge pull request #225 from MarcinSc/master

Suggested fix for issue 221
Fixing the GameRegistry. Now it is possible to register a Block with a BlockItem using following code:
MyBlock myBlock = new MyBlock();
GameRegistry.registerBlock(myBlock, MyBlockItem.class, "myBlock");
where MyBlockItem class has one constructor with signature:
public MyBlockItem(int id, Block block)

Add a to string to fmlmodcontainer: should mean less derpy cyclic dependency data

Merge remote-tracking branch 'refs/remotes/origin/GuiIngame'

Conflicts:
	patches/minecraft/net/minecraft/client/Minecraft.java.patch

Merge pull request #224 from Glought/master

Fix for  Issue #223 
Update FMLDeobfuscatingRemapper.java

Fixes a "Type mismath:cannot convert from element type Object to FieldNode" error at line 176.
Allow spawning of Bonemeal particles even if block is not set.

Fix scala supporting SidedProxy. It should work now.

Fix a small modloader compatibility derp: closes #222

Restore world unload event for client worlds Closes #531

Fix replaceable checks to work on blocks with a non-replacable material, Closes #532

Fix the BLOCK_3D render helper for items that aren't an instance of ItemBlock Closes #533

Fix logic issue in CrashReportCategory patch, blame Jadedcat for sloppy quick patch.

Merge pull request #530 from Azanor/master

Fix for BiomeDictionary.getTypesForBiome throwing a ClassCastException when called.
getBiomesForType will cause the same problem
Fix for ClassCastException when attempting to fetch Biome types from BiomeDictionary

Attempting to fetch the BiomeDictionary types linked to a biome throws a ClassCastException. This fixes that
Simple block recolouring API: closes #525
Fix up documentation on "rotation" API: it is up to the mod to decide interpretation of "rotation" for the mod/block.

Updated FML:
MinecraftForge/FML@b3d4ea05ec633fb1898e97febf786f1a3e420986 Fix possible NPE in findItemStack, closes #218

Adds a field to the player for maximum health. Player.dat additions are present, getMaxHealth() needs a magic number for spawning. Closes #527

Fix return value of EnchantPower hook, closes #518

Forge now takes control of GuiIngame's renderGameOverlay, and spits out a ton of events to give modders control of how the screen is rendered.
Inital draft for community feedback.

New hook to allow Items to render Helmet overlays like pumpkins do.

Fix possible NPE in findItemStack, closes #218

Updated FML:
MinecraftForge/FML@394f424185a044afcd6b31f400e731478171dd18 Fix to output versions in crash logs
MinecraftForge/FML@8f35adca7a41c280a4b63d4787f042f615966cac Use more expressive language when a version specifier is a simple unbounded above condition

Use more expressive language when a version specifier is a simple unbounded above condition

Fix to output versions in crash logs

Updated FML:
MinecraftForge/FML@5673c1dd2966536000c2b3f17f85131204c4a291 Add srgname to registerTileEntityWithAlternatives
MinecraftForge/FML@7aea09f4ca2f087d59ff6cb0de1c8e3e8b9ea4df Add type info to properly deobfuscate overloaded fields. Fixes #210.
MinecraftForge/FML@edffd04ed2e89ece75189f76b92ae47643ec92f8 Add in some caching of the read field descriptions for efficiency
MinecraftForge/FML@0daf1a6df4203d97be65a76a46550f6ad22ccc79 Merge branch 'agaricusb-fix-deobf-field'
MinecraftForge/FML@ada52078c75fdfa506a4287c112d01d9af961d5a Merge pull request #216 from agaricusb/add-srgname

Merge pull request #216 from agaricusb/add-srgname

Add srgname to registerTileEntityWithAlternatives
Merge branch 'agaricusb-fix-deobf-field'

Add in some caching of the read field descriptions for efficiency

Merge pull request #521 from ProgrammerHero/master

Fixed a bug that prevented proper lava generation near bedrock
fixed a bug that prevented proper lava generation near bedrock

Fix AIOOB in crash report stack trimming.

Add type info to properly deobfuscate overloaded fields. Fixes #210.

Add srgname to registerTileEntityWithAlternatives

Merge pull request #515 from pahimar/master

Fixes parsing faces for faces that do not have texture coordinate data
Missed a bit

Fix a derp in that we provision the various arrays for a face, even if we are not going to parse data into it. Solves NPEs for when obj models that don't have texture coordinates attempt to render.

Cave and Ravine gen will now take into account the Biomes top and foller block, allowing them to break the surface in modded biomes. Beaches, MushroomIslands and Deserts are exempt from this check to preserve vanilla world gen functionality. Closes #491

Fix offset in AdvancedModelLoader. *doh*

Added a small method in the Block.java to specify the amount of enchanting power it can supply to an enchanting table. Closes #508

Added NBT data to liquid stacks. Closes #501

Add Item 'swing' callback for use when playing the arm swing animation. Closes #505

Item callback for EntityItem update tick. Closes #426

Delete sneaky extra file

Add in a generic factory interface, allowing for additional model support
to be added at runtime.

More interface work

Adding interface for other custom model format importers to implement

Switch out String.matches in favour of Pattern/Matcher usage, and a tad more documentation.
Fixed a bug in texture coordinate parsing (can have 2-3 values per entry, instead of the 3-4 I had before)

Wavefront object importer. Imports Wavefront object and offers some simple render methods for rendering the models in game. Modders have complete access to all the data in the model to write their own rendering related code as well.

Update MCP names to recent published names

Updated FML:
MinecraftForge/FML@1774e2bf3073c3449d1f289399971ad93a5b6479 MCP names update

Re-add and mark deprecated the old signature for ForgeHooksClient.getArmorTexture.

Deprecate preloadTexture, make it a no-op. Should stop derpiness with new
texturing system performance tweaks.

Updated FML: MinecraftForge/FML@4836b3272a9b292c62816c1d1f9e845486753839 Re-worked the Texture patches, optifine helper function, and re-added support fo
r dynamically rotating the texture for mod authors who do things horribly wrong.

Updated FML:
MinecraftForge/FML@a31607ae7d0214101679a1ecf1ae8032a5257eda Fix compilation derp, and clean up rotation helper.

Fix performance of texture uploads

Updated FML:
MinecraftForge/FML@00c788308881a07a683e17e2e9382313f3719b45 Very significant improvement in performance by using glSubImage to upload data. Inspired by frequent complaints about performance of hires texture packs. They probably still need a beefy system but should work. Hopefully I can figure out why the subImage GL side copy isn't working properly for an even more significant speed boost. But this gets things started.
MinecraftForge/FML@57ad221cc6d9605b9d521f86620c2a31f922ac24 And add the patches *sigh*

Optimize Texture loops a bit for non-rotated textures. Should help the FPS loss on higher resolution texture packs. If it becomes a major issue we may have to look into a more  optimized animation system.

https://mojang.atlassian.net/browse/MC-13206

Small bugfix in Stitcher that was preventing ti from fully filling the possible texture space. Should lower the amount of empty space in textures.

Small optimization for usages of Minecraft.getGLMaximumTextureSize(), only need to calculate it once.

Fix scoreboard saving bug caused by our fix of vanilla map saves.

Deprecate long dead interface that moved to FML. remvoe next MC version.

Updated FML: MinecraftForge/FML@1de89525cc2265bdce8704d9bd0d31c57bca4d97 Fixed issue with instalation when java/javac commands had quotes.

Updated FML: MinecraftForge/FML@704a70902fca3de620375116a33dccd3d6d576d0 Sanitize input to isRemappedClass to use '/' as a package seperator like the srg files.

New hook to allow Items to provide there own armor models. Closes #487

This allows the result of the explosion to take into account metadata,
tile entities, or even to cancel it altogether.

Allowed block exploding to take into account tile entity and metadata

Untag NBTTagList.removeTag as client side only, allowing simple removal ont he server side. Closes #477

Fix item deletion in creative menu for items that are the same id/meta but differnet NBT's. Closes #479

Allow items to provide there own FontRenderer for there tooltips. Added for #463

Clarify Factory call and Event Functionality

Added maxCanSpawnInChunk event to allow overriding of creature chunk spawn cap

MCP names update

Re-worked the Texture patches, optifine helper function, and re-added support for dynamically rotating the texture for mod authors who do things horribly wrong.

Fix compilation derp, and clean up rotation helper.

And add the patches *sigh*

Very significant improvement in performance by using glSubImage to upload data. Inspired by frequent complaints about performance of hires
texture packs. They probably still need a beefy system but should work. Hopefully I can figure out why the subImage GL side copy isn't working
properly for an even more significant speed boost. But this gets things started.

Fixed issue with instalation when java/javac commands had quotes.

Sanitize input to isRemappedClass to use '/' as a package seperator like the srg files.

Add function to remove categories from a configuration, indavidual properties can be removed using ConfigCategory.remove() Closes #462

Pulled Biome Tag System by Emasher, Closes #433
An issue with biome adding mods which is becoming increasingly annoying for players, is that many mod authors that add biome specific world generation or mobs in their mods, for the most part, hard code them to work with vanilla biomes only. This becomes a huge problem when it's difficult to even find a vanilla biome, let alone a specific one, when biome mods are installed.

A simple solution to this problem is a tag system for biomes that allows mod authors to set up their world generators, or mobs to generate or spawn in biomes that have been registered with a specific tag such as "FOREST", or "FROZEN". I wrote such a system a few months ago, which I've been using with my own mods, and have made available to anyone who wants to use it. Since then, I've had requests from mod authors and players alike to try and get it, or at least similar functionality, into Forge, where other mod authors will be more comfortable using it.

Aside from the tags, it also includes a rule based system to classify biomes that have not already been registered with it when information is requested on them (You can opt out of this by registering a biome as type "NULL"). And additionally, the ability to register IWorldGenerators for specific biomes, or biome types (tags) to speed up chunk generation a little bit.

Deprecate IArmorTextureProvider, moved to Item. And exposed more information to the function. Closes #365

Add checking for 'ENUM$VALUES' in EnumHelper. Eclipse uses it's own internal compiler which does not follow the java standard of making the values field names $VALUES and private. Instead its public and ENUM$VALUES. Closes #502

Updated FML: MinecraftForge/FML@570faeb790745c35403c67fabab57651b71da576 Added the ability to save transformed classes to disc for debugging.

Added the ability to save transformed classes to disc for debugging.

Revert MinecraftForge/MinecraftForge@f594109b30c87f5a0996eee9e8c4513380733cee If concurancy issues arise we will reassess. The provided solution caused entities to be removed incorrectly and cause 'invisible' entities client side.

Fix EntityPlayer passed to Bonemeal event.

Removed index bounds checking in some chunk functions, if you error blame Grum.

Fix off-by-one in rotated textures.

Fix vanilla texture bug causing rotated textures to be placed wrong.

Updated FML:
MinecraftForge/FML@8b8837c9ff635d4988e0a1504fca38667825daf0 Fix NPE when branding isn't present

Fix NPE when branding isn't present

Merge pull request #496 from Krapht/master

Remove a SideOnly that crashes server
Remove unneeded SideOnly. ref: Buildcraft/Buildcraft#710

Removed obsolete patches
Updated FML:
MinecraftForge/FML@26ccb9106e443e664b0fdc1b95c3600b90ab2bc5 Change snooper/crash report brand handling. fmlbranding now loads another string!
MinecraftForge/FML@eff464cf0e656d92dfedf16e79e5cd6c36b9fc76 And the core patches for that

And the core patches for that

Change snooper/crash report brand handling. fmlbranding now loads another string!

Sanity check the item ID for loaded liquid stacks better.

Add in persistence code for LiquidTank. Using it should protect against liquids that get removed f.e. Closes #395

Make liquidstacks immutable in their type data. Sorry about this, but it makes things a lot easier.

Fix up liquidstack so it knows about the texture sheet for it's icon

Fix AT file

Fix possible NPE in ChunkManager. Closes #478 in reality

Fix up some liquid logic

fix bug #489 from #429

made BlockFluid.theIcon protected

Updated FML:
MinecraftForge/FML@0d844874124649099dbcbb9ae2b36719e1dda25f Fix up derp in access transformer

Fix hashCode

Fix up derp in access transformer

Use the liquid name in liquid stack persistence. Closes #429

Updated FML:
MinecraftForge/FML@2bc6a0666f8a54f6b1fbc3398c6e3a385ecd35b5 Attempt to make any "default package" class public. This might fix problems with certain modloader mods that ship changes to vanilla classes.

Attempt to make any "default package" class public. This might fix problems with certain modloader mods that ship changes to vanilla classes.

Bump version number for 1.5.1 Note: We really need to do this more...

Fix NPEs when modders stupidly register null texture names.

Fixed issue with Event.hasAnnotation ignoring it's parameter. And cached its values for potential performance gain. Closes #482

Damn you python and your tab obsession!

Changelog fixup

Re-enable changelog? Hopefully...

Merge branch 'mithionchanges'

Update patches!

Merge branch 'mithionchanges'

Merge branch 'mithionchanges' of github.com:Mithion/MinecraftForge into mithionchanges
Fix up code for minecraftforge style. Clean up patches.

Conflicts:
	common/forge_at.cfg
	patches/minecraft/net/minecraft/block/Block.java.patch

Updated FML:
MinecraftForge/FML@82bc9f1b35f5d51a722d294dd252e6bab4d54fa4 Add some information, and a log message letting you know it worked

Add some information, and a log message letting you know it worked

Updated FML:
MinecraftForge/FML@ede93d438f2b5fab92cd6a459247ca158354e430 Validate supplied stack size
MinecraftForge/FML@d73ac867df775174dafdd2da193fabd7c3e7407e Add a mechanism to dump the registry- useful for mod developers.

Add a mechanism to dump the registry- useful for mod developers.

Validate supplied stack size

Updated FML:
MinecraftForge/FML@5e1949eb0e3a43d3ec6c710289532d93f6819934 Clone the itemstack, and allow for passing in a stacksize

Clone the itemstack, and allow for passing in a stacksize

Updated FML:
MinecraftForge/FML@2d368c4c2eb6b4e0bb60757b6e1679c23aaad9db Itemstacks in the GameRegistry (manual registration by mods)

Itemstacks in the GameRegistry (manual registration by mods)

quick bugfix in entityenderman

reversed boolean check on event result

Ender Teleport Changes

Renamed Ender Teleport Event and added it in to ender pearls.

Enderman attackEntityFrom changed

Changed so that if the teleport fails upon being attacked, Endermen will
take damage as normal.

Enderman Teleport Event

New event when an enderman teleports that allows the teleport location
to either be modified or completely cancelled.

Access Transformer Changes

AT changes and corresponding class changes.
Additions (all made public):
EntityLiving.targetTasks
PotionHelper.potionRequirements
PotionHelper.potionAmplifiers
PotionEffect.duration
Potion.setIconIndex
Item.setPotionEffect
Block.blockHardness
Block.blockResistance

Add in block rotation support. It supports most vanilla blocks (hopefully), logs should be added soon.

Fix itemframe render bug

Fix AT config for texturemap

Player Flyable Fall Event

Adds an event to EntityPlayer that is posted on player fall when the
player has flight capabilities.

Brewing Stand Changes

Added an event on potion ingredient applied.  Event contains the item
stacks of each of the potions being brewed as well as any remaining
ingredients.

Changed TileEntityBrewingStand and SlotBrewingStandPotion to look for
instanceof ItemPotion rather than potion.itemID

Entity Extended Properties Changes

Adds IExtendedEntityProperties interface, which specifies three methods
that are needed:  Init, Save, and Load.

Adds the EntityConstructing event, which is called during the
constructor of Entity.  It is needed there so that the reference is in
place during the ReadNBT call.

Adds hooks into Entity that allow registration of
IExtendedEntityProperties classes, as well as saving and loading to NBT.

Allow itemstack sensitive damage computation for attacks. Should allow
storing data in the nbt :)

Allow items to decide if they can or cannot have book enchantments applied

Updated FML:
MinecraftForge/FML@d9db27275ea06d37ae75e201140019ca152314b0 Fix mismatch screen a bit. Should render more correctly now and at least not be blank in a lot of circumstances..

Fix mismatch screen a bit. Should render more correctly now and
at least not be blank in a lot of circumstances..

Updated FML:
MinecraftForge/FML@d1ff1967b50f2ff2edf0b60acdb6508c0a3eeb06 Fixed FMLRelaunchLog's Newline Handling
MinecraftForge/FML@591a25722b36d2d1b200a31278cb8da117363f6b Merge pull request #208 from jrtc27/patch-1

Merge pull request #208 from jrtc27/patch-1

Fixed FMLRelaunchLog's Newline Handling
Fixed FMLRelaunchLog's Newline Handling

System.out.println("\n") causes currentMessage to start with a newline character, which means idx will always be 0 from then on. Therefore if idx is 0 messages must still be logged, otherwise no more messages sent to stdout will be logged and they will just accumulate in currentMessage.
Updated FML:
MinecraftForge/FML@f709ce757984b13acb7208d6d8fbdeaa83d2928d Fix missing block world rendering
MinecraftForge/FML@748eece456e079a21112a77047d004d4f410b170 Merge pull request #206 from mDiyo/patch-1
MinecraftForge/FML@012a755bb9ce9737c843b0dfd86473d143b637be Fix up patch properly. Also, fix md5s for the jars.

Fix up patch properly. Also, fix md5s for the jars.

Merge pull request #206 from mDiyo/patch-1

Fix missing block world rendering
Fix missing block world rendering
Merge MC 1.5.1 branch to master.

Merge MC 1.5.1 branch to master.

Updated FML:
MinecraftForge/FML@625da6492dddcaca8133718aeee97f9981ced623 Fix install.py --mcp-dir option. Fixes #204.
MinecraftForge/FML@687d3c059d054c338c25a489be206a9f3dc63d81 Merge pull request #204 from agaricusb/fix-mcpdir

Merge pull request #204 from agaricusb/fix-mcpdir

Fix install.py --mcp-dir option
MinecraftForge/FML@aaf02ea2ac938d8cbaafdd2f59985c0604d648d7 Updated for new PR client jar.

Updated for new PR client jar.

Fix install.py --mcp-dir option. Fixes #204.

Update to 1.5.1 Pre-Release:
MinecraftForge/FML@9565529baf77de27ed8b75be2065da3ba08d16c8 Updated to latest MCP and Minecraft 1.5.1 Pre-release.
MinecraftForge/FML@a573faf92def5dd01af380b3ca86de877c1178a2 Someone derped up this function bad, revert name.

Someone derped up this function bad, revert name.

Updated to latest MCP and Minecraft 1.5.1 Pre-release.

Updated FML:
MinecraftForge/FML@3c346247e1c5de12d4548f6a99349157057e2de6 Fix NPE with CoreMods who do not have the new MCVersion annotation.

Fix NPE with CoreMods who do not have the new MCVersion annotation.

Change placement of ChunkDataEvent.Save call to apply before sending to worker thread.

Updated FML:
MinecraftForge/FML@5cc90f060caace93c0bf041d3cc37208f425f623 Fix the logger to treat newlines better, hopefully. Closes #199
MinecraftForge/FML@5e3af8ac0e18cfa3a92f9ba726ec1a6b55e87d97 Use the relaunch log, for class circularity safety.
MinecraftForge/FML@ce949e6099fe2a63ee6774acd6e55aa55d3b3673 Support simple mc version test in coremods, only effective through jar loading. Also, log some more data about the environment.

Support simple mc version test in coremods, only effective through
jar loading.
Also, log some more data about the environment.

Use the relaunch log, for class circularity safety.

Fix the logger to treat newlines better, hopefully. Closes #199

New TextureStitchEvents called before and after a TextureMap gathers and stitches textures together.
Also added a config option to diable the writing of resulting stitched textures to disc. Default disables the writing.

Updated FML:
MinecraftForge/FML@24022ab6ba79e4babb57fc0db893c23d4aec85bc Added comments to note FML-only methods
MinecraftForge/FML@8905237306230a33e2a3bab7a2b6f7a8b42d94e4 Merge pull request #200 from bspkrs/patch-2
MinecraftForge/FML@577b19c1cf12a354112e829fb5704c32fd6cd0a5 Fix potential NPE in class loading and add extra debug information.

Fix potential NPE in class loading and add extra debug information.

Fix placing of certian items on Redstone Blocks.

Fix equipment slots for items when right clicked, and dispensed using a dispensor.

Fix logic inversion that allowed SnowMen to create snow on hoppers.

Prevent pistons from generating snowballs.

Merge pull request #460 from LepkoQQ/master

Shaped Ore Recipe mirroring issue
Fix multipass item rendering so that it uses the right spritesheet for the item.

Fix ShapedOreRecipe checking mirrored recipes

Merge pull request #459 from ChildWalrus/sleep

Made some sleep-related fields public to allow fixing of sleeping bug in new dimensions
Fix Activator rails activating TNT carts, closes #458

Merge pull request #455 from Corax/patch-1

Update ForgeDummyContainer.java
Made WorldServer.allPlayersSleeping public

Made EntityPlayer.sleepTimer public

Sleep changes

Merge pull request #200 from bspkrs/patch-2

Added comments to note FML-only methods
Updated FML:
MinecraftForge/FML@c5d5f4e5164111c5ae63e8de7ce97cc583d73e6e Fix AllPublic access transformer not affecting methods. Should fix modloader compatibility

Fix AllPublic access transformer not affecting methods. Should fix modloader
compatibility

Update ForgeDummyContainer.java
Added comments to note FML-only methods
Updated FML:
MinecraftForge/FML@4762d4d8ef00bd789ffb6bccbd12f7478b07da62 Allocate more ram {typically 256 is defailt} to fermflower, should fix decomplication issues on OSX
MinecraftForge/FML@6370c242f0e1cb8ec80c7dccc1133cb0d0607bae OS X's python 2.6.1 has a bug in zipfile.extractall that makes it unzip directories as regular files. So switch to extract

OS X's python 2.6.1 has a bug in zipfile.extractall that makes it unzip directories as regular files. So switch to extract

Allocate more ram {typically 256 is defailt} to fermflower, should fix decomplication issues on OSX

Remove the block if TE errors.

Add config toggle to atempt to remove TileEntities and Entities that error during there update without fully crashing the server, use at your own risk. Closes #424

Updated FML:
MinecraftForge/FML@8f2dbf7046f52d836993edb946d7d310b399bf9d Fix up stupid derp in IMC code: actually reset the IMC list after each delivery. Fixes a bunch of mods. Sorry everyone.

Fix up stupid derp in IMC code: actually reset the IMC list after
each delivery. Fixes a bunch of mods. Sorry everyone.

Merge pull request #449 from iChun/patch-5

[Bugfix] One should not assume an item would use the item spritesheet.
Fix for nether quartz not generating in the nether, Closes #454

Fix RedstoneBlock power issues, Closes #452

Fix bug with rendering one too many passes for ItemEntities Closes #450

Deprecation Sweep in DungeonHooks and fixed wildcard in ChestGenHooks remove function.

[Bugfix] One should not assume an item would use the item spritesheet.

Item class has a func to return an int to use terrain.png or items.png. This makes forge take account of it.
Fix missed wildcard change in OreDictionary closes #448

Add call to EntityLiving when counting entities for Spawning Cap. Closes #447

Move the RenderWorldLastEvent back to before renderHand like it was in 1.4 Closes #444

Fix RenderItem to work with items that use the terrain texture map that aren't in the block ID range. Close #443

Fix crash when EnumHelper can't find $VALUES field, log info, and return gracefully.

Updated FML:
MinecraftForge/FML@23ea835fa7bc0cdb466d058814b5a0e0c67e8c9a Pass obfuscation status to coremods

Pass obfuscation status to coremods

Updated FML:
MinecraftForge/FML@d88db6c0cfd5484428b574889eae02d34535beae Fix up deep tree deobfuscation

Some tweaks to the liquid dictionary, to allow for canonical liquid stacks for things like rendering

Fix up deep tree deobfuscation

Updated FML:
MinecraftForge/FML@7b722bfcd6d4c6867d15492c293a455dfd50d272 Update MCP for latest PR silent update.
MinecraftForge/FML@c6dab815f4e036e25b8f56bef7b8ee63f838adb4 Missed joined.exc, must fix scripts.

Missed joined.exc, must fix scripts.

Update MCP for latest PR silent update.

Removed get/setTextureFile from Block, nolonger used.

Updated FML:
MinecraftForge/FML@a90504315e928915345c7b04972d912cdaa0bfdb Readjust size of mods button when Minecraft Realms button is enabled.

Readjust size of mods button when Minecraft Realms button is enabled.

Fix the oredictionary for the new recipe wildcard value of Short.MAX_VALUE.

Updated FML:
MinecraftForge/FML@3765ceb02d783ae5156976f3165bafdb6a3ddbb3 Update MCP, fixes the "broken texture packs" problem.

Update MCP, fixes the "broken texture packs" problem.

Updated FML:
MinecraftForge/FML@dab22f5b74f3f2a410e20583f811605dc8e3c05f Fix "0 mods" display when installed in forge.

Fix "0 mods" display when installed in forge.

Updated FML:
MinecraftForge/FML@179c504746910d4196eef3ee2d56f63cf585c983 Simplify logic in tick start/end
MinecraftForge/FML@29edd242cd7a1fadedf4fb874ea8bbd4e643bffa Fix coremods without a manifest crashing the game. Closes #181
MinecraftForge/FML@ac16845fc4661fa046a252eda7f9a9a847940189 Fix demo mode crash. Closes #187
MinecraftForge/FML@984291cee91f585a6f4300eedfed882c814843f8 Fix supertype parsing to handle null superclass (Hi Object!). Closes #160
MinecraftForge/FML@f6479299936f0f94cfc43210dd9dd44b8b5350ef Merge branch 'master' of github.com:Uristqwerty/FML
MinecraftForge/FML@b301e8e4c1877be246fd4f0b45085b70773d8f2b Change type of connection queue to a concurrent linked queue. Much more efficient, hopefully. Closes #189

Change type of connection queue to a concurrent linked queue. Much more efficient, hopefully. Closes #189

Merge branch 'master' of github.com:Uristqwerty/FML

Fix supertype parsing to handle null superclass (Hi Object!). Closes #160

Fix demo mode crash. Closes #187

Fix coremods without a manifest crashing the game. Closes #181

Updated FML:
MinecraftForge/FML@591e65fa1aa52d2a72dc527ad1c2ac53c8eb94c4 Revert "Use the reobfuscation maps in the reflection helper for field lookups: should help some reflection cases with the deobf."
MinecraftForge/FML@2a779ec3289f695b477ec6b0822a27801e2deba1 Try a different way of remapping the fields. Should work because it's userspace, not relauncher space
MinecraftForge/FML@ca2d8bd83475f37946b86cf6fabd8ff810f9c2bf Fix reflection helper: it needs to unmap the classname to find the field maps.

Fix reflection helper: it needs to unmap the classname to find the field maps.

Try a different way of remapping the fields. Should work because it's userspace, not relauncher space

Revert "Use the reobfuscation maps in the reflection helper for field lookups: should help some reflection cases with the deobf."

This reverts commit 485db6be2e6b54a9a523a2b06e0d886792b0826a.

Updated FML:
MinecraftForge/FML@485db6be2e6b54a9a523a2b06e0d886792b0826a Use the reobfuscation maps in the reflection helper for field lookups: should help some reflection cases with the deobf.

Use the reobfuscation maps in the reflection helper for field lookups: should help some reflection cases with the deobf.

Updated FML:
MinecraftForge/FML@25f3fcad4654d19637878bdfb2b70a9586fb3fc9 Fix up some relauncher stuff: the vanilla applet works now, as do other applets. Deobf data is resolveable for them too.

Fix up some relauncher stuff: the vanilla applet works now, as do other applets. Deobf data is resolveable for them too.

Updated FML:
MinecraftForge/FML@6bf7c9878cc959d5f5fa8ec0bf9d0d75037df882 Fixed srg name of minecraftDir for runtime deobf.

Fixed srg name of minecraftDir for runtime deobf.

Updated FML:
MinecraftForge/FML@95d0ff18cdca3b5a91b648c847c00f559f8ce6f2 Fix runtime deobfuscation for remapped inner classes

Fix runtime deobfuscation for remapped inner classes

Refresh patch

Updated FML:
MinecraftForge/FML@86a9c7d35953296f7c8bd3a2b1b43115ef0f9308 Fixup reobfusication of server code if present.
MinecraftForge/FML@8e7956397dd80902f7ca69c466e833047dfa5010 Just enable server side compile, and warn not to complain tous.
MinecraftForge/FML@889efc1c0a9216b55f6de275e4f4a279d977e60c Fixes GameRegistry.registerBlock
MinecraftForge/FML@fe1623a36a1bb8b0a046d833e896fd46d88898ef Merge pull request #195 from RainWarrior/snapshot15
MinecraftForge/FML@62f5adf8e21d59408af409a88b2c81757fd3c587 Revert "Fix modlist to use the new texture binding functions, i think"
MinecraftForge/FML@58ee06ea8edf508daa4ab3920790c0153cf6660d Some fixes for the snapshot
MinecraftForge/FML@368a2245ef0071b0b7a35d3bd78ab1ae379f8faf Merge branch 'snapshot15'
MinecraftForge/FML@1eba1dfdc00edf12ca3d8586dc342563218fc717 Fix accidental commands.patch overwrite
MinecraftForge/FML@ebdb166ec87e63503f0071e557cdb44629a0e0c2 Merge branch 'snapshot15'
MinecraftForge/FML@450dd8313c2e9e46d173bbd242f84d48266af7c8 Fix up some small things, merging into mainline
MinecraftForge/FML@1642bad402efe819f4e763bf4b460d8c04194849 Fix Multi-part entity children ID issue, mobs with custom spawning must deal with child ids themselves.

Fix Multi-part entity children ID issue, mobs with custom spawning must deal with child ids themselves.

Merge remote-tracking branch 'origin/snapshot15'

Fix up some small things, merging into mainline

Merge branch 'snapshot15'

Fix accidental commands.patch overwrite

Merge branch 'snapshot15'

Some fixes for the snapshot

Revert "Fix modlist to use the new texture binding functions, i think"

This reverts commit 48544db690bf213a322954b7bd39cb3a8ca59bb1.

Conflicts:
	client/cpw/mods/fml/client/GuiModList.java

Merge pull request #195 from RainWarrior/snapshot15

Fixes GameRegistry.registerBlock
Fixes GameRegistry.registerBlock

Fix reobf call.

Early define CrashReport classes to combat invalid crash details.

Updated FML:
MinecraftForge/FML@f1c6bdd57d41a938cb3326d509042f6842e42396 Support the MCP format of partial reobfuscation for portability. Ensure modloader-like compatibility
MinecraftForge/FML@0419b9d9751ade4497343aefaf2ca43703eb479a Update MCP info for latest

Update MCP info for latest

Support the MCP format of partial reobfuscation for portability. Ensure modloader-like compatibility

Deprecated Forge's ISidedInventroy, there is a vanilla solution. Added temporary config option to legacy furnace slot orientation.

Fix typos.

Updated to 1.5 Pre-release
Updated FML:
MinecraftForge/FML@2d98835db8c6a7665ef55117d60ab4318876836b Scala support! It's still primitive, I hope that people will like it. I do :)
MinecraftForge/FML@5bfaf7c1700191b6ed8f4752c9a95bf8c25323ef Global object registry, also, support the new itemblockwithmetadata constructor
MinecraftForge/FML@80a40c03e644840d827eb7d67ff97f6558eaa2e4 Update to MCP 1.5 and minecraft 1.5.
MinecraftForge/FML@b3e854a15d7c50b4967be8237df5fdace95a15ee Update for new MCP with srg reobf.

Update for new MCP with srg reobf.

Update to MCP 1.5 and minecraft 1.5.

Global object registry, also, support the new itemblockwithmetadata constructor

Scala support!
It's still primitive, I hope that people will like it. I do :)

Updated FML:
MinecraftForge/FML@e9ff699c2dcd787a3e0ebaa427c625a48de4c9fb Refresh the renderengine after modloading is complete. Should fix issues with out-of-place texture registration by mods.
MinecraftForge/FML@a723aa68606d57b0ee5bac8b1d1905abef440b54 Refresh copyright notices on everything
MinecraftForge/FML@c42a2101408b21799728c88e2d02c718c3b0dd36 Strip deprecated code
MinecraftForge/FML@6eeae8c49ff4359dc21c44eb73e4e043285cd8bf Fix up state transition derp when the server crashes with an error- it shouldn't double-derp
MinecraftForge/FML@81c6421f84c1bff359dfe927974e8730b348806a Tweak license text- any osi licensed project can use the asm transformer code

Clean up Access Transformer mapping data

Tweak license text- any osi licensed project can use the asm transformer code

Fix up state transition derp when the server crashes with an error- it shouldn't double-derp

Strip deprecated code

Refresh copyright notices on everything

Refresh the renderengine after modloading is complete. Should fix issues with out-of-place texture registration by mods.

Make release quit on compile error.

Fix compile error, forget to flush to disc.

Readd second render pass to TileEntities and Entities, patches were missed when merging in master branch. As note, CB can DIAF.

Add an Icon to the LiquidStack, for rendering the liquid in various ways

Updated FML:
MinecraftForge/FML@abe4f73a9a3158f6f9d1ea2334798f54a25817bf FIX massive performance issue with FML. Thanks to @sfPlayer1 for finding this epic derp on my part!

FIX massive performance issue with FML. Thanks to @sfPlayer1 for finding
this epic derp on my part!

let's do it right this time. Hmmm

Call stitcher for non-existent textures as well. Probably allows
for generated textures. Hmmm

Updated FML:
MinecraftForge/FML@debbdc00be8ea1a261cdff83785ddc7100419a74 Capture Minecraft logs into FML logging
MinecraftForge/FML@74fffc6fdc2eda8caa9a7feb0826d7babb84751a Update next render to 40

Fix ItemSeedFood respecting custom soils.

Removed erroring imports and update build function to die on errors.

New world event for controlling potential entity spawnlists. For #430

Update next render to 40

Capture Minecraft logs into FML logging

Add callback on TextureStitched to control texture loading.

Add helper functions for deling with custom TextureStitched

Fix animation location for textures with domains

Updated FML:
MinecraftForge/FML@aed2cc446ad8d5882890c5f218eb894ea7bd2577 Force file name encoding to UTF-8, caused different zips on different systems.

Force file name encoding to UTF-8, caused different zips on different systems.

Fixed new python changes.

Rework configuration, configs should now use Config.hasChanged to deterne if thehould call save(), also re-worked the saving to not use String.format as much.

Copy over some needed files for debugging.

Update submodule

Change FML module to read-only connection.

Update python scripts to reflect that FML is now a submodule. Delete updateasmdata as it's in /fml/ now. Build should work once again.

Remove window helper batch files.

Removed GNUWin32 files and uneeded files seince FML is now a submodule.

Added submodule changelog ganerator:

Updated FML:
MinecraftForge/FML@e74087ee430633475c3ca058e54e3ef242a9d6aa Ignore again, testing submodule.

Testing selective commit of submodule.

Ignore again, testing submodule.

Ignore this commit.

Add in simple texture management for mods using the stitcher. Scope with "{domain}:{texture}" to
get textures that are not at /textures/<item|block>/{texture}.png but /mods/{domain}/textures/<item|block>/{texture}.png
instead

Fix up patches for FML, also, add in FML as a submodule rather than a zip

Ignore deobf data

Force the joined.srg timestamp to zero- avoids annoying sha1 differences

Don't enforce signatures on minecraft classes

Update MCP URL for snapshot

Fix up runtime deobfuscation. Working well now.

Build, and use, MC versioned deobfuscation data

Merge branch 'runtimedeobf' into snapshot15

Add in build for deobf data zip file, update for official mcp 7.39

Updated Forge to s13w09c

Fix exc for renamed Behavior classes.

Actually remove classes from the csv when removed, and moved All EntityMinecart entities to net.minecraft.entity.item

Delete unneeded patch

Readd ignore for argo and bouncycastle, needed for our replacement to work properly.

Update FML to 1.5 snapshot 13w09c

Tweaks to runtime deobf

Update distribuited eclipse's classpath for updated libraries.

Not supposed to have debug stuff...

Sync up with FML, Will not run nativly as you need deobfusication_data.zip in your libs folder.
We have not setup the download for that yet, to make it yourself just zip joined.srg name it deobfusication_data.zip and put it in lib

Fix crash in GuiModList for mod logo files, logo is not rendering for unknow reason.

Fix bug in rename_vars where certian items would fail to be renamed.

Merge branch 'master' into snapshot15

Conflicts:
	fml-src-1.4.7-4.7.22.539-master.zip
	fml-src-1.4.7-4.7.35.556-master.zip
	fml-src-13w02b-4.99.16.541-snapshot15.zip

Merge commit '695b080197bd577cc34fe6dbc72b74f4a74b2d5c' into snapshot15
Testing cherry picking.

Just enable server side compile, and warn not to cmplain to us.

Fixup reobfusication of server code if present.

Tweak IASM hook api. You can return multiple classes now.

Merge branch 'runtimedeobf' into snapshot15

Change readFully to actually read a bunch of bytes at once now. Thanks to nallar and aartbluestoke for the suggestion to
revisit this..

Clean up more junk

Update libs for 1.5. Lots of new libs.

Fix renderengine patch *sigh*

Merge branch 'master' into snapshot15

Conflicts:
	patches/minecraft/net/minecraft/client/renderer/RenderEngine.java.patch

Merge branch 'master' into snapshot15

Conflicts:
	client/cpw/mods/fml/client/TextureFXManager.java

Fix TESR culling for beacons, and implement a good enough measure for Chests.

Bump version to 6.6.2, declaring Forge for MC 1.4.7 feature complete, as 1.5 is on the horizon, only bug fixes from this point on. Unless something major happens on Mojang's end.

Add water and lava to liquid dictionary by default, closes #419

Store the glMultiTexCoord lightmap for later use with glDrawArrays closes #406

Added unload event for client worlds Closes #405

WorldGen*Trees shoud not respect custom soils. Closes #355

ItemStack sensitive versions of Item.getPotionEffect and Item.isPotionIngredient Closes #321

clarify what the size is measured in for the dormant chunk cache. -.-

Fix movement speed check, closes #420

Change usage of ketSet/get to entrySet in OreDictionary, closes #422

Fixed entity colision above max world height, and below 0. Closes #400

Disable automatic equiti of pcke dup items for players, and fixed index issues in Player.setCurrentItemOrArmor.

Merge pull request #188 from immibis/master

Console log thread should be a daemon thread.
Console log thread should be a daemon thread.

Update FML to 556:
b6d6f235 Fix sprite map issue.
1158aa46 Fix Language Registry, closes #FML 163
50ce6fb3 Option to disable renaming for srgnames.

Fix sprite map issue.

Merge branch 'master' into runtimedeobf

Fix Language Registry, closes #163

Fix Language Registry, closes #163

Merge branch 'master' into runtimedeobf

Jenkins needs this script, *pokes Overmind* -.-

Fix profiler issue with RenderGlobal patch. Closes #414

Fix EventTransformer throwing an NPE when transforming a class that doesn't exist. Closes #413

Fix fortune modifier always passed as 0 to idDropped closes #412

Fixes comparison for items in creative inventory, closes #411

Added a hook into SlotArmor so Items can control if they are classified as a Armor type. Closes #408

Add item frame transformations to the EntityItem render helper Closes #407

Made LiquidStack.isLiquidEqual(ItemStack) properly check the contained liquid, in addition to obvious id/meta closes #399 and closes #403

Kill .sh wrappers until someone writes more robust versions, closes #392 and closes #402

Actually use the line parameter in ServerChatEvent, closes #401

Kill generated timestamp in config files, if you want to retreive this information, usethe file's modified time. Closes #404

Option to disable renaming for srgnames.

Fix ServerBrand retriever- forge is now forge,fml!

Update FML: cd96718
cd96718 Fix HD mob skins, FINALLY!!! Stupid eyes are stupid.

Fix HD mob skins, FINALLY!!!
Stupid eyes are stupid.

Remove the single use interface ITickingArmor, and apply to Item directly.

Fix possible null case for collision bounding box.

Fix TESR rendering for double chests

Merge branch 'TESRculling'

Add in "armor ticking"- implement the interface and the armor piece will tick.

Update FML:22dbe41
22dbe41 Fix up mistake that broke all modloading. Nice.

Fix up mistake that broke all modloading. Nice.

Fix some class naming and packaging issues, pending an MCP update
for the same

Update for MCP 7.34 and MC 13w05b

MCP compilation works

Update FML:549b6fd
549b6fd IMC tweaks: runtimeMessages now work (thanks for all that testing for this much requested feature!) and IMCEvent will no longer rem
9fafdc1 More logging tweaks. You can probably configure individual mod log files if you wish now
f169f7c A log of logging cleanup. FML will now read logging.properties to configure logging channels a couple of times during startup. You
3ac891f Try and handle "death on startup" a bit cleaner
2dc0189 Deprecate the old GUI ticktype. They're dead and have been for some time.
dd98784 Tweak a method signature
1c9a510 Add parameters to FML install to enable/disable certian aspects. Applying patches, running transformer/merger, and decompiling serv
1bd6847 Fix up packages.csv ordering for easier diffing

Fix small derp in TE

IMC tweaks: runtimeMessages now work (thanks for all that testing for this much requested feature!)
and IMCEvent will no longer remove messages if no one gets them, so you can do
just manual runtime polling, if you wish.

More logging tweaks. You can probably configure individual mod log files if you wish now

A log of logging cleanup. FML will now read logging.properties to configure logging channels a couple of times during startup.
You should be able to filter a lot of messages based on things like modid and certain FML related features that can be noisy
like item tracking.
Should close #175

Merge branch 'master' into TESRculling

Fix initalization issue with the clamping threshold config value.  And remove vanilla console spam related to it.

Change WorldServer.allPlayersSleeping to public, and remove the SideOnly annotation on EntityPlayer.getSleepTimer() Closes #393

Change access of upper and lower chest fields of InventoryLargeChest to public. Closes #387

Added catch to TileEntityChestRenderer for potential crash when modders do bad things -.- Closes #389

Rework canSilkHarvest hook to try and honor vanilla overrides, should close #391

Added input getters for Ore recipies, and javadoc warning for modders, #390

Add DimensionManager.unregisterProviderType for PR #388

Fixup a resource leak warning.

Forge Additions: Exposed ChunkCache.worldObj to public PR #383

Moved warning logic down, so that no more tickets are isues if the mod is over it's alotment. Fixes #378

Final part of the deobfuscation data setup- fields are now deobfuscated as well.
All that remains, is to figure out what and how to distribute the deobfuscation data itself.

Read the joined.srg file directly from lib/deobfuscation_data.zip now. Still debating distribution method.

Now actually works for mods, somewhat. It currently generates access violations for
ModLoader mods that presume access to fields that are not actually accessible from
a different package.

Method deobfuscation now works

Working to read class names and remap them at runtime.

First draft runtime deobf

Try and handle "death on startup" a bit cleaner

We try and log a message if we detect a world leak: it's probably not infallible, but it should
help mod developers- if you see this when testing your mod with, say, mystcraft, you're probably
keeping a hold of an invalid handle to the World (either directly, or indirectly via Entity or TileEntity)
and you should look to refactor to wrap those handles in WeakReferences

Add in a mechanism for explicit subclassing of WeightedRandomChestItem to allow for
generational style chest content generation rather than static. Cleans up some old code nicely

Bump the revision number for the TESR and renderpass changes

Merge branch 'renderpass' of https://github.com/Chicken-Bones/MinecraftForge into TESRculling

Conflicts:
	patches/minecraft/net/minecraft/client/renderer/RenderGlobal.java.patch
	patches/minecraft/net/minecraft/entity/Entity.java.patch
	patches/minecraft/net/minecraft/tileentity/TileEntity.java.patch

Add in TESR culling, and a new TileEntity method to allow for differential sizing of the
TESR view culling vs the TE collision bounding box (the former defaults to the latter)
Checked into a branch because it's likely to break expanded TileEntities.

Fix NPE causing issue with the cache. Derpy derp.

Fix a potential problem with "Entity already added" when using the dormant
chunk cache capability. The entities in the dormant chunk cache will get new
IDs prior to the cached chunk returning.

Deprecate the old GUI ticktype. They're dead and have been for some time.

Tweak a method signature

Add parameters to FML install to enable/disable certian aspects. Applying patches, running transformer/merger, and decompiling server.

Attempt to fix a possible NPE in the face of ChickenBones' hackery. ChickenBones. stop it!

Merge remote-tracking branch 'origin/master' into snapshot15 and fix patches

Conflicts:
	fml-src-1.4.7-4.7.22.539-master.zip
	fml-src-1.4.7-4.7.4.520-master.zip
	fml-src-13w02b-4.99.16.541-snapshot15.zip
	patches/minecraft/net/minecraft/client/renderer/entity/RenderItem.java.patch
	patches/minecraft/net/minecraft/entity/item/EntityItem.java.patch
	patches/minecraft/net/minecraft/entity/item/EntityMinecart.java.patch
	patches/minecraft/net/minecraft/entity/player/EntityPlayerMP.java.patch
	patches/minecraft/net/minecraft/item/crafting/RecipeFireworks.java.patch
	patches/minecraft/net/minecraft/server/gui/GuiStatsComponent.java.patch
	patches/minecraft/net/minecraft/server/management/PlayerInstance.java.patch
	patches/minecraft/net/minecraft/server/management/ServerConfigurationManager.java.patch
	patches/minecraft/net/minecraft/world/World.java.patch
	patches/minecraft/net/minecraft/world/gen/feature/WorldGenDungeons.java.patch
	patches/minecraft/net/minecraft/world/gen/structure/ComponentMineshaftCorridor.java.patch
	patches/minecraft/net/minecraft/world/gen/structure/ComponentScatteredFeatureDesertPyramid.java.patch

Fix a couple of forge patches

Update FML: d075daf
d075daf Merge branch 'master' into snapshot15 Fix up compilation and patching errors
1bd6847 Fix up packages.csv ordering for easier diffing
dd832f2 Update for MCP7.30c - fixes redstone rendering issues
aebf6eb Add in a registry method to allow for alternative TileEntity names- they will be used to support loading maps containing the older definiti
8921cfe Remember to add the new patches!
cd67596 The "ServerStarting" event should now properly crash the server if it fails, so the client will properly exit. Also, added in a "pre-server
e1c6630 Javadoc cleanup
5ce4e31 Fix breaking change
a99c488 Merge branch 'patch-1' of https://github.com/bspkrs/FML into gh-updates
94282c5 Merge branch 'FMLLogFormatter' of https://github.com/donington/FML into gh-updates
7ad8529 Update MCP to MCP7.26a and refresh MCP names
15534ed Update address of the FML repository to the new location in all the files
aa822e3 Fix logical error in comment text
a14ab91 Update license text to make clear that FML is not a way to sidestep MCP licensing.
0165742 Fix mcp conf md5 signatures for the snapshot
26a5b31 FMLLogFormatter: dynamic log level name

Merge branch 'master' into snapshot15
Fix up compilation and patching errors

Conflicts:
	common/cpw/mods/fml/common/registry/GameRegistry.java
	conf/joined.srg
	conf/params.csv
	conf/version.cfg
	patches/minecraft/net/minecraft/server/dedicated/DedicatedServer.java.patch

Fix up packages.csv ordering for easier diffing

Update for MCP7.30c - fixes redstone rendering issues

Update FML:aebf6eb
aebf6eb Add in a registry method to allow for alternative TileEntity names- they will be used to support loading maps containing the older definiti

Add in a registry method to allow for alternative TileEntity names- they will be used to support
loading maps containing the older definitions.

Gave entities and tile entities access to the second render pass for translucency.

Change DimensionManager.getCurrentSaveRootDirectory() to try and work even for the new server about to start event

Update FML:8921cfe
8921cfe Remember to add the new patches!
cd67596 The "ServerStarting" event should now properly crash the server if it fails, so the client will properly exit. A

Remember to add the new patches!

The "ServerStarting" event should now properly crash the server if it fails,
so the client will properly exit. Also, added in a "pre-server-start" event
that fires before the worlds are loaded for a save, just for you immibis.

Some javadoc fixes

Javadoc cleanup

Add in patch to change how playerinstance sends TE chunk updates. It should always send just the TEs
that changed now, and not "ALL" TEs. Also, added configuration value to change the 64 threshold to a
configurable number

Update FML: 5ce4e31
5ce4e31 Fix breaking change

Fix breaking change

Merge branch 'worldtype_customize' of https://github.com/ExtrabiomesXL/forge into gh-updates

Merge branch 'master' of https://github.com/CovertJaguar/MinecraftForge into gh-updates

Merge part of PR #375 related to ChunkEvent.Load for the client side

Update FML: a99c488
a99c488 Merge branch 'patch-1' of https://github.com/bspkrs/FML into gh-updates
94282c5 Merge branch 'FMLLogFormatter' of https://github.com/donington/FML into gh-updates
aa822e3 Fix logical error in comment text
26a5b31 FMLLogFormatter: dynamic log level name

Merge branch 'patch-1' of https://github.com/bspkrs/FML into gh-updates

Merge branch 'FMLLogFormatter' of https://github.com/donington/FML into gh-updates

Update licencing information to make clear that forge is allowed to redistribute and automatically
download parts of MCP, but this permission is not transitive to people distributing MinecraftForge
source independently of the MinecraftForge project.

Update MCP to 7.26a and FML: 7ad8529
7ad8529 Update MCP to MCP7.26a and refresh MCP names
15534ed Update address of the FML repository to the new location in all the files
a14ab91 Update license text to make clear that FML is not a way to sidestep MCP licensing.

Update MCP to MCP7.26a and refresh MCP names

Update address of the FML repository to the new location in all the files

Fixed render passes for EntityItems

Should be < instead of <=

Fix logical error in comment text
Update license text to make clear that FML is not a way to sidestep
MCP licensing.

Bump major and minor version numbers to mark 1.5, it's gunna break everything. Should be a compileable 1.5 build.

Fix check in getItem() to allow lowest item ID #361

Update FML:
New scripts for signing jars, and repackging source folders.
Fix LanguageRegistry loading files in UTF-8 format. loadLocalization should work for non-xml in all languages now (assumes UTF-8)
Fix incorrect end length calculation. Closes #161 Thanks BStramke!

Merge pull request #370 from CovertJaguar/snapshot15

MCL Update
Fix mcp conf md5 signatures for the snapshot

MCL Update

Removed some dead code, We don't bind custom tessellators

First patches updae to 1.5, Many rendeirng related changes, most notibly removed Item/Block's getTextureFile() functions.

Updated FML and at config for 1.5 snapshot

Update patche for jad-style names.

FMLLogFormatter: dynamic log level name

FMLLogFormatter now uses getLocalizedName or getName for log level name

Changes to be committed:
	modified:   common/cpw/mods/fml/relauncher/FMLLogFormatter.java

Temporary hosting

Another packaging update. I think we're done now.

Fix modlist to use the new texture binding functions, i think

A couple of packaging tweaks, clean up more junk. It may come back but for now it's gone

Delete old patches not needed anymore

Initial patch update for snapshot

Initial setup for snapshot- the client compiles, but patches fail to apply.

Updated patches for new JAD style names.

FML will now rename local variables to have JAD-style names instead of FernFlower var## names. New script to do this, to allow for modders to run it over there own code: python rename_vars.py -mcp [folders to rename]...

Fix incorrect end length calculation. Closes #161 Thanks BStramke!

Fix LanguageRegistry loading files in UTF-8 format. loadLocalization should work for non-xml in
all languages now (assumes UTF-8)

Merge pull request #158 from CovertJaguar/patch-2

Added an accessor for villagers
Added an accessor for villagers
New python script to update java files for new package names. Usage: paython update_packages.py --mcp-dir <mcp folder> [Folders To Repackage]

New python script for signing partial jar files. See comments inside for details.

Added event hooks to control to allow mod control of mob spawning. PR: #337
Deprecated LivingSpecialSpawnEvent in favor of new LivingSpawnEvent.SpecialSpawn

Fixed incorrect lighting in some cases. Closes issue #349

Added getter for Metadata smelting list, because, why not.. PR: #352

Some small code cleanups.

Fixed issue where ChunkPriderEvent.InitNoiseField used the wrong sizeY value.

Fix issue where dungeon loot table had wrong values.

Update FML:6f1b762
6f1b762 Move server stopped *after* the server has actually stopped. *sigh*

Move server stopped *after* the server has actually stopped. *sigh*

Update FML:d9bfb29
d9bfb29 Add in a "server stopped" event

Add in a "server stopped" event

Attempt to resolve the entity concurrency issue, by simply deferring unload
to the next tick

Update FML:6fc7bc4
6fc7bc4 Add in some classloader debugging information: use fml.debugClassLoading=true as a system property to track down prob

Add in some classloader debugging information: use fml.debugClassLoading=true as a system property
to track down problems with classes not being found or loading erratically.

Fix noisy exception logging

Fix a missed patch and cleaned up other patches
Rollback a method name change that breaks a lot of mods
Update FML: fb701cd
fb701cd Revert MCP name change for canConnectRedstone - it conflicts with a forge method of the same name and breaks 1

Revert MCP name change for canConnectRedstone - it conflicts with a forge method of the same name and breaks 1.4.6 to 1.4.7 compatibility

Update for MC 1.4.7
Update FML: f7cc50b

Update for MC 1.4.7

Attempt a fix for the new chunk compression changes.

Update FML:1a232cf
1a232cf Fix multiple GUI containers for ML containers. Sorry ultimatechest that this fix took so long, a bug report at
853f54b Log if there's a problem reading the class bytes

Fix multiple GUI containers for ML containers. Sorry ultimatechest that
this fix took so long, a bug report at github.com/cpw/FML would help,
next time ;)

Log if there's a problem reading the class bytes

Fix mobs spawning on inverted slabs/stairs.

Add ability to WorldTypes to display the 'Customize' button and react to it

Fixed order <.< you saw nothing.

Use nanoTime instead of currentTimeMillis for potential performance increase.

Fixed typo in dungeon loot

Fixed EntityMinecard missed patch, Issue #338

Fixed issue with Efficancy enchatment when connected to vanilla servers.

Merge branch 'Uristqwerty-master'

Merge branch 'master' of https://github.com/Uristqwerty/MinecraftForge into Uristqwerty-master

Protect deflation with a simple semaphore. Should close #336

Update FML: Fix NPE in fingerprint loading, and pass expectged fingerprint to FMLFingerprintViolationEvent

Fix NPE in fingerprint loading, and pass expectged fingerprint to FMLFingerprintViolationEvent

Force parent ListenerListInsts to rebuild.

Without this change, it is possible (and, in fact, nearly guaranteed) for lists to rebuild endlessly if a parent list is marked as needing a rebuild but never actually read. This change forces the parent list(s) to rebuild as well, resulting in a significant performance increase and smoother framerate due to greatly reduced GC activity.

Update FML: 7e6456d
7e6456d Fix a message delivery issue in IMC
664ebda Some tweaks for signing and ID matching

Fix a message delivery issue in IMC

Fixes a vanilla bug where the player view would dip when stepping between certain blocks
https://mojang.atlassian.net/browse/MC-1594
Issue #318, let me know if you notice any issue.

Fixed parameter ordering u.u

Re-write/Deprecated DungeonHooks loot tables, now uses ChestGenHooks like the rest of the world gen. Also fixes issue #330 by adding in enchanted books.

Should be API compatible.

Move chunk compression to the network thread in Packet 51 and 56

This will reduce the server load considerably by doing the chunk data compression in writePacketData, which will be run from the network thread.

The chunk compression can easily use 1/4th of the overall server thread CPU time if someone is exploring much, especially when moving quickly (e.g. with quantum leggings).

Player, this is how it's properly done.

Explicitly check if useItem is not denied, allows for denying the item without denying the block

Fix missed patch in EntityMinecart, #334

Delete unneeded patch.

Some tweaks for signing and ID matching

Some access transformations to allow mystcraft to work again. Closes #331

Fix Fireworks to always work in SMP

Fix up enchantment at the enchanting table vs via a book. Adds in a method
that previously exists under a new name: canApplyAtEnchantingTable()
to determine enchantments that can apply at the enchanting table (a smaller
subset of all possible enchantments for an item, now). Also, add your
enchantments to the anvil book application list, if neccessary.

Tweak packet56 to see if this resolves the apparent worldgen derpiness

Server side only item callback: allow a held item to decide if it wants to pass sneak-clicks through
to a block, or not. Defaults false- the same as the new vanilla behaviour (sneak clicks with an item
in hand don't activateBlock anymore).

Move another patch up a bit - should actually close #329

Add IPlantable to itemseedfood. Potato and carrot support!

Fixed cpw's derp in the PlayerInteractEvent logic.

Updated NetClientHandler for onConnectionClosed placement fix.

Update FML:
Fixed issue with users who don't have the JDK installed in there path
MCP will now output bfusicated files with windows reserved names to _name.class and FML will prioritize those names.
Fixed placement of onConnectionClosed callback

Remove unneeded file

Fixed placement of onConnectionClosed callback.

Fix ItemInWorldManager so that itemUseFirst works, and the playerinteractevent works. Minor patching mis hit. Apologies.

OK. AT the right thing, and add in a call to always get the right thing. Clean up patch fuzz too.

Access Transform a couple of methods

MCP will reobf classes with reserved names in windows to a legal file name. And FML will try to read these classes over the default ones.

Output obfed files with reserved windows names to _NAME.class

Merge remote-tracking branch 'origin/master'

Fixe BiomeDecorator AT entry.

Add quotes around javac command.

Drop the item in onBlockHarvested, not breakBlock

Fix up block drops for skulls and cocoa

And fix up the other equals

Fix comparing ItemStack tags for equality

Update FML: 40e57a2
40e57a2 Update MCP to newer version Fix fingerprint fire

Update MCP to newer version
Fix fingerprint fire

Fix accidentally removed not-deprecated methods.

Update FML: d604e44
d604e44 InterModComms now supports a runtime polling based model for inter-mod comms at runtime. Deprecate method that shouldn't be used. COPY it's content to your mod. Don't CALL it.
8b7778c Don't be as alarming about item overwrites.

InterModComms now supports a runtime polling based model for inter-mod comms at
runtime.
Deprecate method that shouldn't be used. COPY it's content to your mod. Don't CALL it.

Fix binding the texture for multiple render passes. Thanks mdiyo! Closes #320

Allow RenderItem to be easily overridden for things that need to render entityitems. IronChest, BuildCraft, RP2, whatever...

Fixed items dieing improperly due to new EntityItem sync changes, also made items render offset when rendered in 3d.

Fix RenderItem so that forge textures load for it

Don't be as alarming about item overwrites.

Updated FML:
Fixes startclient/startserver

Added configuration file which allows modids to ignore ID validation checking. IT WILL CRASH YOUR GAME in 99.999% of cases.

Immibis is a whingy ass. And TinyTimRob too. Now STFU and GTFO. closes fml/#510 for ever.

Removed all functions marked as deperacted for the new MC version

Added configuration file which allows modids to ignore ID validation checking. IT WILL CRASH YOUR GAME in 99.999% of cases.
Immibis is a whingy ass. And TinyTimRob too. Now STFU and GTFO. closes #510 for ever.

Dixed ev eclipse worksapce, now references BC.

Added client src folder to classpath for startclient/startserver.

Removed hardcoded additions

Try and print error while signing jar

Added jar signing to forge, we sign cpw/* and net/minecraftforge/*

Inital update to 1.4.6, Version bumped to 6.5

Update to MC 1.4.6

Fix build script

more 1.4.6 tweaks

More work

Merge branch 'securityupdate'

Merge branch 'master' into securityupdate

Update FML: e98c311
e98c311 Fix up handling null names. *sigh*

Fix up handling null names. *sigh*

Update FML: 293edb3
293edb3 Some tweaks to item identification. The GameRegistry methods are deprecated to encourage you to use the new named ones instead. These will force a name on the item/block, allowing for stronger matching t
9266ff3 Updated MCP download mirriors upon Searge's request.
31695d5 Fix var name messup
bfb3020 Update released eclipse project to link BouncyCastle
22a88ea Change ID management slightly. IDs are tracked by block type for itemblock items now. This means servers will need to update. Also, ordinal rearrangements within a mod will no longer trigger server disco

Some tweaks to item identification. The GameRegistry methods are deprecated
to encourage you to use the new named ones instead. These will force a
name on the item/block, allowing for stronger matching than "sequential guessing"

More fixes

Remove erronious double call to PlayerDestroyItemEvent

Make PlaySoundAtEntityEvent fire for players as well

Updated MCP download mirriors upon Searge's request.

Move Side and SideOnly to relauncher package

Fix newline fun

More stuff for the thingy

Remove old NEI/CCC compatibility code and other classloading tweaks

Simplify logic in tick start/end

Change the EnumSet equivalent of "A &= ~ new(~B)" to "A &= B".
This eliminates the need for one temporary object in a frequently called loop, and reduces the number of methods that need to be invoked.

Update FML to fix a typo

Fix var name messup

Update FML: Fixed the eclipse workspace to reference BouncyCastle library.

Update AT for repackage

Update patches for repackage.

Update released eclipse project to link BouncyCastle

Updated python scripts for removal of common folder

Update FML:
Minecraft is now decompiled into sane package names.
Got rid of the src/common folder as the only folder that exists is src/mincraft, because the client and server codebase is merged.
ID Map generation/validation fixes

Manual import fixes

Fixup workspace for BC replacement

Automatically resolved imports.

Bump version to 6.4.2 to mark the merge of TerrainGen branch.

Merge branch 'terraingen'

Derp, imported the repackaged names not old names.

Update FML:
2f34290e: Fix possible escape leakage..
83deece6: Change ID management slightly. IDs are tracked by block type for ItemBlock items now. This means servers will need to update.

Also, ordinal rearrangements within a mod will no longer trigger server disconnection, though a warning will still be logged.

Change ID management slightly. IDs are tracked by block type for itemblock items now. This means servers will need to update.
Also, ordinal rearrangements within a mod will no longer trigger server disconnection, though a warning will still be logged.

Fix possible escape leakage..

More robust eclipse workspace replacement

Update readme to reflect the fact that we now download MCP.

Make BlockButton.sensible protected and non-final

Expose BiomeDecorator fields for custom Biome information, Issue: #239

Fix shouldRiderSit() to properly determine if rider is sitting.

Fixes crash when mods add TreeMaps to the Configuration map, thanks AtomicStryker, PR: #282

Fix type in ForgeChunkManager.ticketCountAvaILableFor, thanks iChun PR: #285

Creative GUI will now remember what tab page you were on, thanks Matchlighter PR #290

Pistons now respect world height a little better, for PR #286, will review Rotation event later.

New TileEntity function to determine if the TE should be destroied when Block/Meta changes, For Issue #300

Add CloudRenderer for PR #304

Add .DS_Store to the gitignore for mac users

Moved check if map cursor should 'spin' and which world a player respawns in to WorldProvider for PR #308

Made BlockButton.func_82535_o overrideable for issue #311

Made GuiContainer.drawSlotInventory overrideable for issue #312

Fix ForgeDirection.ROTATION_MATRIX for issue #313

Kill decompile if astyle is not found and set execution bits on mcp .sh files and astyle-osx

Fix for FML Fixes eclipse workspace, now sets execution bits on astyle-osx, and mcp .sh files. Also now kills install if astyle is not found.

Change to download bouncy castle as well. We also finally properly use the downloaded libs
even in vanilla code!

Remove extraneous patch file

Merge branch 'repackage'

Conflicts:
	build.xml
	client/cpw/mods/fml/client/FMLClientHandler.java
	client/cpw/mods/fml/client/GuiIdMismatchScreen.java
	common/cpw/mods/fml/common/FMLCommonHandler.java
	common/cpw/mods/fml/common/IFMLSidedHandler.java
	common/cpw/mods/fml/common/network/ModIdMapPacket.java
	common/cpw/mods/fml/common/network/ModListResponsePacket.java
	common/cpw/mods/fml/common/registry/GameData.java
	common/cpw/mods/fml/common/registry/GameRegistry.java
	common/cpw/mods/fml/common/registry/ItemData.java
	common/cpw/mods/fml/common/registry/LanguageRegistry.java
	common/cpw/mods/fml/server/FMLServerHandler.java
	install/fml.py
	patches/minecraft/net/minecraft/client/Minecraft.java.patch
	patches/minecraft/net/minecraft/server/MinecraftServer.java.patch
	patches/minecraft/net/minecraft/world/storage/SaveHandler.java.patch

Merge branch 'repackage' of github.com:cpw/FML into repackage

Conflicts:
	common/cpw/mods/fml/common/registry/GameData.java

Merge pull request #145 from pahimar/master

More logging of loading files in LanguageRegistry
Update common/cpw/mods/fml/common/registry/LanguageRegistry.java

Add in logging of what file failed to be loaded
Updated FML to 486:
02b54ca8: Add a modid on the mods list, should make it easier to do things like forge chunkloading config
70670f2f: Fix build eclipse extractor task
b9fa3fc9: Add in storage, detection and validation of the ItemID array between client and server
5e5d8206: Fixing id map generation - should validate correctly now
f9fc06a8: Remade python dist as 32-bit.
93d47a1c: Reenabled replacement of the eclipse folder.

Fixed install --mcp-dir

Fixed release -skipchangelog

Fix patches, rebased with HEAD

Remade python dist as 32-bit.

Fixing id map generation - should validate correctly now

Reenabled replacement of the eclipse folder.

Remade python dist as 32-bit.

Fixing id map generation - should validate correctly now

Fix up idmap code

And finally, fix up the release install script to have a parameter to specity the MCP directory.

Fix Forge install script to use python shipped with FML.

Push didn't get all of eclipse....

Cleaned up eclipse workspace and moved it to a zip file.
Setup will extract it if it doesn't already exist.

Some derp protection in the workspace copy.

Removed remaining references to src/common
Fixed eclipse workspace replacemnt on source dist
Cleanup some outputs

Updated build script to not use the mcp common directory as it doesn't exist anymore.

Fished moving out the rest of the default packaged classes to aproperiate packages. Updated patches and code to reflect.

Updated the update_packages script to support different mcp locations

Update fml_marker.cfg, Minecraft is now runnable!

Update all imports for repackaging. Branch is compileable.

Some stragler patches

Updated patches to new packages.

Give new classes a distinct package to be moved from.

Fixed 0.tree to actually refresh the workspace.

Remerged branch, and updated dev eclipse workspace.

Add in storage, detection and validation of the ItemID array between client and server
and also for world saves. May help with item configuration issues.

Add a modid on the mods list, should make it easier to do things like forge chunkloading config

Fix build eclipse extractor task

Fix RenderBlocks patch, touch branch

For @XCompWiz, added a hook to allow mods to dynamically change the color that water is rendered.

Readded unchanged version

Removed unchanged file

Added terrain gen events
Added biome color events for @XCompWiz

Fix release script for new forge job name. Add in skip changelog option for local builds

Remove MCP from released src distro.. whops.

Add in storage, detection and validation of the ItemID array between client and server
and also for world saves. May help with item configuration issues.

Fix static method, closes #271
Don't spam the log if a mod requests a ticket beyond their maximum. A single message is fine.

Add Chunk Watch and UnWatch events.

fix List configs

Fix typo in chunkmanager config

Tweak release.py script: HEAD==master in general

Update FML: 26a2ef5
26a2ef5 Add a modid on the mods list, should make it easier to do things like fo
b4e3490 Fix build eclipse extractor task
828341f Fix typo
7a8dae5 Try and make branch non-derpy
d3c0e1f Try defaulting branch differently
9c77d3f Remove old eclipse workspace and ship/extract as a zip file (use ant set
6371e9b Assume Forge is the parent directory when checking for AT configs.
516954e Name both zips the same format
1151d5c Last part of branch name only please
25f1dda Try and get a valid branch name on jenkins
39a146f Clean up build.xml script- support outputting a branched jar file
037dcae Small derp in install.py
01d6da3 Try marking python as binary.
8b26659 FML will now attempt to download MCP as part of the install process Now
42b3e6a Windows Python distrabution created using py2exe, thanks Fesh0r for the
e709ab8 Marked more spots in gui/items bitmask as being free.

Add a modid on the mods list, should make it easier to do things like forge chunkloading config

Fix build eclipse extractor task

Fix issue with DimensionManager.shouldLoadSpawn

Fix typo

Merge branch 'master' into repackage

Conflicts:
	eclipse/Clean/.classpath
	eclipse/Clean/.project
	eclipse/FML/.classpath
	eclipse/FML/.project
	install/fml.py

Try and make branch non-derpy

Try defaulting branch differently

Update python files to add support for specifying MCP directory and FML downloading MCP on the fly.

Update FML, now includes python, and will download MCP for you

Add wget and unzip from GnuWin32 for use in the setup scripts.

Remove old eclipse workspace and ship/extract as a zip file (use ant setupenvironment)
Fix up install.py for forge multibranch changes

Assume Forge is the parent directory when checking for AT configs.

Merge branch 'master' into repackage

Conflicts:
	patches/minecraft/net/minecraft/client/EntityFX.java.patch

Name both zips the same format

Last part of branch name only please

Try and get a valid branch name on jenkins

Clean up build.xml script- support outputting a branched jar file

Small derp in install.py

Try marking python as binary.

FML will now attempt to download MCP as part of the install process
Now shipping a py2exe version of python for windows.
Linux/Macs should come with python pre-installed so they do not have a distrabution here.

Windows Python distrabution created using py2exe, thanks Fesh0r for the script.

Fix #289

Add in some additional ticket loading callbacks for ChickenBones. Closes #284
Add in a call to determine if there are possible chunktickets for a world. This should let
Mystcraft and other dynamic world generating mods check if they should immediately load
a world based on existing chunk tickets.

Fix issue where non-BlockContainer TEs would not be removed properly.

Fix issue where worlds were potentially unloaded improperly on server shutdown.

Fix logic issue in ForgeChunkManager.ticketCountAvaliableFor(username) PR

Small change to fix loading configs.

Added section of the EntityData NBT that will be persisted for players across respawning.

Fix potential NPE in EntityJoin handler and print warning.

Exposed some ChunkLoader information for PR #278

Small tweak to config to use Treemap

Merge pull request #269 from XCompWiz/chunkcon

Adds a more intelligent chunk constructor
Fixed AIOOB issue with new sanity check in getBlock

Fix potential NPE in saving a property that didn't define a type.

Added new functions to the Config class to allow for specification of comments when getting properties.
Added new getTerrainBlock whihc will limit the resuling ID to < 256, useful for world gen.
Calls to getBlock with IDs less then 256 will be assigned values above 256 {Thus freeing up terrain gen slots}
Made ConfigCategory implement Map<String, Propertery> should fix compatibility with most mods that broke two builds ago.

Merge pull request #277 from Xhamolk/patch-1

OreDictionary addition: getOreID(ItemStack)
New nested configuration category support, for PR #258

Fixed random chest items not generating to there max stack sizes.

Fixed issue with abandoned chunks.

OreDictionary addition: getOreID(ItemStack)

Allow getting the oreID from a ItemStack, as an alternative from getOreID(String).

Now is easier to exchange items for their equivalencies through the OreDictionary.
Merge pull request #274 from iChun/patch-2

Add check that Entity saves to disk before saving entity to saved chunkloading data.
Add check that Entity saves to disk before saving entity to saved chunkloading data.

Returning false to addEntityID prevents the entity from being saved (cred to LexManos)
Entities which do not save to disk but are chunkloaders causes errors the next time the world loads. This ought to fix it.
Updated FML, proper free-sprite list for /gui/items.png, and fixed MCP version.

Marked more spots in gui/items bitmask as being free.

Fixes ordering for z & x loops (proper array increment order)

The ordering before would skip about in the ids and metadata arrays.  This runs linearly and should improve performance.
Done live on github
Fixes some weird formatting

Adds a more intelligent chunk constructor

Adds a chunk constructor with full block id range, that's metadata
sensitive, has intelligent coord ordering, and which allows for
generation at greater heights than 127.

Delete duplicate file

Finished repackaging net.minecraft.* net.minecraft.client is left

More re-packaging, got most classes out of the default package.

Move server specific patch back to common from minecraft.

Update FML: 1f5c58b
1f5c58b Fix up MCP version
61e4db2 Merge joined.exc add update howto
5efc1eb Revert "Fix MC-2497 - derpy torch flames. Moved from forge. Everyone sho
3b3600d Modified merger to just consider all server classes as common. And moved
edcc5ca Forgot mcp.cfg
ca79dfe Updated to 1.4.5b
5945279 Fix python error
57bf643 Modified decompile so that we do not have to decompile the server, saves
d9d0a46 Cleaned up some tabs
2fac644 Change usage of ZipFile, fixes issues with Mac's default instation of py

Fix up MCP version

Merge joined.exc add update howto

Revert "Fix MC-2497 - derpy torch flames. Moved from forge. Everyone should benefit."

This reverts commit fa567014a54b3273002fe9cf424ab4cf3ec54c3a.

Remove common folder from projects

Move IBossDisplayData to shared

First half of new patches

Update FML imports

Inital script side commit for MC source repackaging done.

Fix TE Issue

Modified merger to just consider all server classes as common. And moved the defnition of CodecMus to the config.

Updated to MC 1.4.5b

Forgot mcp.cfg

Updated to 1.4.5b

Fix python error

Modified decompile so that we do not have to decompile the server, saves time.

Cleaned up some tabs

Change usage of ZipFile, fixes issues with Mac's default instation of python. Also cleaned the python a little bit.

Removed GnuWin32 programs, should no longer be needed as we've moved to python.

Update FML: 570592b
570592b Attempt to fix a possible comodification risk

Attempt to fix a possible comodification risk

Stupid eclipse resetting preferences. Spaces, not tabs!!!

Add in events when forcing and unforcing chunks. Hope this works for you ChickenBones!

Update FML: fde9414
fde9414 Change texturebinding to use the textureId directly rather than iconInde

Change texturebinding to use the textureId directly rather than iconIndex
to determine if it needs to rebind the texture sheet

Fixed custom soil checks for NetherStalk and Reeds

Fixed issue with default implementation of Beach plant type check

Release script will now include the Minecraft version in the arcive names.

Update FML: f348496
f348496 Fix mod display list. Shouldn't be derpy anymore.
a5c31b5 Fix World patch- workaround no longer required and leftovers are bad.
2dc3f0d Cleaned up the AT config updater, should work for any setup of the MCP w

Fix mod display list. Shouldn't be derpy anymore.

Fix World patch- workaround no longer required and leftovers are bad.

Cleaned up the AT config updater, should work for any setup of the MCP workspace now.

Fixed beds not working properly when respawning.

Remove EntityFX patch - moved to FML. Patch SuspiciousClasses to add "forge"

Update FML: fa56701
fa56701 Fix MC-2497 - derpy torch flames. Moved from forge. Everyone should benefit.
96935bb Fix an NPE in TileEntity trying to generate a crash report. Make suspicious classes just return the obvious. Fix NPE for FML crash report on server. Clean up dead pa

Fix MC-2497 - derpy torch flames. Moved from forge. Everyone should benefit.

Fix an NPE in TileEntity trying to generate a crash report. Make suspicious classes just return the obvious.
Fix NPE for FML crash report on server. Clean up dead patches.

Fix the derpy torch flames properly. Closes MC-2497 properly ;)

Update to MC 1.4.5
Update FML: 43d3042
43d3042 Clean up a patch
fec221f Update FML for MC 1.4.5
b0f0635 Fix for ModLoader static overrides not displaying.
23a2513 Fix up derpy file name handling: closes #127 Fix up duping childmods: cl
a6eaa2b Fix spelling issue.
c6a0741 FML setup should now download and verify all the minecraft files needed
5a1930e Small fix to some MCP metadata for pre2
418deba Update to MC 1.4.4
4ff2cff Fix bug when a modloader mod is run on a dedicated server and has a conn

Clean up a patch

Update FML for MC 1.4.5

Some liquid events. Non-API breaking. Add them at your leisure. This helps liquids know
what's happening to them. In case they're volatile or something ;)

Another difference

Fix fillLiquidContainer - return null, not the empty container for
previous API compatibility

Merge remote-tracking branch 'origin/master'

Update FML to fix ModLoader/addOverride functionality.

Fix for ModLoader static overrides not displaying.

Merge branch 'KingLemming-master'

Change name to LiquidContainerRegistry. Fix up missing API. This better be it now!

Fixed oversights in liquid registry, added functionality for instant checks as requested by CJ.
Liquid list return is now secure.

Signed-off-by: King Lemming <kinglemming@gmail.com>

Merge branch 'KingLemming-master'

Rename some liquid stuff for more sensible naming. Tweak API slightly.

Liquid Manager Rewrite - slightly more memory usage, loads more efficient at runtime.
Added default Lava and Water registrations to Liquid Manager.
Removed method which relied on flawed assumption that a given liquid only had a single type of container.

Signed-off-by: King Lemming <kinglemming@gmail.com>

Add in the basic IBlockLiquid interface. The actual block implementation
will follow.

Add an ItemStack sensitive version of getIconForRenderPass, defers to
existing by default. Should allow NBT data to affect multipass icon rendering.

Change getLeft to getRotation, around any axis.

Some new stuff on the liquid API for better RP2 interaction. Coming soon: blocks!

Tweak liquidcontainer API for sidedness capability

Fix breaking despite cancel in creative mode for PlayerInteractEvent OR #247

Allow for modders to decide whether or not players are positioned on ridingEntities similarly to pigs PR #244

Fix issue where players would spawn in the ground.

Mods can use custom textures for Slot background overlay, instead of only items.png PR #245 and #246

Added saplings and leaves to the ore dict. PR: #242

Updated FML, Fixed spelling issues in logs, and file name issues.

Fix up derpy file name handling: closes #127
Fix up duping childmods: closes #126
FMLPreinitializationEvent now offers a getLogger() that'll return your mod a personalized logger instance

As agreed, liquid API from BuildCraft has been migrated to minecraft forge. There will be cleanups to follow,
including sided handling and client rendering tweaks. Stay tuned!
Tweak forgedirection for a couple of naming constants

Add toLeft rotational data to ForgeDirection

New field in ForgeDirection to hold just the valid directions. And made getOrientation a bit more efficient.

Fix crops not droping seeds properly.

Fix entity items rendering on the ground.

Fix spelling issue.

Bumped version number for 1.4.4

Update to 1.4.4

FML setup should now download and verify all the minecraft files needed to run MCP.

Small fix to some MCP metadata for pre2

Update to MC 1.4.4

Ore Dictionary Improvements, replaces vanilla recipes with OreDict recipes for some vanilla items. Thanks Covert.

Made Item constructor public, and made setTextureFile chainable, requires mods to recompile, but as this is for 1.4.3 i'm not concerned.

Fix bug when a modloader mod is run on a dedicated server and has a
connection handler assigned to it. Hi SmartMoving! Perhaps you should try
@Mod instead of BaseMod?

Merge branch 'mc143pre'
Update to minecraft 1.4.3 prerelease

Readdaed teleporter sensitive versions of the teleport function
Added per-world list of custom teleporters, Modders, use World.Load to populate this list.
Changed the definition of our version schemes.

Temporary update for 1.4.3
Update FML: bd2123c
bd2123c Clean up some patch fuzz
c2a603c Update joined.exc file from latest conf
db12af4 Update to 1.4.3

Clean up some patch fuzz

Update joined.exc file from latest conf

Update FML: 8356fe9
8356fe9 FUUUUUU! Stupid ticking. STOP REGISTERING TICK HANDLERS IN YOUR CONSTRUC
6edce8b Patch a file handle leak in RegionFileCache handling when under memory p
ca2bbe0 Update MCP mapings again, yay bad syncs.
c8941a7 Updated MCP mapings.
5e20c03 StartServer is now useable in merged code base.

Update to 1.4.3

A useful tool for performing updates

FUUUUUU! Stupid ticking. STOP REGISTERING TICK HANDLERS IN YOUR CONSTRUCTORS.
I'm looking at you Rei's!

Patch a file handle leak in RegionFileCache handling when under memory pressure.

Update FML: Updated MCP mapings, and fixed StartServer

Update MCP mapings again, yay bad syncs.

Updated MCP mapings.

StartServer is now useable in merged code base.

Update FML: b19e882
b19e882 Remove some debug, closes #123
9d7d32a Fix up tick management outside of mod loading phases for ModLoader mods.
d512539 Negatively cache failed class lookups, should help with @SideOnly performance issues.

Remove some debug, closes #123

Fix up tick management outside of mod loading phases for ModLoader mods.

Negatively cache failed class lookups, should help with @SideOnly performance issues.

This update fixes some world corrupting vanilla error handling, mostly caused by
mods doing something derpy. Hopefully, your world saves will thank me.
Note that if the mod does derp, it's data is lost. It's not FML or Minecraft Forge's
responsibility if "DirtChest 2000 Mk5" can't write their TileEntity method correctly
and you lose your 100000 diamonds.

Update FML: a3a93f3
a3a93f3 Fix some whitespace issues, handle possibly bugged entities as well
a7eb5dc Vanilla/mod bug fixes: CME on entity processing, TileEntity resetting chunk on save/load.

Fix some whitespace issues, handle possibly bugged entities as well

Vanilla/mod bug fixes: CME on entity processing, TileEntity resetting chunk on save/load.

Cleanup some debug in the script, and fix version number for the current build.

Fix a vanilla bug related to certian seeds and stronholds.

Fix cast issue when mods attempt to make fake worlds.

Change logs should now be bundled with downloads, as well as avalible on files.minecraftforge.net

Update FML:b23081d
b23081d Support for ModLoader 1.4.2. Good job Risu!
66db4ec Add in an exclusion list tag for @Mod. The backend code isn't yet implemented, but shows the basic idea.

Support for ModLoader 1.4.2. Good job Risu!

Fix compile issue.

Merge pull request #232 from CovertJaguar/patch-7

Added vanilla wood + dye to the Ore Dict
Added Stonghold, Village, and Spawn biome management helpers for PR 207

Added vanilla wood + dye to the Ore Dict

Should help simplify interaction between mods that add similar items.
New hook to allow for custom beacon support blocks.

Exposed functions for adding superflat presets.

Added metadata sensitve experience to furnace recipies and added Item callback to determine experience gain.

Fix issue where scroll bar would not render when switching tab pages.

New hook to allow items to be on multiple creative tabs PR 176

Remove some debug code

Changeable name tag render distance for PR: 174

EntityLiving.experianceValue private->public for Issue #225

Merge pull request #231 from ShadwDrgn/master

ServerChatEvent
Add event to cancel or change chat messages sent from server

Add event to cancel or change chat messages sent from server

Added system to place all configs that use Forge's Configuration function into a single file on disc. Optional config to enable this. Blame MattaBase for this idea..

Pickblock will new compare NBT data, should allow mods to refine there result better.

Add in an exclusion list tag for @Mod. The backend code isn't yet implemented, but shows the basic idea.

Fix ItemSeed placement to take into account the IPlantable interface.

Added a per-world MapStorage feature that provides a method to store data files associated with a specific world, as well as fixes the issue with villagers loosing there village. {Where villagers wouldn't go inside at night}

Fix the accessor and type on World.getPersistentChunksFor()
Update FML: 8bd98c3
8bd98c3 Fix a small problem with the new MCP container- it can cause NPEs. Nice.
34cc42d Fix up some javadoc complaints

Merge pull request #228 from pahimar/master

SlotCrafting fix for damageable container items
Update patches/common/net/minecraft/src/SlotCrafting.java.patch
Fix a small problem with the new MCP container- it can cause NPEs. Nice.

Fix up some javadoc complaints

MCP information is now included in Minecraft Forge. They deserve the credit :)

Update FML: 09eade4
09eade4 Update build - include MCP information in the source pack
9bfe7df MCP deserves lots of credit. So here it is.

Update build - include MCP information in the source pack

MCP deserves lots of credit. So here it is.

Update FML: 8006b77
8006b77 Fix instantiation bug
7cc91cf Simple InterMod comms. Send a message using FMLInterModComms.sendMessage(). Receive messages through an @IMCCallback
24d7285 Update for MC 1.4.2
cedf3d5 Duplicate Mod display screen.

Fix instantiation bug

Downgrade to FML 415, issue with new IMC system.

Update to 1.4.2, obf stayed the same, so only small revision.

Simple InterMod comms. Send a message using FMLInterModComms.sendMessage(). Receive messages through an @IMCCallback

Update for MC 1.4.2

Duplicate Mod display screen.

Update World patch to fix map provider issue.

Add an access transform for Block.setBlockBounds - should help a lot of code that uses this.

Update FML: d915f39
d915f39 Fix typo in access transformer
346691c Fix the merge for forge
6dadc1d Fix up references to minecraftDir in obf code
8a55f68 Update FML for Minecraft 1.4.1
5645fa5 First update to 1.4.1, patches need updating.
ff0f00f Add some null checks, and throw descriptive exception when SideTransformer prevents a class from loading.

Fix typo in access transformer

Update to MC 1.4.1 and Forge 6.0.0

Fix the merge for forge

Fix up references to minecraftDir in obf code

Update FML for Minecraft 1.4.1

First update to 1.4.1, patches need updating.

Add some null checks, and throw descriptive exception when SideTransformer prevents a class from loading.

Fix color issues with Dyed Leather armor.

Fix up the setHandeled/setHandled for events, it is now a generalized setResult, the meaning of which is defined by each event.

Cleanup mirrored things in ShapedOreRecipe to address issue 208 and issue 210

Remove deprecated code.

Fix NPE issue when mods add null EntityFX's to be rendererd.

Update FML: 7a34246
7a34246 Ship a client only class so the merge works both sides.

Ship a client only class so the merge works both sides.

Fix install.py so it can be installed properly from src distribution

Update FML (entire change log since last by me): 62a6b52
62a6b52 Fix RenderRegistry render ID - now at 36 Fix SpriteMaps - they're running out fast! Switch to forge if you can! RenderBiped now has an armo
b845cde Fix up FML python script for forge
2c36dfb Update to MCP pre 3. Fixes some weirdnesses with explosions.
acd880d Merge branch '1.4'
e6f57e5 Update for MCP release
b1de0fc Remove fuzz from patches for INetworkManager change
ad44619 Fix for new names INetworkManager and ITexturePack. I also provide refactoring scripts for both, for your use...
3a94211 Add a script to ignore git complaining about the eclipse workspace changing - run when you first open the eclipse workspace
9386e23 Update gitignore - ignore the files that will change or be deleted
10b318c Add in "starter" image for eclipse workspace
995d5b7 Eclipse workspace fixup 2?
bbb12c8 Clean up eclipse workspace- part 1
b50058e Clean up a bit of patch fuzz
4a0bfa9 Fix CommonHandler for rename of the server thread class
4d1ec66 Update with RC2 MCP. Use the joined.exc file directly since MCP now provides it.
b52e3d0 Fix exception for CodecMus
a1011c9 Fix some compilation issues. Requires resolving the worldclient abstract method
0ebd4f3 Inital patch update to 1.4
89c68c4 Moved into EntityVillager
e4702cb Fix line ending detection during checkout.
6e64fd7 We don't need logging here...
014b3f4 remove useless -Server projects
7628c67 Updated the AT config and Marker config for 1.4 obf
54a322c Updae build to copy files that may decompile differently but are actually the same, and updated for 1.4 values.
aadf396 Update MCP Merge config.
81e1855 Pull in MCP's 1.4 conf files.
5686fd4 Fix error in merging of exec's

Update release script for mcp changes, releases now build.

Updated Forge version to 5.0.0, for 1.4

Updated World patch, there are a lot of new things happening int he constructor, xcomp should probably vet this.

Teleporting has a new function (func_82448_a), made it so that you can supply your own teleporter to that function, and so it works with dimension movement factors.

Removed Forge's TileEntity.getRenderDistance, now a vanilla feature:  TileEntity.func_82115_m

BlockCrops is now the parent class of multiple types of crops, Wheat, Potatoes, and Carrots, updated getBlockDropped patch to reflect.

Patches removing forge spawn protection, now a vanilla feature.

Entities have a new function to determine explosion strength that they create, and implemented Item frame pickblock.

BlockSnow now pretty much just passes harvestBlock to it's super.

Updated Render patches, Bipeds now have the ability to have helmets, of either blocks, or the new 'heads'

Patches that applied with little to no functional changes.

Forge spawn protection removed, now a vanilla feature.

No longer needed, getRenderDistance removed because Vanilla has it now, TileEntity.func_82115_m

Moved to common where it should be

Remove final from 'villageCollectionObj' to allow for delayed setup of Map source objects.

Update for new names in 1.4

Fix RenderRegistry render ID - now at 36
Fix SpriteMaps - they're running out fast! Switch to forge if you can!
RenderBiped now has an armorlist- so armortypes add to it as well

Update Forge's AT for 1.4 names.

Fix recompile call for 1.4 MCP change

FML Update for 1.4

Fix up FML python script for forge

Update to MCP pre 3. Fixes some weirdnesses with explosions.

Merge branch '1.4'

Update for MCP release

Remove fuzz from patches for INetworkManager change

Fix for new names INetworkManager and ITexturePack. I also provide refactoring scripts for both, for your use...

Add a script to ignore git complaining about the eclipse workspace changing - run when you first open the eclipse workspace

Update gitignore - ignore the files that will change or be deleted

Add in "starter" image for eclipse workspace

Eclipse workspace fixup 2?

Clean up eclipse workspace- part 1

Clean up a bit of patch fuzz

Fix CommonHandler for rename of the server thread class

Update with RC2 MCP. Use the joined.exc file directly since MCP now provides it.

Fix exception for CodecMus

Fix some compilation issues. Requires resolving the worldclient abstract method

Inital patch update to 1.4

Moved into EntityVillager

Fix line ending detection during checkout.

We don't need logging here...

remove useless -Server projects

Updated the AT config and Marker config for 1.4 obf

Updae build to copy files that may decompile differently but are actually the same, and updated for 1.4 values.

Update MCP Merge config.

Pull in MCP's 1.4 conf files.

Fix error in merging of exec's

Bump version to 4.3, final for 1.3.2

Remove some test code.

Added ability for mods to cleanly define and display new creative tabs.

Fix classloading issue preventing JRockit from running forge

Forge build change: the universal jar, if installed alongside a server jar file, can be executed to load forge. No server side merging required!
Update FML: 989ab3e
989ab3e Update build.xml - add a classpath to the manifest. This means the universal jar is now a server side launche
88f1dc9 Typos!

Update build.xml - add a classpath to the manifest. This means the universal jar is now a server side launcher.

Typos!

Update FML: 470a185
470a185 Try and avoid an NPE in crash reports
0029518 Fix logging problems- log death messages and re-route the server through FML logs properly.
fe7a832 Fix the test mod
a2bc30b Coremods can be specified via the command line: fml.coreMod.load=<listofcommaseparatedclasses> This will help with developing coremods
bae1f74 Fix classpath for server
887aa27 Add in the ability for a client to throw a custom exception that displays a custom gui instead of the default error message.
e17f267 Update FML internal classpath. Helpful for coremod devs
3b9972a Don't use File to separate the last element of the path. It's a URL, they're always separated by '/'
5c96afe Changed RelauchLibraryManager so that files with different paths on the same baseURL can be implemented in one ILibrarySet.
1bca393 FML as a whole is now subject to transformers.
27cf731 Bonus extra character. thanks randomitter!
94c84cd Merge pull request #116 from Vazkii/patch-1
c2d3195 Add Null check to FMLClientHandler.sendPacket

Make Item.createEntity only call when its specifically a EntityItem, not a subclass of it.

Try and avoid an NPE in crash reports

Fix logging problems- log death messages and re-route the server through FML logs properly.

Fix the test mod

Coremods can be specified via the command line: fml.coreMod.load=<listofcommaseparatedclasses> This will help with developing coremods

Fix classpath for server

Add in the ability for a client to throw a custom exception that displays a custom gui instead of the default error message.

Update FML internal classpath. Helpful for coremod devs

Don't use File to separate the last element of the path. It's a URL, they're always separated by '/'

Changed RelauchLibraryManager so that files with different paths on the
same baseURL can be implemented in one ILibrarySet.

FML as a whole is now subject to transformers.

Bonus extra character. thanks randomitter!

Dll files are binary as well.

Ship forgeversion.properties with release zips. Same format as fmlversion.properties.

New Block hook to determine if it can be destroied by the ender dragon, for PR 199

Allow hook into GuiSlot for background rendering for PR #203

Change the Crafting damage check to be the same as the usage damage check. (>= -> >)

Fill out the .gitattributes to help with line endings how they should be.

Reorganize the forced chunks a bit- offload the cost of immutable map building to the mods, rather than the chunk tick

Remove @SideOnly from removePotionEffect. Hi RichardG!

Add some accessors to teh ChunkLoader tickets.

Merge pull request #198 from iChun/patch-1

Fix not passing right render pass to Item class.
Merge pull request #116 from Vazkii/patch-1

Add Null check to FMLClientHandler.sendPacket
Fix bounds checking on chunkcache. Should fix a bunch of rp2 and maybe other extended tile entity code

Use weak references to the worlds in our maps. WorldClient would otherwise
leak all over the show.

Add Null check to FMLClientHandler.sendPacket
Expose RenderGlobal.field_72738_E (breakingBlocks) and fire OnBreak for items broken in itemUseFirst on the server. Both for Elo

Fix problem with spawning custom entities in hotloaded dimensions.

Fix not passing right render pass to Item class.
Fix a problem with re-entering worlds too quickly- the worlds will now *always* save before the menu re-appears.

Update forge to 4.2

Merge branch 'master' of git://github.com/Chicken-Bones/MinecraftForge into Chicken-Bones-master

Remove dead WorldInfo patch. Tweak dimension code a bit for better naming, and use the new FML world loading facilities
Update FML: d0e7c9e
d0e7c9e Update patches *sigh*
f3e1cac Add in a savehandler strategy for reading and writing data to the world save. This service is only available to coremods via the WorldAccessConta
51fb513 Add in some bukkit supporting code. Most of this is unimplemented until the bukkit coremod is complete.
65c9fdd New stuff on the ModLoader! Risu has been busy. Closes #114
c1d4458 Mods can now declare a range of minecraft versions they will run against

Update patches *sigh*

Add in a savehandler strategy for reading and writing data to the
world save. This service is only available to coremods via the
WorldAccessContainer interface on the mod wrapper. This is deliberate
and will not change.

Add in some bukkit supporting code. Most of this is unimplemented
until the bukkit coremod is complete.

Merge branch 'XCompWiz-mystcraft'
Merge in mystcraft base edits for a base clean mystcraft. Adds in a lot of extra capabilities

Server player concurrency fix

Fixes an issue where the server can move a player while the player is
moving, process the player's last move (putting the player back where
they were before the teleport), and then complain about the player
moving too fast when the client catches up to it's new position.  Also
fixes this issue while riding an entity.  Only affects player
client/server movement sync.

Lighting Time fix

score_under's lighting fix that limits and fairly distributes the amount
of time spent on recalculating lighting

MapStorage Fix

Fixes setting and timing of map storage object to allow for the
WorldProvider to use it during initialization
Forces single instance of map storage object (per side)
Moves setting of spawn to after provider setup

Adds world unloading and hotloading calls

Adds world unloaded message to MinecraftServer on save.
Adds world unloading calls to chunk provider/manager when all chunks are
unloaded.
Adds call in MinecraftServer getWorld to hotload world if it isn't
loaded.

Improves DimensionManager

Adds handling for unloading and hotloading of worlds, fixes some typos,
allows for dimensions to be unregistered (allowing save specific
dimension registrations), general changes to match these features.

New stuff on the ModLoader! Risu has been busy. Closes #114

Mods can now declare a range of minecraft versions they will run against

Fix issue where mushrooms would not check the proper soil block.

Fix issue where light would not properly recalculate.

Add some of the model subsystem to the server. The part that doesn't require openGL. This allows for systems that dual models as collision/selection boxes etc.

Expanded DungeonHooks to allow for adding of custom DungeonLoot values directly, allowing for better control over the generated items.

Made PlayerEvent.BreakSpeed fire when a player cannot harvest the block. Issues #191 and #188

Update FML: ca1ca4f
ca1ca4f Fix maps supporting greater than byte() dimension sizing
15ee8bf Fix language registry additions, closes #113
a08b5b1 Merge pull request #112 from pahimar/master
8dac58f Added ability to query the Language Registry by key and language for specific localized text, as well as loading in localization text f

Fix maps supporting greater than byte() dimension sizing

Fix language registry additions, closes #113

Dormant chunk cache might actually work now, and not mix chunks across worlds

Forgot comment, you see nothing...

Fix vanilla bug where the player would load chunks outside its range that would be 'abandoned' and never unloaded.

Fix buckets, need to rethink for bukkit compatibility.

A few requested features of ForgeChunkManager. Mods can specify a
chunkloading config directly in the config file, including chunk
loading overrides if they wish (and the config allows them).
Also added "player" tied tickets that bind to the player and not the
mod's quota.

Location aware version og Block.lightOpacity for PR #169

Missing updates from last commit

Merge pull request #112 from pahimar/master

Additonal Language Registry functionality
Added preliminarty Player Interact event heavily based on the bukkit event.

Fix bug in last commit that caused block to not break.

Add PlayerEvent.HarvestCheck and PlayerEvent.BreakSpeed for dealing with things related to a player harvesting a block.

Added ability to query the Language Registry by key and language for specific localized text, as well as loading in localization text from a specific file/URL

Fix bug where breaking texture would not apply to top/bottom of beds.

Add in an "EntityEvent.EnteringChunk" event. Useful for your entity chunkloading stuff.

Merge remote-tracking branch 'origin/master'

Support for no BOM.

Update FML: f083707
f083707 Extreme headless mode is back!

Extreme headless mode is back!

Some more tweaks to the chunkloading code. The world.load event fires slightly later- once the entity watcher is
set up, so entities can actually load into the server world. Also, tickets actually save and load properly
and null entities don't break the server

Update FML: dd39ae5
dd7502a Fix parent child counts showing properly. Closes #107 thanks scott!
b36d447 It's useMetadata, not usesMetadata. thanks myrathi and psx. closes #110
efb1066 Fix random shuffling when manipulating biomes by using a LinkedHashSet to preserve iteration order. Closes #111

Fix parent child counts showing properly. Closes #107 thanks scott!

It's useMetadata, not usesMetadata. thanks myrathi and psx. closes #110

Fix random shuffling when manipulating biomes by using a LinkedHashSet to preserve iteration order. Closes #111

> != >=

Fix Configuration.getItem to return pre-shifted values suitible to pass into Item constructors.

Fire off PlayerDestroyItemEvent for crafting contianer items that get damaged to much. PR #183

Changed Configuration to use overloaded methods, and changed the order of arguments to be Category, Key, Value instead of Key, Category, Value to hopefully help cleanup some peopels code.
Added function to get a free Item id. Will only accept values that are not in the block space. Needs testing.
Marked all the old getOrCreate* functions as deprecated.

Configuration will now attempt to detect the encoding of the file using the Byte Order Mark.

Fix up some config file handling to be even more resilient.

Support quoting in property and category names for almost all possible characters allowed

Fix some errors if the config is unparseable. It should log an exception and carry on with defaults.

More modifications to the ticket callback handling system. There are up to two callbacks during world loading now. One to allow
selective preference for ticket types. The other to actually allow the mod to force chunks.

Some changes to the ForgeChunkManager.
Null modData is allowed now.
The entity id is actually properly persisted in the ticket now.
There is a new "orderedLoadingCallback" that allows you to provide a preferred ticket loading order in case of "excess tickets". Also, tickets
that are not in the returned list are now unregistered.
There is a way to resort the chunks in the forced chunklist on a ticket now.
Log the dormant cache configuration

Update FML: dd39ae5
dd39ae5 Try and fix the newline capture so consoles show on the server on windows again
b39f808 Readd ancient searge name so dan200 and computercraft can run again. REMOVE THAT CODE DAN.

Try and fix the newline capture so consoles show on the server on windows again

Readd ancient searge name so dan200 and computercraft can run again. REMOVE THAT CODE DAN.

Update FML: a2c059e
a2c059e Fix missing import. Thanks ichun :(
19316a0 Version file searching should work for directories too
fbc7a5c Fix bug causing NPE if non-whitelisted player joins an FML server without FML installed
e9cfd10 Merge pull request #103 from iChun/patch-2
1424883 Fixed ModTextureAnimation not updating and not binding to correct image.

Some more fixes for chunkloading code. Works very reliably now.

Delete some debug code

Simple chunk caching capability for the chunkloader. This will store "dormant" chunks in a
configurable cache, potentially saving the cost of reloading them from disk.

And a concurrentmodificationexception in the same code

Fix NPE in ForgeChunkManager

Remove @SideOnly flag for function now required on the server

A lot of tweaks to the chunkloading for entity behaviour. Entities are now bound by a new
persistent id they *all* have, on the server side.

Working cross dimensional implementation of chunkloading for Forge.

Simple chunkloading implementation

Fix patch errors in merge of last PR -.-

Merge pull request #181 from micdoodle8/patch-1

Fixed WorldProvider.setDimension() setting the wrong variable.
Update patches/common/net/minecraft/src/WorldProvider.java.patch

Fixed WorldProvider.setDimension() setting the wrong variable.
Fix missing import. Thanks ichun :(

Version file searching should work for directories too

Fix bug causing NPE if non-whitelisted player joins an FML server without FML installed

Fix accedental doubling of shift, Fixes saplings/flowers planting a space above where they should

New Plant API that allows for custom plants/soils.

Added new hooks for modifying the items generated in chests during world gen.

Merge pull request #103 from iChun/patch-2

Fixed ModTextureAnimation not updating and not binding to correct image.
Redirect a lot of functions through WorldProvider for Mystcraft, allowing them to be overriden by the provider.

Merge pull request #173 from CovertJaguar/patch-5

Fixed Entity Item render helper
Merge pull request #175 from iChun/patch-2

Fix pick block key giving invalid spawn eggs
Added side sensitivity to standard EntityDiggingFX, added Block functions to override spawning of digging and breaking effects.

Logic derp (again)
Logic derped
Fix pick block key giving invalid spawn eggs
Fixed ModTextureAnimation not updating and not binding to correct image.
Fix potential NPE in Custom item entity span code caused by item id misconfigurations.

Fix recursion issue with new special item entity code.

Fixed Entity Item render helper
Update FML: 6c746ec
6c746ec Tidy code
aacbfeb Change version.properties search slightly, allow access to found file from the preinit event
1513b36 Add in the capability to read an internal version as <modid>.version from a file in the zip call versi
35852a6 Fix up reversed assignment for version fallback

Tidy code

Change version.properties search slightly, allow access to found file from the preinit event

Add in the capability to read an internal version as <modid>.version from a file
in the zip call version.properties. Handy for autobuilding scripts.

Fix up reversed assignment for version fallback

Readd reverted EntityLiving patch

Merge remote-tracking branch 'origin/master'

96537dc - Fixup Item in hand rendering of textures > 16x
e88ddc5 - Make the exception print for headless servers if the Downloader cant initalize.
f24ff07 - Remove a bunch of warning about javadoc, not a real fix, but no more warning.
3420ea7 - Update MCP Mapings
87104f0 - Makes GetModSrc check the common folder when attempting to extract source files
640446b - Tie parent/child containers together again. Should close #96
2cf4917 - Village mating produces added villagers, and the egg should place added villagers too. Closes #97.
6394ee8 - Clean up stale references to the Player stored in the NetworkRegistry, closes #100
7299e05 - Merge pull request #99 from CovertJaguar/patch-1
c4bd040 - More readable init logs

Fixup Item in hand rendering of textures > 16x

Make the exception print for headless servers if the Downloader cant initalize.

Remove a bunch of warning about javadoc, not a real fix, but no more warning.

Update MCP Mapings

Makes GetModSrc check the common folder when attempting to extract source files

Tie parent/child containers together again. Should close #96

Village mating produces added villagers, and the egg should place
added villagers too. Closes #97.

Clean up stale references to the Player stored in the NetworkRegistry,
closes #100

Merge pull request #99 from CovertJaguar/patch-1

More readable state event logs
More readable init logs
Package all of paulscode/ with the universal jar to help mac users who cant understand how to merge folders -.-

Bump version to 4.1.2 to mark the end of todays changes.

Move spawn fuzz to WorldProvider/WorldType, useful for VoidWorld types.

Allow for respawning in different dimensions.

Read/Write config files as UTF-8 instead of ANSII, should fix issue with Turkish people.

Fix potential issue with custom events where the constructor is not visible from the EventBus class, Should never arise but meh.

Add ability for Items to create custom Entities for themselves when added to the world, PR: #151

Move Forge init message to MinecraftForge.initalize

Make EntityJoinWorldEvent Cancelable properly

Merge pull request #146 from dries007/Fly

Allow flight permissions to be player sensitive
Implemented isBlockFoliage for pull #141

Fix a few patch fuzzes

New EntityItem related events
Fixed player death event in SMP
Added Player specific drops event
Added generic EntityJoinWorldEvent

Clean up some javadoc warnings.

EntityLiving variation of drawBlockDamageTexture to allow for Non-player viewports.

Fix FillBucketEvent to work with stacked buckets. New change in 1.3

Update FML: 89b8236
89b8236 Fix onConnectionClosed not being called on the client side of a connection

Fix onConnectionClosed not being called on the client side of a connection

Remove all references to ModLoader

Bump version to 4.1.1

Update FML: 70f55c5
70f55c5 Add in exclusion list for IFMLLoadingPlugin.
1c1716d Remove debug cruft
d567f79 To properly align with packet9respawn, make packet1login's dimension an int as well
ecd4e46 Attempt to build some protocol negotiation, and fix packet1login so that the dimension is a short, matching packet9respawn
16fe495 Compatibility level is now passed from server to client - and the client tracks it. This means certain packet changes can be made without b
4f70d23 Fix dependency checking: you can depend on specific versions of FML

Add in exclusion list for IFMLLoadingPlugin.

Remove debug cruft

To properly align with packet9respawn, make packet1login's dimension an int as well

Attempt to build some protocol negotiation, and fix packet1login so that the dimension is a short, matching packet9respawn

Compatibility level is now passed from server to client - and
the client tracks it. This means certain packet changes can be made
without breaking comms, hopefully

Fix dependency checking: you can depend on specific versions of FML

Update FML: 290a3c9
290a3c9 Merge pull request #94 from iChun/patch-1
9485dc5 Fix handleTinyPacket using short instead of int.

Merge pull request #94 from iChun/patch-1

Fix handleTinyPacket using short instead of int.
Fix handleTinyPacket using short instead of int.

Silly cpw :P
Update FML: e6abb69
e6abb69 Fix up tiny packet handler to actually work
e862052 Allow javax to be shipped by mods. Should allow some more modloader mods to work unaltered
4071ad1 Add in a little bit of protocol cleanup. Start work on allowing multiple protocol versions
6061964 Give a way to build the packet131mapdata packet correctly populated
b818769 Capture and leverage Packet131MapData

Fix up tiny packet handler to actually work

Allow javax to be shipped by mods. Should allow some more modloader mods to work
unaltered

Add in a little bit of protocol cleanup. Start work on allowing multiple
protocol versions

Give a way to build the packet131mapdata packet correctly populated

Capture and leverage Packet131MapData

Fix placing torches and the like on inverted woden slabs.

Update FML: 12bc4ba
12bc4ba Make console logging pass through a single logging thread to avoid concurrency problems with launchers and stuff
8fccfa2 Overlooked chat message support *sigh*. Fixes wierd mods that communicate through custom chat messages rather than
a697d04 Rescan mod packages where there was a possible mod identified to try and make sure we load it. Fixes Matmos r16

Make console logging pass through a single logging thread to avoid concurrency problems with launchers and stuff

Overlooked chat message support *sigh*. Fixes wierd mods that communicate through custom
chat messages rather than anything else. Hi Superior enchanting!

Rescan mod packages where there was a possible mod identified to try and make sure we load it. Fixes Matmos r16

Update FML: 9d812f1
9d812f1 And handle the other way to globally register an entity
869cf78 Fix up mods trying to register entities outside of modloading. Now you'll get a big fat warning for doing such a de
186680c Fix CJB mod compatibilty for real. Gui container registration can now happen in the constructor. YUK!
5aed6d9 Fix compatibility with ModLoader dispenser hook. Fixes a bug with IDispenseHandler too - though it means that inter
3d7a665 Fix headless operation, hopefully

And handle the other way to globally register an entity

Fix up mods trying to register entities outside of modloading. Now you'll get a big fat warning for doing such a derpy thing.

Fix CJB mod compatibilty for real. Gui container registration can now happen in the constructor. YUK!

Fix compatibility with ModLoader dispenser hook. Fixes a bug with
IDispenseHandler too - though it means that interface is now
deprecated

Fix headless operation, hopefully

Update FML: 10a7169

10a7169 Fix up trying to re-add stuff to the classpath when it's already there
0eb7180 Fix out of range entity id handling for ModLoader mods a bit more. Thanks Herobrine mod!
b1b4c61 Expose GuiMerchantButton
359cfb5 Log a big fat warning for the developer in the case the network version is not acceptable to the mod itself. (This can happen because of a bad range specifier for example)

Fix up trying to re-add stuff to the classpath when it's already there

Fix out of range entity id handling for ModLoader mods a bit more. Thanks Herobrine mod!

Expose GuiMerchantButton

Log a big fat warning for the developer in the case the network version
is not acceptable to the mod itself. (This can happen because of a bad range
specifier for example)

Update FML: 8656fd5
8656fd5 Also, make missing entity not blow things up
25a4dcb Fix entity tracker "update" packet not computing correctly. Should work now..

Also, make missing entity not blow things up

Fix entity tracker "update" packet not computing correctly. Should work now..

Update FML: c90a853
c90a853 Fix up addRenderer to catch exceptions from the basemod, also, addrenderer now supplies a list of the default renderers from MC for editing and will note the
18069d8 Change download location for FML libraries to files.minecraftforge.net, add an encoding param to the javac command line to force utf 8
a40f4a7 Add in random jar/zip files to the classpath. UGH this is so fucking ugly it's not funny.
5b6460b Use a null socket and try to prefer the result of getLocalHost in the broadcast data.

Fix up addRenderer to catch exceptions from the basemod, also, addrenderer now supplies a list of the
default renderers from MC for editing and will note the changes made.

Change download location for FML libraries to files.minecraftforge.net, add an encoding param to the javac command line to force utf 8

Add in random jar/zip files to the classpath. UGH this is so fucking ugly it's not funny.

Allow flight,player sensitive

Use a null socket and try to prefer the result of getLocalHost in the broadcast data.

Update FML: c0d1348
c0d1348 Add in an ItemRenderer null check so FML can run render adding mods
482c163 Inverted boolean logic. Grrr.
221d113 ModLoader mob spawns use packet 24- build a bypass system so that they can still use it
f19f426 Remove debug statements

Add in an ItemRenderer null check so FML can run render adding mods

Inverted boolean logic. Grrr.

ModLoader mob spawns use packet 24- build a bypass system so that
they can still use it

Remove debug statements

Update FML: 9dd9b6e
9dd9b6e Fix keybindings not loading properly from gamesettings file after restart

Fix keybindings not loading properly from gamesettings file after restart

Fix silk touch on Ender Chests.

Merge pull request #142 from ShetiPhian/movecheck_override

Server mods can now use noClip to push players through solid blocks without is being an invalid move and resetting the players position. Useful for creating semi-solid blocks like quicksand.
Fix Issue #140: Custom items not properly having texture applied for partical effects.

Update FML: acb0b21
acb0b21 Fix so we always send received packets to handlers. Renders 250 filtering useless unless i can figure a way to intercept

Fix so we always send received packets to handlers.
Renders 250 filtering useless unless i can figure a way to intercept *outbound* packets that isn't as messy as I'm
contemplating

Update FML: b17dd3c
b17dd3c Some tests
fa66ffa Fix trying to load the client side packet handler, when on the server, hopefully?
b106420 Fix up network negotiation - now it will disconnect with a nice error screen if there are missing mods on the client vs se

Some tests

Fix trying to load the client side packet handler, when on the server, hopefully?

Fix up network negotiation - now it will disconnect with a nice
error screen if there are missing mods on the client vs server

Update FML: c971adb
c971adb Fix missing addCommand call: thanks "spawnwolf test command"
d6326de Fix a couple of modloader mods. Thanks!
483667c Some functionality fixes for @Instance injection.
8bef512 Versions now have two flavours: the @Mod(version) which is the "programmatic version" and is used for all version relationship calculatio
501009c Always for ML mods into "public" class accessibility - we don't call from the default package like ML does.
d3d4308 Add in a convenience method for getting a class instance based on existence of another Mod. Useful for soft dependencies.

Fix missing addCommand call: thanks "spawnwolf test command"

Fix a couple of modloader mods. Thanks!

Some functionality fixes for @Instance injection.

Versions now have two flavours: the @Mod(version) which is the "programmatic version" and
is used for all version relationship calculation. The "display version" as sourced from
mcmod.info is used for display purposes only and can be literally anything. Note: they fall back
to one another when they're missing, and to "1.0" if both are absent.

Also, changed @Instance. Now, you can inject *other* mods using @Instance as long as you depend
on them as a "before" or "dependency" relationship. Classes containing @Instance will only be
loaded if the Mod the @Instance refers is present. So you don't have to worry about runtime class
resolution.

Update patches/common/net/minecraft/src/NetServerHandler.java.patch

 Update patches/common/net/minecraft/src/NetServerHandler.java.patch

Server mods can now use noClip to push players through solid blocks without is being an invalid move and resetting the players position.

Useful for creating semi-solid blocks like quicksand.
Always for ML mods into "public" class accessibility - we don't call from the default package like ML does.

Add in a convenience method for getting a class instance based on
existence of another Mod. Useful for soft dependencies.

Update FML: 2d9b88b
2d9b88b And more mod sorting fixes.
93d5934 Actually *use* the sorted mod list

Fix FillBucketEvent to actually fire.

Fix call to createTileEntity on blocks that extend BlockContainer.

And more mod sorting fixes.

Actually *use* the sorted mod list

Update FML: 180a279
180a279 Merge pull request #82 from Chicken-Bones/master
cf38461 The access transformer will now handle classes in packages.
2c85539 Reverse the meaning of state in fml.modStates system property and fmlModState.properties - it was very derpy before. Now: true is enabled, false is disabled, as you would expect
d651189 Actually fix the corrupt JSON problem
f6a8cd5 Fix isModLoaded for "disabled" mods, and the toposort as well
3bde961 A bit more information for dependency handling
6396bea Fix up handing corrupt mcmod.info
6bc6def Fix a problem with network ids
7328610 Fix up version handling properly. Hopefully, and the error screen.
9fcc452 Only active mods should have dependencies checked, and be sorted
26302a6 Fix oddity with Screen, print a version out in the sorted list!

Merge pull request #82 from Chicken-Bones/master

The access transformer will now handle classes in packages. 
The access transformer will now handle classes in packages.

Eg.

public net/minecraft/client/Minecraft.T #timer

Reverse the meaning of state in fml.modStates system property and fmlModState.properties - it was very
derpy before. Now: true is enabled, false is disabled, as you would expect

Actually fix the corrupt JSON problem

Fix isModLoaded for "disabled" mods, and the toposort as well

A bit more information for dependency handling

Fix up handing corrupt mcmod.info

Fix a problem with network ids

Fix up version handling properly. Hopefully, and the error screen.

Only active mods should have dependencies checked, and be sorted

Fix oddity with Screen, print a version out in the sorted list!

Update FML: 62dbfb3
62dbfb3 Fix metadata

Fix metadata

Update FML: b91cbe9
b91cbe9 Fix up versioned dependencies so they work a lot better, also add in a missing mods screen

Fix up versioned dependencies so they work a lot better, also add in a missing mods screen

Update FML: 93b8ba9
93b8ba9 Fix missing serverSendPacket
23fdbbd Trading support for ModLoader - thanks Herblore!
d7a74d8 Close the jar, for cleanliness sake
58e6dd9 Fix authors - it'll read both "authors" and "authorList" from the json now
907cf2d More ML compatibility - fix up dragon mounts, thanks!
ee48a36 Fix up loading mods that are grandchildren of BaseMod
c6f362b Fix entity handling for ModLoader mods, thanks parachute mod!

Fix missing serverSendPacket

Trading support for ModLoader - thanks Herblore!

Close the jar, for cleanliness sake

Fix authors - it'll read both "authors" and "authorList" from the json now

More ML compatibility - fix up dragon mounts, thanks!

Fix up loading mods that are grandchildren of BaseMod

Fix entity handling for ModLoader mods, thanks parachute mod!

Fix lighting issue for air related to 4096 fix.

Merge remote-tracking branch 'origin/master'

Removed deprecated ISpawnHandler, that never worked in 1.3.2 so noone should be using it. See FML's replacement.

Made helper hooks for EntityLiving and EntityRenderer hooks for Optifine

Update FML: 6e01c59
6e01c59 Merge ChickenBones pull into FML - adds player trackers
a0cbd37 More precise error handling when an invalid class is present
12323e2 Fix textures not applying properly
789a4a3 Fix up entity spawning - hopefully they won't warp anymore.
a87d045 Add in a helper on the server start event for adding commands to the server.
82e9309 Move villager trading hook up a bit. thanks sengir.
8deaa37 Fix LAN to try hard to find a real network interface, not just localhost most of the time
b5363e3 Update build to not bother building client jar. Universal is everything now.

Merge ChickenBones pull into FML - adds player trackers

Fix formatting

Tweak patches and hooks slightly

More precise error handling when an invalid class is present

Fix textures not applying properly

Fix up entity spawning - hopefully they won't warp anymore.

Add in a helper on the server start event for adding commands to
the server.

Move villager trading hook up a bit. thanks sengir.

Fix LAN to try hard to find a real network interface, not just localhost
most of the time

Update build to not bother building client jar. Universal is everything
now.

Null protection for ticks() -- probably should uses EnumSet.noneOf() but
you can also use null now to stop ticking. closes #77

More precise error handling when an invalid class is present

Fix textures not applying properly

Pickblock now replaces the currently selected item if it could not find a empty space.

Merge pull request #135 from dvrabel/minecart-drag

Use original minecart drag co-efficients for regular carts.
FML will now search '<mcpdir>/forge/accesstransformers' for user defined access transformer config files to be applied during forge setup

Added IPlayerTracker hooks

Fix up entity spawning - hopefully they won't warp anymore.

Add in a helper on the server start event for adding commands to
the server.

Move villager trading hook up a bit. thanks sengir.

Fix LAN to try hard to find a real network interface, not just localhost
most of the time

Update build to not bother building client jar. Universal is everything
now.

Update FML: 28a10ac
28a10ac Null protection for ticks() -- probably should uses EnumSet.noneOf() but you can also use null now to stop ticking. closes #77
c349d51 Automatic mod entity registration into the global entity list. This might break entity code out there, sorry, but this way for most entities you no longer need to manage the global mod entity stuff at all. just remove it. FML will take care of the rest (note, worlds won't load the old entities)
ef01745 Add in a utility function that *might* tell you the context you're running in on either client or server: FMLCommonHandler.getEffectiveSide
c97d6a6 Try and stop sendPacketToAllAround from being crashy
2062273 Mods can add mod specific crash information to the crash report now Forge needs to implement MinecraftForge.getCrashCallable
6e6436e Fix up dispenser handling, add in new params for the dispenser: breaks IDispenseHandler, sorry
38f4a22 Fix up MLProp handling for null info
3a8b047 GUIs working in FML for ML mods
52483ee Support gui opening for Shelf mod
dce1cbc Updated MCPMerger to annotate unique classes with there sides, and SideTransformer to null out any class that is loaded on the wrong side.

Null protection for ticks() -- probably should uses EnumSet.noneOf() but
you can also use null now to stop ticking. closes #77

Automatic mod entity registration into the global entity list. This might break
entity code out there, sorry, but this way for most entities you no longer
need to manage the global mod entity stuff at all. just remove it. FML will
take care of the rest (note, worlds won't load the old entities)

Add in a utility function that *might* tell you the context
you're running in on either client or server: FMLCommonHandler.getEffectiveSide

Try and stop sendPacketToAllAround from being crashy

Mods can add mod specific crash information to the crash report now
Forge needs to implement MinecraftForge.getCrashCallable

Update FML to 304:
Client side only classes are properly annotated, and denied loading on server side
Added missing client side only ModLoader.getContainerGUI function
Guis work for FML mods now.
Fixed MLProp handeling of null info
Fix up dispenser handling, add in new params for the dispenser: breaks IDispenseHandler, sorry

Fix up dispenser handling, add in new params for the dispenser: breaks IDispenseHandler, sorry

Fix up MLProp handling for null info

GUIs working in FML for ML mods

Support gui opening for Shelf mod

Use original minecart drag co-efficients for regular carts.

Since the amount of speed lost is 1 - co-eff, rounding 0.997 to 0.99
makes a big difference to the distance a minecart will travel (less
than half of the distance in vanilla 1.25).

Updated MCPMerger to annotate unique classes with there sides, and SideTransformer to null out any class that is loaded on the wrong side.

Updated onItemUseFirst call to include the new hit vector information, and updated readme.

Added missing server side onBlockStartBreak hook, fixes Sheers.

Fixed Forge's 4096 block filler initalization.

Fix IndexOutOfBounds exception, Major derp.

Update FML: 46c563a

46c563a Expose more of the village construction parts for building village piece
1380c2e Allow access to the type "ComponentVillage"
71a3818 Documentation and registration for villager stuff
e3a343c Fix javadoc derp
195b1a0 Villager trading, manipulation and village enhancement. Still WIP but sh
69e66c3 Fix exception based logging to actually log the exception!

Expose more of the village construction parts for building village
pieces

Allow access to the type "ComponentVillage"

Documentation and registration for villager stuff

Fix javadoc derp

Villager trading, manipulation and village enhancement. Still WIP but should be functional

Fix exception based logging to actually log the exception!

Update FML:
885637c Fix up keyboard events for modloader
90a7c8f Pickup notification

Fix up keyboard events for modloader

Pickup notification

Changed order in which EntityItemPickupEvent is called, it will no longer be called if the 'delay' on the item is still active. Also EntityItems that are in the world with invalid item stacks will now kill themselves.

Merge pull request #129 from heldplayer/skyRenderer

Re: Adds a SkyProvider class that can handle the rendering of the sky
Move and add a few AT for forge: rail and leaves stuff mostly
Update FML (reorg some AT for FML vs forge):
2171c0c Update fml_at with new transforms
924a6f9 Fix derp where client sided packet handler would be created on a dedi server env
ad4cffb Add in support for "dummy" keybindings- ones that are added to the list but never do anything so the mod can handle it all themselves.
cf77ffb Don't complain about minecraft source code being in "net.minecraft.src". Derp.
b2fdcd7 Fix ModLoader add XP Smelting
094ce2a Actually register client/server packetspecs as their correct sides! fixes #71

Update fml_at with new transforms

Fix derp where client sided packet handler would be created on a dedi server env

Adds a SkyProvider class that can handle the rendering of the sky
Add in support for "dummy" keybindings- ones that are added to the list but never do anything
so the mod can handle it all themselves.

Don't complain about minecraft source code being in "net.minecraft.src". Derp.

Fix ModLoader add XP Smelting

Actually register client/server packetspecs as their correct sides! fixes #71

Fix MC packet bugs for remote servers that use blocks with ids > 256

Fixed bug in EntityMinecart that would cause them to fall through the ground at the bottom of slopes.

Update FML:

e8cb2c1 Error if channel name is invalid - either too short, or too long
9c6c56c Add a connect and read timeout for downloading libraries. This should really stop the "waiting forever" at startup screen.
0d5affe GIANT FAT WARNINGS if you use any code in net.minecraft.src or any subpackage thereof. Get it out of there, now!
13f210f Fix up ML GUI ticking. Thanks sharose!

Error if channel name is invalid - either too short, or too long

Update WorldProvider.path diff.

Added timeout to MC's download of sound resouces.

Fix EntityItemPickupEvent 'pop' sound spamming.

Fixed EntityEvent.CanUpdate

Add a connect and read timeout for downloading libraries. This should really stop the "waiting forever" at startup screen.

GIANT FAT WARNINGS if you use any code in net.minecraft.src or any subpackage thereof. Get it out of there, now!

Fix up ML GUI ticking. Thanks sharose!

Update fml:
c61ad51 Organize ALL the imports
c0842b0 Expose the server in serverstart event
2851079 Fix up directory injection of log file locations
5197524 Refer to FMLLog, not FMLRelaunchLog
78efd1a Tidy up server launch - reflection not required anymore
eee0a99 Also, log what the directory discoverer finds for mcmod.info
10c96c3 And log the exception if it has a problem reading the jar file
07cc3fb Fix jar loader failing to inject any metadata at all if mcmod.info is not found.
e31f143 Change install.cmd to install.bat, why, cuz people are .... Updated readme to mention needing server and client.

Organize ALL the imports

Expose the server in serverstart event

Fix up directory injection of log file locations

Refer to FMLLog, not FMLRelaunchLog

Tidy up server launch - reflection not required anymore

Also, log what the directory discoverer finds for mcmod.info

And log the exception if it has a problem reading the jar file

Fix jar loader failing to inject any metadata at all if mcmod.info is not found.

Change install.cmd to install.bat, why, cuz people are .... Updated readme to mention needing server and client.

Update FML to include some ML compatibility fixes. Minimap should run, assuming he
recompiles against standard ML interfaces.
This updates to official MCP 7.2, so you'll need to rebuild your workspace (some
small but important patches to MCP went in)

Some compatibility fixes for Rei's minimap, and tidy up a couple of things

Fix Forge branding string call

Update FML for mcp 72 final, change download location for FML files, and make the stop button work.
Hello is NOT going to go away :)

Allow white space in the property name.

Update FML, make the .sh scripts executable

Fix critical bug in FML load controller that complains about injected mod containers

Update FML to 285

Handle the case where a mod tries to do something stateful during constructor phase, and log a big
fat message about it. Don't do it!

Small fixes, including showing the FULL name of Forge Mod Loader

Fix up null array in keybinding handler

Actually add in the system property for the minecraft home, should fix multimc too

Merge pull request #121 from Draake/master-pr1

Added additional sound events to allow for low level information.
Removed SoundSetListenerEvent implementation.

Add in support for setting the home dir via the applet launch, also a system property for forcing the home dir

Whops

Fix potential index exception in ForgeDirection

Rename Orientation to ForgeDirection {Damn MCP naming a class Direction already}

Update FML again for mod screen blending fix.

Cleanup fml.py a little, should fix double printing of 'patching file'

Wrap mod description rendering in BLEND calls https://github.com/MinecraftForge/MinecraftForge/issues/96

Add render distance property to TileEntity.

Fix issue with default getContainerItemStack

New Command event.

Seperated block placmenet logic in ItemBlock as immibis requested: https://github.com/MinecraftForge/MinecraftForge/pull/110

Fix ItemBlock placement, should fix RP Deployers placing blocks 1 tile down.

Updated Orientation with new helper functionality.

Updated FML, should fix the new included eclipse workspace.

Made getmodifiedsrc noop for server.

Fix new eclipse workspace to load the project properly from start.

Fixed bug in DimensionManager that would cause Index error for custom dimensions, also made WorldProviders aware of what dimension they are.

Updated patches to 1.3.2

Cleaned up forge scripts, and updated AT config for 1.3.2, deleted any reference to server specific code.

Update FML to 278, MC 1.3.2

Cleanup repo, delete old code

Merge branch 'minecraft132'
Yes, we are already on 1.3.2

KeyBinding handler change: a handler now takes an array of keys and calls back with the
activated key. Sorry for the inconvenience but this improves the usability of this
API a lot

Fix renderer's not getting the rendermanager set on them at registration time

Finished update to MCP 7.2, MC 1.3.2 pre.

KeyBinding handler change: a handler now takes an array of keys and calls back with the
activated key. Sorry for the inconvenience but this improves the usability of this
API a lot

Fix renderer's not getting the rendermanager set on them at registration time

Fixup included workspace to have single project with client/server launches.

Start working on MC 1.3.2

Add in a helper for code migrating from ML renderer stuff

Readded patch to allow for use of custom teleporter for transfering dimensions.

Merge pull request #62 from calclavia/patch-1

Shortcut function for addNameForObject()
Shortcut function for addNameForObject()

Having that long line of code makes the code a bit ugly... Please make this shortcut function like ModLoader.addName() so I don't need to use ModLoader.addName(). :)
Handle mod duplicate detection much better. Default the name of a mod to it's id.
Fix up the block registry problem. Fix the packetsend from c->s actually being
"disconnect" :)

Update FML with entity spawning fixes

Fix entity spawn packets

Updated FML, should fix 'derp?' RuntimeError

Force a Jenkins build

Merge pull request #60 from remuladgryta/master

fixed 'derp' error on @NetworkMod
fixed java.lang.NoSuchMethodException

getServerHandlerSpecDefaultValue() and
getClientHandlerSpecDefaultValue() should no longer give derp exeption
Fix PickBlock 'ghost item' bug when picking with a item selected.

Update release script to create universal binary distro.

Update debug settings to use Client's internal MinecraftServer.main to debug dedi-server env.

Delete Forge server projects

Update FML, Tons of bug fixes and proper merging of client and server.

FML will skip gathering MD5s for classes in the cpw package during the the inital recompile {Make Side/SideOnly reobf properly}

Merge remote-tracking branch 'origin/master'

Updated FML install to provide better error output, Updated commands.py patch to disable recompile of server project.

Hopefully let build continue if server reobf fails, and fix derp in FMLNetworkHandler for entities

Fix up concurrent modification exception - ticks for players now occur on both sides

Merge the last bits of the server code into the common directory, and annotate ModLoader/BaseMod for sided use

This means the FML-Server project is now defunct as all code is either common, client or bukkit.

Actually fix the applet launch - it now launches properly *and* closes the window

Fix up relaunch of the applet

Added additional sound events to allow manipulation of a sound source at its creation.

Change language loading a bit

Update spritehelper bitmaps for items and terrain

Tidy up some APIs, expose the addOverride mechanism. This should be pluggable by forge
but may need work to allow for each mod to have it's own override set

Fix derp in LanguageRegistry

Merge pull request #116 from bloodandiron/bonemeal-fix

Bonemeal handler fix
FMLModcontainer should not complain about annotations it has no idea about. so stfu fmlmodcontainer

Fix derp with EntityRegistry- bimap is not the right type for the name->container list

Fix bug where default bonemeal behavior wouldn't trigger. Only return if the event was canceled.

Add in a sided variant of the packethandlers in the annotation - also, a bit more
explicit warning on when to register blocks - if you do it after pre-init, you'll
reset the achievements

Generate channel registration for client, also, do it before the login events so you can send packets

Capture server packet handling errors into the FML log file for diagnostics

one more change for the road :)

Update FML, new AT features, and error info.

Don't spit debug all over the floor

updated conf, commands patch (missing newline?) and capturing the actual running
MC version and validating it at relaunch time is the correct MC version.

Add in callableminecraftversion

Entity AI accessibility, also AccessTransformer can make certain classes public now

Update AT config to expose some block functions and a few extras.

Delete dead IGuiHandler

Updated FML

Fixed ItemRenderer not grabbing custom texture files properly for block items

Add in a simple packet dispatcher for sending packets around

Add in a sided packet registry so that client vs server can vary

Fix double forge init on server

Should fix commands.py patching not working properly first run.

Merge pull request #50 from Krapht/master

Fix for getNextAvailableRenderId() returning ids in use by vanilla - thanks krapht!
Fixed getNextAvailableRenderId() returning ids in use by vanilla

Updated FML, Should fix a lot of installing issues for MCP.
Made patches error and not apply if the target file is not found.
Updated Event Transformer to add a default constructor...
Fixed 4096 setup code in MinecraftForge.initalize()

Fix MCPMerger injecting Side/SideOnly when it already exists.

Added patch verification to commands.py patch, and made it so MCP will check the original jars for the server, to prevent it from saying modified when it started out clean.

Add DEBUG constant to Access/Side Transformers to remove spam when not needed. Also AccessTransformer and MCPMerger should return a error code when it can not process causing MCP to stop decompile.

Fix EntityRegistry - mods can specify update frequency, range and velocity data, and also
patch EntityTracker to actually track FML entities

Fix NPE with no channels - always register FML

Fix issue in install script for users with spaces in there paths.

Added missing quotes around compile command.

Updated FML, fixed custom tool hooks, and spawn protection/player reach hooks.

Fix up the network mod issue properly. Maintain a real cache of mod objects

Update FML, server should run now. Still issue with NPE with no mods installed.

Remove profiler stuff - it's been deeply reorged. I'll look at re-adding it later

Fix up command patch to actually work

Fix commands.py to always include the two side classes so the fml jars are valid.

Fix build script- put client in first

Put the marker on the server ML file too

Fix universal not to dupe entries in the jar, also add in the fml mod as "untransformable"

Fix up launch when obfuscated *sigh*

Update netclienthandler patch.

Fix NPE for server relaunch

Fix up Package.getPackage(), also fix up loadcontroller construction

Add in Package.getPackage() support for sengir

Lost of work to try and complete ML support - probably still bits missing, but mostly there

Fixed Diemsnion API related NPEs, and updated FML to 231.

Newlines in diff file

Add special case to add Side/SideOnly to difflist

Fix up some network related stuff and optimize mod lookup a bit

Fix up proxy injector to inject properly

Fix decompile

Updated FML, updated patches

Fix NPE on missing mods - still need to actually handle missing mods properly on client

New downloader UI and new downloader backend - should be more robust now

Added -no_gen_conf to jenkins build

Added some extra error prints, hopeully get something useful when installed in the client.

Updated conf merger script to just merge everything, and normalize the line endings so git doesn't complain.

Update fml, impelemnted Diemsnion API stuff.

SidedProxy should work again - anywhere. Make sure it's on a static field though

More ticking hooks, and some other bits of clean up. Very close to "done" now.

Fix up modloader and clean up junk method

A lot of missing patches to code re-added. Almost all functionality should now
be restored.

ModLoader compatibility is not yet assured, there are some wrapper classes that
need re-writing first

Readded common folder to startclient/server.

Add in a registration method for gui handlers

Overwrote lex's command patch

Fix up MCP merger - it definitely works now - the game runs and runs well.
Fix up a couple of small network related issues.
Fix up the server launching fml properly.

Include Forge's AT config into redist zips.

Added new pick block hook for blocks and entites to allow for better grained control of the result.

Fix oreientation bug causing levers not being able to place.

Moved over Configuration

Added common folder support to startclient/startserver

Added some missing quotes that caused issues if your workspace had a space in it.

Update fml

Add lib folder to installed eclipse

Copy forge files over in install.

Delete conf, server compile, update fml, and fix install script.

Cleaned up some more, fixed infinite loop with cancelable annotation, Client now compiles and enters world just fine.

Add in missing patch - also, launch FML properly from the server

Entity spawn adjustment - tracker

Nope, unneeded patch

Updated Client side patches for the new Merged MCP workspace.

Fix ModLoader compilation, and MCPmerger invocation for Forge.

Include conf folder and merge config in source zip

Entity spawning - done

Generate a universal binary package since we can now :)

Merge branch 'MergingClientServer'

Reorganized all the current patches

Fix up annotation parser to parse arrays and enums

Added SideTransformer to strip side only functions/fields out.

Stage 1 of merging the client and server for MCP.
Results:
Client: 362
Server: 3 (Only due to issues of FF decompilation inconsistancies)
Common: 910

Stage 2: Write runtime transformer to remove annotated fields/methods with invalid side annotation.

Gui Handler ported from MC forge

Revert dumb stuff with commands patch - lots of gfx patching

Removed a lot of old files

Almost finished basic network stuff now

Update some patches- more network work

Finished World and EntityMinecart patches.

More conversions, added all the entity living events.

More work, moved over packet stuff, need to change everything to use new NetworkMod system

Bunch of hooks re-added : network is more complete now, lot of basemod cleanup, moving stuff into
the registry area

Moved some files.

A bulk of more patches converted, updated fml

More patches converted.
Refactored some of the events to be a better hiarachy.

Fix location of forge in common handler - also some tweaks to modloader and other stuff

Network support - there's still some work to do and full id sync isn't done yet, but it has proper registration
semantics and hooks for 250 handling

Add in a lot of network handler stuff - also, expose the asm harvested data

Some more patch migration before bed.

More progress on converting patches from 1.2.5

Implemeneted adding grass seeds, as well as IShearable for BlockTallGrass

Implemented BonemealEvent (IBonemealHandler replacement), and bonemeal making grass.

Renamed MinecraftForge.eventBus to EVENT_BUS as it's constant.

Moved in OreDictionary stuff to new system. IOreHandler is replaced by OreDictionary.OreRegisterEvent

Missed a file

First push of some small patches and introduction of basic events. As well as the first cases for Forge's Access Transformer

Remove some unneeded fields from the annotations

Moved paulscode to new client folder

Made empty constructor for ModMetadata public

Updated update_patches.py, and made first patch!

Moved logo to new client folder
Added blank Access Transformer config for Forge
Implemented version storage
Added basic dummy FML mod container to remove the need for mod metadata file
Added beggining work on Forge event system
Updated and moved EnumHelper

Update FML

Updated build.py

Remove eclipse files from old eclipse projects

Fix path trimming for copytree

Added merging fields/methods/param csv files. And updated FML to 197

Change property name to fml.modStates not fml.disabledMods- it makes more sense that way

Add in a bit of logging when events get sent to mod containers

Allow coremods to inject a modcontainer and run code
this will mean that FML is deliberately and very obviously incompatible with a modloader installation.

Fix up worldtype so that the server can run.

Patch commands.py to support side '2' as common, as well as fix a few small errors in the update_patches and fml scripts.

Helper function grab all unique searge names that are shared client and server

Add newids to that list

Add the direct copied files from MCP conf

Committing inital work on generating sanitized MCP conf data.

New Start.java which allows the user to login using a legit account for testing on servers.

Dump old mcp config

inital push of updated setup script and cleaned up forge.py

Added a better eclipse workspace for deving Forge

Get rid of all old patches

Merged transformers/ to /common and renamed the asm source download to align better with the asm bin file name.

Change place commands.py backup is stored.

FML finish won't updatemcp automatically, easier integration with forge.

Fix packaging and install to not have the src/ folder, making it align better with the dev env.

Bumped version to 3.4.9, final commit for 1.2.5.

Moved setting up eclipse to setup_mcp

Fixed ant script to support common folder building and add the new files to the dist archives.

setup_fml's decompile will result in proper md5 files now {if there is no compiler issues}

Removed FMLRegistry, and IMinecraftRegistry.
Updated server side to use the seperated registry classes like the client does.
Updated searge name references on server
Made StatBase.statName public using AccessTransformer
Server should compile now

Fix MockBlock compile

Download argo/guava source references in install, and updated eclipse workspaces to reference them.

Cleaned up commands.patch, removed debug print in fml.py

Remove clientdrop, old reference files.

Delete some dead files

Fix commands patch, WorldType patch and some ML compat stuff

More fixes

More build fixes for jenkins

Try and fix the jenkins build

Change some event names, hook up the event code for server events for FML

Merge branch 'newfmlmod'

Introduced patching of runtime/commands.py to allow for usage of the src/common folder.

Change some stuff around - begin launching the server through the wrapper too.
A lot of patches went in - the client and server both launch and start up mods.

Rebase

Merge pull request #114 from cpw/master

Line endings
Normalize the repo

More stuff

Fix classpath for Client, maybe?

Line endings for this branch

A load of transformer accesses- also a few tweaks to the transformer, and linux support in the fml python

Rewrote patch generation and application to no longer need diff, and attempt to apply common patches on decompiles that don't have one side or the other.

Updated eclipse projects to have src-common linked resources

Modified the decompiler stage to:
Compile and run AccessTransformer during the pre-RG stage of decompilation.
Merge resulting sources that are identical to src/common

ToDo:
Finish the common intergration:
-update_patches - Add common folder support
-apply_patches:
--patch each side, also patch all common patches to each side incase they are not merged, only if file exists.

Add temp AccessTransformer config for FML

Discard old setup script

Fixed AccessTransformer issue with trying to load files, instead of resources.

Merge pull request #113 from someh4x0r/master

Fix BlockTrapDoor.disableValidation on server
Fix BlockTrapDoor.disableValidation on server

Commit the start of some pluggable transformers

XP for smelting

Beginning the 1.3.1 update

Add in the ability to create versioned dependencies for mod relationships
BaseMod versions are loaded too late so will never work as a versioned
dependency requirement, but can have versioned deps of others

Fix up coremods with relaunch, add in a sample "coremod"

Add in events for the method pre/init/post annotations so we can add in extra data during the event phase

Fix whitespace issue

Fix window sticking around - it doesn't anymore

Add in "transform excluded" classes that we still need to take loading responsibility for

Added in some dialogs when things don't go so well

New logging stuff, also the early plugin api for forge

Merge branch 'minecraft1.3' into newfmlmod

Fix up mod classloading delegation

Some patches to go along with the other changes

More stuff as I roll out the changes

A bunch more fixes for FML mods

Merge remote-tracking branch 'mainlap/newkeys' into newfmlmod

Conflicts:
	client/cpw/mods/fml/client/FMLClientHandler.java

New key handling

Check in a lot of recent work

Check in new fml mod work so far. Lots still to do.

Cleaned up the install script for the source distrabution to setup the workspace properly, delete argo, and download all required dependancies.

Added call to clean_source to build script to fix patch fuzz on windows.

Fix Client-Clean project to use relative path to argo.

Should fix NPE on older ISoundHandlers EXA: http://minecraftforge.net/forum/index.php/topic,759.html

Merge pull request #104 from cpw/master

Update to fml 176 - fixes a subtle tick bug
Update fml with recent tick fix

Merge pull request #102 from TrueBrain/EntityTracker

-Add: sync serverPos[XYZ] on spawning of entity
-Codechange: applied LexManos' request

-Fix: check for null where needed

Made WorldGenMinable metadata sensitive.

Fixed a improper rounding in EntityMinecart

-Add: sync serverPos[XYZ] on spawning of entity

This fixes the issue that, up to 400 ticks from getting in range,
entities have a wrong offset (because server and client don't agree on
the position to calculate relative updates from)

Another bloody ticking fix. This should fix mods that use ML.setInGameHook(true,false) on the
server side to recieve ticks.

Fix up mod classloading delegation

Fixes

Incorporate server patches into client

Remove two places that are unpatchable now

Server repatching

Add a "checkpatches" target and check if your patches are up to date before running a repatch operation

Launch through the applet launcher too

Some patches for the server

Lots of client patch fixup

Update git ignore to ignore a fernflowerzip that's lying around

And we have a brand, "fml". We're definitely modded :)

UnexpectedThrowable is now the much more awesome CrashReport!

Merge branch 'master' into minecraft1.3
Bring some of the ticking fixes in

Conflicts:
	client/cpw/mods/fml/client/FMLClientHandler.java
	patches/minecraft_server/net/minecraft/server/MinecraftServer.java.patch

Got the relauncher downloading and injecting library files

Merge pull request #98 from cpw/master

Update to fml 175
Update fml to 175- fixes some weird ticking behaviours for ML mods, adds in new ticking behaviours for smart mods

Tweak ticking YET AGAIN. Should fire a solitary GUILOAD tick right as the game screen loads.
Hopefully fixes worldload tick issue too

FFS let this fix that bloody ticking mess that is ML compatibility.

Separate gui ticking completely. send it as if it's a world tick. ML gui ticks are epically dumb.
Fix Worldload being filtered from the trigger arming.
Also, improve errors going to an error screen. There should be more information now.

Change gui ticking and world load tick. Should close issue #40 and kill it deader
than a very very dead thing. *$^*(#% Modloader ticking b#%$hit

Merge branch 'master' into minecraft1.3

Tweak build xml for more cleanliness

Merge branch 'antscriptupdates'

Update some stuff

Merge branch 'antscriptupdates' into minecraft1.3

Add in more options for ant script and clean up needing to clean every time.

Updated some remaining scripts to call there python versions.

Removed symlink files, shouldn't be in the repo.

Moved licenses and credits into install folder.

Merge branch 'testrecover'

Merge branch 'antscriptupdates' into minecraft1.3

Merge branch 'antscriptupdates'

Some more fixes to the ant stuff: apply patches now happens at the right time, I grab fernflower as part of
setup and added an updatepatches call too

Merge branch 'antscriptupdates' into minecraft1.3

Conflicts:
	build.xml

Merge branch 'antscriptupdates'

Add in a setupenvironment ant target specifically for setting up an FML environment from scratch

Harvest MC version from MCP

fix sided proxy bukkit test (not used so not a biggie)

Harvest MC version from MCP

Fix furnaces not smelting the proper number of results after the first one. Damn you tahg, fix this! Keeps falling through my cracks.

Initial checkin. Some patches are probably missing, but client compiles.

Merge pull request #94 from cpw/hastileentitybugfix

Fix server check "blockHasTileEntity" used to determine if getDescriptionPacket
Fix server check "blockHasTileEntity" used to determine if getDescriptionPacket
is sent for the block to be metadata sensitive. Thanks iChun!

Working simple scheduled ticking, Player ticks

Support tick spacing through new IScheduledTickHandler

Merge pull request #93 from cpw/fixghost4096

Fix ghost players who appear if they don't have the 4096 fix installed
Change TickType.WORLD to send the world as arg[0] to match the server.

Fix ghost players who appear if they don't have the 4096 fix installed

And there are not 1000 seconds in a second

Seconds are 1000 milliseconds long. Not 1 millisecond long.

Tweak profiler command on bukkit

Fix up a derp in the timing command

Fix container creative to not add Blocks above 256 unless it's told to.

Merge pull request #91 from cpw/multiversefix

Fix world provider behaviour: WorldProvider.byDimension should always return a new instance- otherwise you can end up with worlds overwriting one another
Fix world provider behaviour: WorldProvider.byDimension should always return
a new instance- otherwise you can end up with worlds overwriting one another

Fix code to use guava 10 only. Stupid bukkit plugins and daft dependencies on guava 10!

Tweak for end profiling

Add in simple profiler for bukkit

Add in a mechanism to get the modcontainer for a mod - so things can be programmatically changed

Add in bukkit support for recipe change

Add in a new recipe handler registry method for ease of adding recipes to MC

Merge remote-tracking branch 'origin/master'

Fixed isBlockReplaceable and placing ItemBlocks'

Fucking spelling nazis
Updated FML to build 153

Fix bitmask bug related to 4096 in multi-block change.

Added configuration option to disable the darkroom mechanic. For servers who wish to not risk destruction at one broken pipe.

Add option to randomize potential spawn locations to have a more randomly dispersed spawn patern, useful for games like FTB vs.

Fix NPE related to server/client not having block ids synced properly.

Update tester mod

Fix ticking for GUI ticks too!

Fix dependency string processing error

ModSorting test case

FML 150, more tick related work.

Fix ticking properly - ML world ticks now fire once, properly

Close inputstream

More bugfixes related to portal generation. Should be all now.

Fix Vanilla bug where nether portals would not work above 127

Updated to FML 149, should fix all ticking issues with ModLoader mods

Some 4096 I missed in custom renderers.

Added stupididty exception for common issue with getMinecraftLogger.

Rename unused ML prop config files if they exist (to .bak) and
skip generating if not needed

Update bukkit with changes

Revert "Test failing build"

This reverts commit 744febc38e915a12c388fe01ba6715d31b6b6ee2.

Revert "Revert "Fail the build when recompilation fails""

This reverts commit c2d920d738a294462338fbe955c62a0f4034304c.

Revert "Fail the build when recompilation fails"

This reverts commit 482e3be3c9a96df8cefad81d78c7a4e83ad898b4.

Test failing build

Fail the build when recompilation fails

Fix huge bug/typo in basemodticker that stopped ticks getting sent

Updated to FML build #142, fixed FML compilation issue causing missing files when reobfing.

Fix compilation error, Protip: Don't use java7 things when compiling for java6, and Don't report successful build on compilation errors cpw.

Updated release script to automatically inject version info into .info file.

Updated to FML 141, should fix ticking issues with certian mods, and crash issue with TropiCraft

Remove cr's from modinfo descriptions, they print oddly in Minecraft.

Print mod metadata info errors if we are in MCP.

Should fix concurent modification exceptions when using removeSpawns

Remove some eclipse preference files

Update gitignore to ignore some eclipse preference files.

Merge pull request #29 from ScottKillen/master

Fixed WorldType to allow custom WorldTypes
Bumped version number for new IEntityLiving interface.

Merge pull request #88 from pahimar/master

Fixes typo in the new EntityLivingHandler code
Typo in the new EntityLivingHandler code

Implemented enchanced EntityLiving events. Thanks Atomic for parts of it.

Made setFailsafeFieldValue public for Rob

Added EntityRendererProxy class for compatibility with ModLoader mods that rely on it's existance.

More ticking cleanup

Remove WorldLoad tick from modloader mods- too early. *sigh*

Make sure to reset the clock trigger

Force all client modloader ticks to occur at render end

Client
======
Added hook in GuiCreateWorld to allow WorldType to present GUI on world creation.

**Client**
* Delegated World.func_46068_G() (getHorizon), which depends on WorldType, to the WorldType class per LexManos' suggestion

Client
======
- Fixed WorldType to allow custom WorldTypes in world creation GUI.
- Deprecated client WorldType.getSeaLevel() and renamed it with the more accurate name of getMinimumSpawnHeight.
- Changed related reference WorldProvider.

Server
======
- Fixed WorldType to allow custom WorldTypes
- Added methods to WorldType giving it the exact abilities of client WorldType
- Adjusted WorldProvider so that it relies on WorldType the same way it does on client.

Few more cases for 4096, thanks TrueBrain

Forgot Configuration in 4096 change.

Initial 4096 fix based of mDiyo's work.

Configurable kick message when you don't have forge.

Merge pull request #27 from TheNoid/master

Make FML logs use system line endings …
Make FML logs use system line endings for consistency with Java stack traces in the logs.

Fixed bug in new entity sound hook.

Bumped version number to 3.3.7 for full release.

New onChunkUnload event for TileEntities, for psxlover.

Added new ISoundHandler.onPlaySoundAtEntity hook. Should be backwards compatible with any older ISoundHandler implementations.

Updated to FML #135 {Fixed ModList rendering issue, and incorrect arument on crafting hook}

Server side fix for invalid parameter to onCrafting

Proper fix for scroll list not covering all of the hidden scroll items.

Merge pull request #26 from GenuineSounds/patch-2

Incorrectly passing the IInventory of the extraction slot instead of the...
Merge pull request #25 from GenuineSounds/patch-1

Having the string trimmed to 9 made most long strings show a couple of p...
Incorrectly passing the IInventory of the extraction slot instead of the crafting matrix, get back to me on why it's doing this instead of the default behavior of ModLoader and Forge.
Having the string trimmed to 9 made most long strings show a couple of pixels at the very top and very bottom. ie
https://dl.dropbox.com/u/79514/2012-06-13_13.25.35.png
Fixed concurent modification exception in the ore registry.

Fix for potential concurancy modification exceptions

Fixed possible NPE when blocks havent fully initalized yet.

Updated FML to 132, TextureFX fix, and bumped revision to 6.

Fixed KeyBinding issue with ModLoader container, if you register a KeyBinding twice it will discard the old one. And fixed issue where getVersion() could return null causing NPE.

Made it so it will attempt to scale any Texture Effects that return data for smaller texture resolutions. Made the size descrepancy only a error for ITextureFX texture effects.

Added bouncer functions for functions we removed. Makes MagicLauncher shut up about missing functions {not actually missing}, and therefor makes users stop thinking its a life or death error.

New Ore Dictionary recipies. Allows for simpler Ore Dictionary integration with recipies. IOreHandler should no longer be used.

Added hackish workaround for Tessellator.textureID to provent crashing while we wait for Optifine to update.

Updated to FML 130

Fix up "errored" mod states so they actually read as errors

Fix up bukkit for biome code

Fix up biome handling for client and server

- Fixed client crash bug in add/remove Biome functionality. Arrays.asList() returns a fixed-sized list per java spec. Adding and removing biomes throws UnsupportedOperationException.
- Fixed same on server and added disabled removeBiome functionality. This touched a lot of classes as the nonWorking removeBiome seemed to be lots of places inconsistent with addBiome.

Tweak error handling - report the exception that caused the bailout

Fix parameter ordering in ticks

Update bukkit for world gen tweaks

Change world generation to expose a mod interface

Update bukkit for early load change

Attempt early initialization of Minecraft Forge

Update bukkit handler

Add in a server side WORLDLOAD tick

Fix ticking- need to register the basemod tickhandler *sigh*

Fix ticking for new name "GAME" vs "WORLD"

Update bukkit handlers

Reorganize basemod ticking to use ITickHandler. Introduce "GAME" tick vs "WORLD" tick for
mods that want to tick per world and "globally"

Expose a "clean" ticking interface and fix server tick loop for world ticks

Tweak width of description

Server side of ITextureProvider for Block/Item for compilations sake.

Backwards compatibility fix for ITextureProvider

Updated FML to 121 to fix world tick issues.

Fix for in game tick running when it shouldn't. Fixed some tabbing issue in crazy's PR.

Tag each Tessellator with it's associated texture ID.

All Items and Blocks now implement ITextureProvider, and have a setTextureFile(String) function, to support cleaner code in Mods and in Forge.

Updated MCP mapings. Moved the bulk of custom logic from RenderItem to ForgeHooksClient.

Merge remote-tracking branch 'origin/master'

Added kick info to disconnect event, updated to FML 120, keybindings, better image rendering in ModList ui.

Interm implementation of keyboardEvent for ModLoader.

Add static log() functions to the RenderAccessLibrary, and fixed up the logo rendering to better display the images.

Fix bug in cart functions where would always return null.
Merge pull request #14 from crazyputje/master

onTickInGUI fix. Thanks crazyputje! 

removed 'if (client.theWorld != null)' so it also ticks in the main menu
Fixed some inverted logic causing tress to not gen correctly.

Update FML to 117

Also, new hook in last commit for blocks to determine if they are able to be replaced by ores, for any mod that adds new world gen. Bumped revision up.

New Hooks addedf for custom tree/leaves. And better interaction with trees growing and rerplacing certain blocks. Should allow for ExtraBiomes to behave nicer, and RedPower to make there blocks un-breakable by trees.

Helps to have a retention policy

Helps to have a retention policy for runtime annotations

Updated to FML 115, added Forge Logo to the client dist, and in-game ModInfo page.

We now bundle CodexIBXM from PaulsCode. See http://paulscode.com http://www.paulscode.com/forum/index.php?topic=4.0 and the included license files for more info.

Add in bukkit proxy handler

More proxy code

Introduce a proxy side loader for mod use

Fixed GuiModList Logo rendering to allow for logos of different sizes to be rendered properly. Logos will render themselves full underneath the text, It is the modder's job to make it look good.

Updated to FML build 114

Update credits information

Update readme for the client side

Update bukkit handler to inject names at startup

Merge remote-tracking branch 'origin/master'

Fix up optifine detection properly

Update bukkit handler

Slight reorganization of texture ticking - accomodate optifine

Add in optifine visibility for the mod list. Will search for an "optifine_mod.info" file on the
class path if sp614x wants to add one to optifine.

Fix ticking on bukkit server

Fix ticking on the server

Implement missing language load hook for server

Tweaks to basemod setup

Bukkitside fixup

Merge branch 'bukkitreorg'

Merge branch 'bukkit'

Conflicts:
	common/cpw/mods/fml/common/IWorldGenerator.java
	common/cpw/mods/fml/common/registry/FMLRegistry.java
	common/cpw/mods/fml/common/registry/IMinecraftRegistry.java
	common/net/minecraft/server/CommonRegistry.java
	common/net/minecraft/server/IMinecraftRegistry.java
	common/net/minecraft/src/CommonRegistry.java
	common/net/minecraft/src/IMinecraftRegistry.java

Fix copied code. Derpbag.

Update FML with recent mainline changes

Update bukkit with new mod fixes

Damn you bukkit with your same names for different classes!!!! EntityPlayer->EntityHuman

Fix chunk generators for bukkit

Bukkit version

Merge branch 'bukkit' - massive code reorganization for fml 2.0

Conflicts:
	common/cpw/mods/fml/common/IWorldGenerator.java
	common/cpw/mods/fml/common/registry/FMLRegistry.java
	common/cpw/mods/fml/common/registry/IMinecraftRegistry.java
	common/net/minecraft/server/CommonRegistry.java
	common/net/minecraft/server/IMinecraftRegistry.java
	common/net/minecraft/src/CommonRegistry.java
	common/net/minecraft/src/IMinecraftRegistry.java

More tweaks for proper API

Reorganize for bukkit integration

Fix project, new gui layout with screenshot, thanks Sengir!

Included fmlversion.properties in the release zips.

Added FML ReadMe, Credits, and License to release zips

Updated to FML Build 95

Updated patches for FML, moved some extranious code to Forge classes instead of patches.

Updated MCP Mapings and patches.

Added FML mod info file

Add in missing hooks, add branding information to the crash report

Cleaned up names for Minecraft Forge's text files so they dont clash with other mods. Fixed up the release script to include the license text, and executable permissions for install.sh.

Added new source clean step to fix linux vs windows astyle issues.

Update FML to 92, this include full client side support, ModLoader nolonger needed.

Fixed regex issue in last push.

Fixed up for newline before case bodies.

Should fix windows {me} generating different patches then linux {cpw}

Bump version number for official release.

Move first tick to the real first tick

Merge in the mod texture changes from Lex

Fixed location refs to fmlversion.properties

Add in a static render access class for optifine and other render editing mods to use

Add in a "world load" tick fired just as the world completes loading. This SHOULD fix millinaire.

Changing up the mod list data

Fixed up ModTexture* classes to use the ITextureFX events to resize the image as needed. Also fixed ModTextureStatic's not being applied properly.

Fix up two stupid overwrites in my mergeup from lex

Fix derp in MTS

Patch fixing

Update some stuff for updated tweaks

Update FMLClient with my changes

my tweaks

difflist should include server and client now.

Some patch cleanup.

Rewrote how HD Texture support worked, to make it easier for Optifine to integrate.
Fixed TextureFlamesFX for extramly large texture sizes.
Fixed the texture size sceme to allow for different sizes of textures in the same pack.

Line number changed..

Fix up the watch

And some tweaks to the texture handling

Fix up some fubars in MTS and MTA

Lots of error handling.

Missed a patch *sigh*

Add simple API to allow mods to let their textures be overriden by other mods

Because, of course, I broke the first build...

Some logging of texture overrides- also, only unregister if it's an actual ModTextureStatic, not if it's a subclass.

Derpy exceptions derpy exception handling

Remove the dependency in RenderEngine, decided on the simple API for texture FX

Tweak the render patch- we won't fail if the updateTexture call fails

Update patches: add in a setup for most of the texturefx classes

Tweaking texture loading

Fix tileSize -> iconTileSize. Stupid MCP

Catch throwable (NoClassDefFoundError) and don't abort loading- it's probably a badly named class file.

Fix some derpy

Update patches for hd textures

Change hd texture handling

Refresh the renderengine patch- catch and log some texture pack reload errors

More mod list fixes

Lots of cleanup on the mod list, pretend we're the mcpatcher for mod HD detection.

Fix up fubar in worldprovider. Add in obfuscation detection. Capture the exception that crashes minecraft in the log file.

ModLoader worldtype hackery compatibility

Fix derp

Only log the warning once per texture

push patches

Fix millinaire support. Fix Portal eating rendering time. add in profile visibility for mod stuff.

Fix the serverside. FUUUUUUUU!

HD patching complete? Clean up mod info data, Dummy field for dummy mods

Improving the scroll list, HD texture patches

Actually pass in the mod name

Fix up incorrect dependency handling

Fix stupid problem with braces

Tick only when there's a world

Fix nulls in the mod list, start building the gui screen

Gui related ticking

Try always loading the language data

Always load the "en_US" langpack into the translation table first, then the actual language.

Derpy derp- fix stupid pointless cast

Fix missing ml.sendpacket, call in renderers

Actually mark the sprite as used when you allocate it!

Helps to add the new hook!

Hook texture pack changes and loads so we can register override textures

Fix problem with nulls in getModList
Work on the meta information file

More tweaks to stuff: mod list, branding, more hooks

Tidying up and more hooks

Tweak block rendering organization. Add in worldgen for client.

Tidy up a lot of code- ModLoader and BaseMod are now almost identical client and server side

Tweak ordering for sorting- should be a stable sort now

Update git version capture

Ignore jenkins tags

Tweak some build stuff for versioning

Update build to actually put Loader in...

tweak location of build properties in src jar

Lots of tweaks to mod output pretty printing. new versioning scheme.

Inventroy rendering

Fixed up the ModLoader render block hook, RP's blocks now render.

Should fix colliding model ids with MC's internal IDs
Fixes

Fix up build script a bit, all modloader is public, and fix tile entity renderer

Add in some more stuff for handling key bindings, rendering

Reorganize ticking a bit

Separate sprite handling, fix worldtype

Working on the ticking stuff

more client side hooks and Texture overrides/animations.

Halfway through ticking- won't compile

Fixed AudioMod compatibility with MultiMC style launchers.

Bit masked the entity ID to change the range from -127-127 to 0-255

ModLoader moves forwards

Let's get hooking!

API is restored for client side. Implementation starting.

And some patches for that

The beginning

Introduce the client side FML

Implement addBiome, hopefully. Pushes biome list to the WorldType field. Sorry Bioxx.

Check in some eclipse crapola.

Updated MCP Mapings

Added forge identifier to statistics collection.

Fix for furnaces not smelting the final item in full stacks.

Merge pull request #55 from CovertJaguar/patch-1

Added getters for version vars.
Fixed Levers droping off the backs of stairs client side.

static final vars are inlined during the compile step, making the version variables useless at runtime.
Fix copied code. Derpbag.

Update FML with recent mainline changes

Merge branch 'master' into bukkit

New block hooks for creating custom beds.

Merge pull request #54 from cpw/master

Update to fml 74- fix a problem with MLProp and primitives
Update to FML 74: fixes an important issue with MLProp

Fix a small issue with the build output script
Fix a significant issue with MLProp handling and primitives- they work now

Bumped revision to 3

Fixed Vinella mob spawning bug that prevented mobs from spawning on the top most chunk. Added new Block function to determine if a Mob can naturally spawn on the block. Add new hook to allow for special case handeling on natural entity spawn.

Fix for loading Minecart Entities in worlds that were last accessed before Forge was installed.

Moved MLMP compatibility functions to ModCompatibilityClient, and fixed issue where no vehicles would be spawned.

New ISoundHandler interface, useful for adding custom sounds and dealign with sound based events.
Includes basuic AudioMod compatibility.

Fixed vinella bugs when trying to access chunk information with a y < 0

Added MLMP hook invocation for vehicle spawn and opening GUI's to provide compatibility for clients that have both ModLoaderMP and forge installed.

Updated to FML build #73

More text fixup

Typos

Add in detection for MLMP and try to fail with a graceful message.

Exposed TileEntityData packet to TileEntities. And added helper sender function.

Added metadata sensitive Chunk constructor for Bioxx

Added MinecraftApplet.clas to the force output list because users cant understand the concept of only replacing files they are told to. And bumped version to 3.1.2

Implemented a 'small' packet system for those mods that need to send rapid, small data packets and who are concered about the overhead of the 250 payload packet. It uses packet 131.

Fixed shift-clicking issue with items that utilized the new ItemStack sensitive smelting system.

Added generic packet sending function to MinecraftForge class.

made the ID in PacketEntitySpawn unsigned.

Update bukkit with new mod fixes

Merge branch 'master', remote-tracking branch 'origin' into bukkit

Tweak the loader a little bit to just use file names, not fully qualified directories when referring
to mods.

Implemented  RichardG's Paged Achivement list GUI modifications.

Merge pull request #51 from ShetiPhian/patch-1

Edits enable use of EntityPlayer.canHarvestBlock (for PlayerAPI)
Respawning in dimensions should now properly set the dimension ID for the new player instance.

MAX_ENTITY_RADIUS Now works on the Y axis

Edits enable use of EntityPlayer.canHarvestBlock (for PlayerAPI) when the ToolClass has no rules for the block.
Fix for vanilla crash for chunk generation with block ID's above 127.

Damn you bukkit with your same names for different classes!!!! EntityPlayer->EntityHuman

Fix chunk generators for bukkit

Merge branch 'master' into bukkit

Merge pull request #49 from cpw/master

Update to fml 68: fixes a ticking issue and soft vs hard dependencies
Update fml to build 68: fixes a ticking issue and soft vs hard dependencies

Changed entity Forge spawning code works to be more in line with normal spawning:
(World, double, double double) constructor is nolonger called, normal (World) constructor, and setPositionAndRotation is called afterwords.
yaw, pitch, and yawHead is sent (if the entity isn't a EntityLiving yawHead isn't used)
The datawatcher data is also sent like a normal Entity.

Bukkit version

Added variable entity radius to World, to be used if a mod make really large entities.

Fixed bug in BlockFire's old fields.

Fix "soft" dependencies so they can exist properly

Fixed TileEntity bug that was causing Ghost tile entities.

Multi-pass item rendering now uese proper render pass number.

Added slope velocity hook for Covert

Fixed bugs in the Dimension transfer code, Now displays proper join message, and respawning in dimensions other then 0 works.

Try to fix jenkins build.

Merge pull request #42 from CovertJaguar/patch-2

Added a function for checking block harvest levels.
Added a function for checking block harvest levels without having to resort to reflection.
Fix server patch

Merge in fixes from chickenbones for tick related problem
and straighten out variable naming in ModLoaderModContainer

Added ItemStack sensitive burn time hook.

Added new Item function to allow for multiple rendering passes.
Fixed a vinella bug where item layters would not line up for EntityItem's
Added new IItemRendere helper flag for 3d block translations.

Rewrote IItemRenderer to be a more generic and expandable version, Breaks previous interfaces, but this should be the last time the interface changes.
Implemented the MapRender hook ChickenBones requested.

Merge pull request #39 from cpw/master

Update to fml 62: adds in a couple of fixes
Update FML for new hooks: onPlayerLogout and onPlayerDimensionChanged

Push the patched file, as well

Add in more "Player" related events. Fix up some MLProp stuff

Fix regular expressions, thanks ChickenBones!

Update fml to 62- provision a server console command and fix mod loading order

Tweak Console handler patch so we're more friendly to forge

A proper console command handler, also fix ordering of loaded mods

Merge pull request #36 from cpw/master

Update to fml 58, separate the "register" and "announce to mods" phases of login
Add in a console command handler so you can access the command console

FML 59: don't send a zero length register packet, add mod channels

Don't send a register unless I have channels. Add the channel to the mod channels list.

Fix separated login/announce handler

Split the packet salutation in two so we can work with or without forge

Merge pull request #35 from cpw/master

Update to fml 57, fixes the fact FML wasn't calling it's onlogin hook
Update to FML 57: fixes FML not calling it's login handler code

Add the player object to the onLogin event so you don't need to dive internals for it during login

Call my handleLogin hook from NetLoginHandler, tweak output in server gui and log file.

Changed IGuiHandler's signature to be compatible with both sides. Took out ModLoaderMp reference in README.

Couple of output fixups and added script to be executed by Jenkins during the build. First test build.

Add server spawn protection config option as per someh4x0r's request.

Implemented ISaveEventHandler as ChickenBones's requested.

Updated patch for mapings

Added ChickenBones's request ITextureLoadHandler hook

Rewrote the login code to delay full login untill forge fnishes negotiating network IDs. Should fix entities not having proper ID mapings.

Merge pull request #33 from cpw/master

FML tweaks and a fix to release.py
Delete the old one too

Add in recent fml with fixes

Fix release script to import "inject_version"

Fix subdirectory loading properly: mods will load inside eclipse..

Actually figure out the path for directory class loading

regular expressions in java==fail

Recurse into subdirectories found

Try multiple "jar" sources- for eclipse testing

it's addURL not addUrl dumbo

it's getdeclaredmethod, dipstick

Fix package private resolution of fields/methods from base minecraft by loading into minecraft's class loader not our own

Add in a missing client side method to modloader stubbed for the server

Update patches for FML fix.

Add the hooks for crafting and smelting

Finished up converting the source dist install scripts to python. Fixed a couple issues with the other scripts.

Should load from whatever minecraft comes from now...

Updated repo scripts to python, allowing more flexability and less code duplication.

Fixed update_patches.py to now delete old patch files that have no working src relation

Deleted patches

Initial patch update to FML and MC 1.2.5

MCP Conf update for 1.2.5

Build should work now. Fix a stupid javadoc import.

New build script- version the src dist as well

Documentation: lots
Some eclipse workspace settings that might help?

Handle the minecraft object registry better- now the client compiles too
Also a quickie astyle run over the code..

Update the patches and fix the shell script

Reorganize the code a little bit- move some stuff that was on FMLHandler to the common handler. Add a delegate
into the common handler that delegates to the right sided handler

Clean up extraneous print statements from the build

Fix INSTALL-fml.txt file location in the server zip

Append a .class to the diff file list. Now you should just be able to iterate it and read every file in it directly.

Run Astyle over the FML code. Happy lex?

OK. Now the script works

Crap at writing good python apparently

Tweak file list script to print obf names

Merge remote-tracking branch 'origin/master'

Rebuilt patches with new scripts.

Cleaned up update_patches to fix a few bugs. Updated applypatches to normalize the patch file's line endings to make them work cross platform. Added download_firnflower and setup script. As well as added the GnuWin32's diff binary, so windows can create patches as well. http://gnuwin32.sourceforge.net/

Created eclipse workspace, should allow simple and quick access to working on FML

Missed a couple of wording tweaks
Tweak the build a bit, add some more data and generate the
touched file list for forge
Tidy up some of the installation media
links to implementation
Channel validation
NetworkHandler doesn't care about channel ownership
Update patches for network handler
Modloader complete
Generic container
Config dir handling
MLProp
Mod sorting
Everything except ordering

Fix build script for generating md5s

Update to 1.2.5 and hopefully forge compatibility

Implemented a chat event handler system to allow for manipulating and handeling the various chat/command events.

Add IChunkLoadHandler.canEntityUpdate() function to allow entities to update while in custom loaded chunks.

Some cleanups to update_patches, should run properly on any system now.

Fix some shadowing warnings.

Forge support

Initial attempts to support forge stuff
Fix NPE
More logging and maybe fix default package mods
Logging fun. Whee!
Fail
More logging
Tweak class loader
Add more patches
Some implementation
tweak MC server hook
some build and logging tweaks
Fix build
Fix derpy
Tweak loader a bit
Fix patching
More build stuff
More building fun
fix build script
Add in more ignore stuff and a sample "fmlbuild.properties" file
More build stuff, adding in readme etc copied from forge
Move more stuff around

Build system

Start patching fun
Ignore stuff
We're Forge Mod Loader, not Forge ModLoader
Tweak license to refer to github

Add licenses reorganize code

Starting to get somewhere

Thoughts on how to do the modloading properly

Tab cleanup

Initial commit

Fixed camelcasing in IConnectionHandler, ment to do during first upgrade.

Changed update_patches script to use python for the bulk, Prevents making 1800 temporary useless files.

Fixed typo bug in MinecraftForge.getEntityTrackerInfo

Updated to MC: 1.2.4 MLMP: 1.2.4 v1
Removed all code that was marked as deprecated, IE: ICustomItemRenderer, and the functions in Configuration

Reworked EntityPlayerMP.openGui to hopefully be more compatible with PlayerAPI

Cleanup the EffectRenderer patches, Allows custom food items to have the proper particals. Cleaned up special case class in favor of basic java generics.

Added rider sit pull request.

Fixed a couple of bugs in the Configuration categories pull request.
Added helper functions to Property for standard int/boolean usage.

Merge pull request #22 from CovertJaguar/patch-5

Added the ability to define custom categories for config files.
Updated MCP mapings

Removed createCategory() function and changed it to create categories as they are encountered.
Added the ability to define custom categories for config files.
Added MinecraftForge.isClient() function that returns true if you are in the Minecraft Client,  (As defined as net.minecraft.client.Minecraft existing) false otherwise.
Fixed a typo on PacketEntitySpawn that caused speed to be assigned improperly.
A little code cleanup.

Implemented Pheenixm pull request allowing for more control over the camera.

Changed logic in Configuration to allow for extended block ID mods easier access to change that. Just use reflection to change Configuration.configBlocks to whatever length you want.

Fixed NPE on CustomPayload packets with 0 data

Fixed a few typos that CovertJaguire found in The Forge entity handeling code. And re-wrote the connection sequance so that clients get a list of mod ids before anything else.

Readded the deprecated interface ICustomItemRenderer. Added method to enforce deprecation cross Minecraft versions.

Bumped version number to 1.4.1

Merge pull request #15 from newthead/master

Improved Custom Item Render Interface
Merge pull request #16 from CovertJaguar/patch-3

Fix for network code.
Fixed dyes showing twice in creative list

Reverted vanilla texture binding to an explicit if() statement based on item ID

Changed render hook checks to all use ItemStack instead of itemID

Fixed tile entities not properly being removed for blocks that do not extend BlockContainer, or override BlockContainer.onBlockRemoval

Fix for network code.
Fixed a class to a deprecated method to fix tool effectiveness.

Fixed excessive need for user interaction in the install script.

Merged item rendering interfaces into a single IItemRenderer

Fixed IOException not found error in CovertJaguires pull request. Updated scripts so that build should now be fixed

Reworked the workspace scripts so the build should fail on compile errors. This build should fail as a test.

Modified patches to use new item render hooks

Updated render hooks and registration to use the IItemRenderer interface

Merged item rendering interfaces into a single IItemRenderer

Merge pull request #14 from CovertJaguar/patch-2

Added throws clause to ISpawnHandler functions...
Fixed onTakenFromCrafting hooks to be called once per stack taken. Sadly due to how shift-click is handled, the passed in item stack is not garenteed to be the stack that the result was added to.

Added additional flag for rendering entity item bobbing

Cleanup/fix item render hooks

Added render code for inventory items and entity items.

Added remaining item render hooks, and fixed a static method access

Clarified render option for inventory items

Added hook for rendering equipped items

Added new item render interfaces to Forge client

Added throws clause to ISpawnHandler functions to keep the functions consistent with similar functions and increase ease of use. Exceptions are already being caught everywhere these functions are called, so no further changes required.
Made BlockStairs, BlockFarmland, and BlockStep have proper sided-solidity. Can now place torches on any solid side of those blocks.

Proper fix for SDK's invalid bit shifts of parameters for chunk population

Fixed type on patch conversion messing up tile entities

Fixed sides of grass not getting biome colors

New EntityInteract hook for handeling player vs entity interaction on the global level vs the item level.

Fixed forgotten type identifier in clean_src

Merge pull request #12 from cpw/fixworldgen

Fix worldgen doubleshifting in ModLoaderMP until SDK fixes it.
Fix worldgen doubleshifting in ModLoaderMP until SDK fixes it.

This means mods can generate surface and nether in SMP again.

New script to fix decompile differences between windows and linux/osx.
Removed the MLProp special case, no longer needed as MLProp decompiles fine.
Updated patches to work on all systems.
Added warning and exit if the user does not say yes to the cleanup.

Fixed a merge error.

MCP Update.  Fixed a few small bugs in the linux scripts.

Custom dimensions should now honor the canRespawnHere function for respawning.

Fixed a wrong argument for dimensions, should fix entity tracking.

Fixed the inverted logic in the missing mod check.

Fix up Configuration ids to only work for 256 ids until Jeb finishes the 4096 conversion.

Merge remote-tracking branch 'origin/master'

Fixed a bug where vines were not shearable.

Merge pull request #11 from CovertJaguar/patch-1

Fixed a minor bug with the Minecart Dictionary.
Fixed a minor bug with the Minecart Dictionary.
1.4.0 official release.

Updated to MLMPv3

Implemented ChickenBone's Chunk handler

Hack-fix for players getting stuck during logins. Detailed fix when bug is actually tracked down.

Updated to latest MCP

Fixed client side bonemeal on grass only making flowers

Removed improper tile entity negation

Fixed a generic tile entity line i missed on the server side.

Fixed MLMP thinking Network mods need a client side when they dont.

Updated to SDK MLMP v2

Fixed missing double array in MLMP's packet server side. Also, fixed the creative code again, brain failed.

Updated to SDK's 1.2.3 MLMP, Mush cleaner, no longer supporting Flan's.

Got my comparitor turned around

Updated gitignore, fixed digging particles, fixed creative container showing to many blocks, fixed wrong argument for custom renderers.

ItemBlock now implements ITextureProvider so that blocks with custom textures will showup properly when being held.

Updated MCP's patch files. Fixes hangs on running MC as applet.

Cleanup of ModLoaderMP and proper update to the latest version of ModLoader

Fixed directory issues in the setup script

Fixed NPE in the login handler

Updated MCP mapings files

No longer mark forge packets as chunk packets.

Fixed missing space in linux scripts

Updated for MLMP 1.2.3 v1

Made the scripts forge updating md5s/mcp/names

Missed damageCarryover on the server

Small imports cleanup

First push of server side patch updates for 1.2.3. MLMP is still not updated so it does not include those changes, and will not compile.

Deleted unneeded server side patches, Packet250 bug was fixed. And the others got moved to AnvilSaveHandler

Couple of things I missed client side

Bit of a cleanup of the client patches

Client side initial patch update to Fernflower and MC 1.2.3

No longer needed, bug was fixed

Same patch diff, files.

Conf for 1.2.3

Deleted EntityPigZombie patches, Who needed these? Why could you not do this via reflection?

removed unneeded import, and fixed casing of args in IShearable

Fixed unneeded imports in ForgePacket

Made mod_MinecraftForge extend NetworkMod, and changed NetworkMod to extend BaseModMP server side.

Updated The Json enum helper to point to the new packaged names. And fixed a casing change in ModLoader

Updated eclipse project for MCP 1.2.3's inclusion of the Start folder in the src folder.

Deleted modLoaderMP.patch, unneeded now that we use Fernflower

Updated scripts so that we use Fernflower now. Added a small python script to download fernflower for the user. And the scripts exit out if it fails.

Bumped version to 1.3.4, final commit for Minecraft v1.1

Fixed bug in build script that caused the Minecraft/MinecraftServer classes to not be included.

Client side of the new Dimension support.

Fixed compile error for the spelling pull request.

Fixed ITextureprovider for multi-textured items when rendering on the GUI.

Merge pull request #4 from Deveducer/master

Fix spelling error
Fixed spelling mistake ('Frequancy')

Merge commit

Ran AStyle over forge code for uniform code formatting, and refactored old code a bit to have cleaner names.

Deleted Deprecated interfaces.

Fixed line endings in windows update_patches

Fixed up Shearable blocks to play nicer with sub-classes.

Merge pull request #3 from Deveducer/patch-1

People may think the server needs the mods to continue and not the clien...
People may think the server needs the mods to continue and not the client.
Fixed a bug in update_patches that caused apostrphies to be removed. Causing the last patch to be generated incorrectly.

Initial attempt at server side extra dimensions support.
Mods must register there dimensions on load, by calling DimensionManager.registerDimension(uniqueID, WorldProvier, boolean)
Mods are resposible for writing there own transporter blocks.
Initial commit, needs some more testing and design thoughts.

Implemented a response to Methuselah96's Arrow hook request. See IArrowNockHandler and IArrowLooseHandler

Added new Item.getIconIndex context sensitive version.

Moved Client side EntityPlayer.openGui work code to EntityPlayer for compatibility between player API.

Introduced some debugging info into Forge packets. And a debug flag in the client and server packet handlers.

Marked forge packets as 'chunk' packets. Giving them a higher priority making the initial mod list check more reliable.

Changed the layout of the missing mods gui a little. Still needs a lot of work to look good.

Fixed linux scripts, fixed TE bug.

Merge branch 'master' of github.com:MinecraftForge/MinecraftForge

Linux scripts fixed, TE bug fix.

Implemented a generic EntityPlayer.openGui system, and the network backend for it to work on server and client.

Expanded the Mod check to test for missing mods and display a GUI screen for the client if it is missing any.
The client now downloads NetworkMod ID's from the server upon connecting.

Introuduced NetworkMod, a BaseMod extension and replacement for BaseModMP. All mods that are designed to work in the server environment should extend this.
NetworkMods will be assigned unique ModIDs by the server, and those IDs will be sent to the client upon connection.
Refactored Forge packets to the net.minecraft.src.forge.packets package. And introduced the base ForgePacket class.
Added initial ModList request/response.

Exposed getters for NetServerHandler.playerEntity and NetworkManager.netHandler

Fixed up the install scripts. The linux script no longer needs sed. Should fix some issues on OSX's without gsed.
Also forge sources will only be copied to sides that were downloaded.
Also, install scripts now prompt for input to cleanup.

Split mod_MinecraftForge so that Clients arnt required to have MLMP installed if they don't use a MP mod.

Bumped version to 1.3.3

Small update to update_patches.bat, to skip patch reject files.

Update MCP Mapings

Refactored so that ISpecialArmor items do not see the factor of 25 on the damage.
The value returned form ISpecialArmor.getProperties is now copied, so mod items are free to re-use there return values.

Reworked ISpecialArmor to provide better functionality as requested by IC2 devs.
Armor can now be prioritized over other armor.
It can deal with damaging it's own itemstacks.
Also impkemented the ISpecialArmor.getArmorDisplay

Implimented a new IShearable system. This allows mods to create both new shear-like items/blocks. As well as new Entities/Blocks that work with other mod's shear-like items.

Implemented item.onBlockStartBreak call for creative single player.

Added Item.onLeftClickEntity hook. Used to intercept and cancel the 'attack' action within items.

Fixed ITextureProvider support for items that have multiple colored overlays.

Lowered the amount of build log spam, and fixed the inject_version script for use on other systems.

Missed a caluse, ISpecialArmor should work as intended now. And not destroy Armor instanatly.

Implmented Sengir's IPickupHandler.
http://www.mod-buildcraft.com/forums/topic/hook-intercept-item-pickups-by-player-entities/?view=all

Merged in the change to ISpecialArmor to introduce the DamageSource argument.
As well as the concept of damage absorption vs reduction.

Created a Entity tracking ans spawning system.
Mod creators should call MinecraftForge.registerEntity to register a entity.
All entity ID numbers are Mod Unique. Meaning two mods can have Entity #1.
Added client and server side packet handlers for the 'Forge' channel. For use in internal packets such as the new Spawn packet.
Updated the build scripts to copy over unique server source files now that there actually are some.
For modders:
  If you have a entity that used MLMP's 'owner' system, you should have your entity implement IThrowableEntity
  If you have a entity that implments MLMLP's ISpawnable, you should implement ISpawnHandler.
They provide the same functionality, just in a cleaner, more orginized way and will be the method used when we eventually drop MLMP.

Fixed return value for un/registerChannel. Now returns properly indicate when un/register commands should be sent.

Setup .gitignore for eclipse bin dirs.
Fixed line endings in install.sh
Added mod_MinecraftForge for simpler logging of minecraft version in crash reports
Added new hooks for connection events, See IConnectionHandler for more details.
Added Packet250CustomPayload handeling and channel registraction management, see MessageManager and IPacketHandler for more details.
Forge now uses unsed fields in C->S Packet1Login to identify itself. None Forge clients will get a graceful disconnect message instead of the 'Unknown packet 230'

First official commit for GitHub. Using to test build automation system firing from final configuration.

New parameter for setup script to skip the initial decompile. Used in the build system to speed things up.

bumbed version number

Potions are not armor.

Reorganized SpecialArmor code to work properly.

Some typo fixes

Updated for MCP Mappings

Streamlined the Setup, Build and Package scripts:
On windows they no longer need the user to press enter every step
Moved version info out to version.txt, This will only effect the svn. If you update the version do it in version.txt not in ForgeHooks.java.
Introduced the build number into the version string.
Cleaned up some extra echos in scripts.

Reach and Rail bugfix

bumped version number

Install.cmd now tries to add the system folder to the current path. 

Disabled updatenames int he isntall scripts till MCP fixes the reobf issue.
Updated to MLMP 1.1v2, Which says it fixes bugs it doesn't But it does fix the packet bug.
Fixed a bug in Packet 250.

Updated MCP mappings

Fixed the Minecart Drop bug

Fixed a bug that caused snowballs to drop incorrectly.



Small update to ContainerCreative hook for better compatibility with mods that extend block IDs.

Fixed getCartClassForItem and getCartTypeForItem

Bug Fix for Chests staying open on MP Servers
Implemented reach distance variable

Fixed a few accessors I missed:
Server RailLogic.getNAdjacentTracks public
Server TileEntityFurnace.getItemBurnTime static

New GUIControls change, Made it into a scroll panel instead of a static position window.
This just makes things look better when multiple mods with KeyBindings are installed

Fixed a mapping issue with client side TileEntityFurnace patch

added missing files

removed files from previous version

bumped version number

merged with 1.1 branch

Bumped version number
Added initialization to ModLoader's log

Fixed an unroll from the MCL merge.  Updated MCP mappings.



Fixed NPE on some JVM's

Merged in MCL branch

Improved the ladder hook.  Added a new hook for sustained-use items.



Fixed MCP mappings again.  Fixed the Entity NBT code.

Added a new hook to support custom enchantments.



Updated MCP Mappings.



Fixed faces for BlockFire

Refactored a bit of the TileEntity code so that ANY block may now have a tile entity. 
This is to allow modders the ability to extend blocks other then BlockContainer, and still be able to have a TileEntity.

Also added a NBTTagCompound to the base EntityClass, this allows any entity to be given arbitrary data that will persist across world saves.
This data is NOT sent over the wire in a MP situation, to have data sent over the wire automatically use the built in data watcher.

bumbed version number

Changed Block.setBurnRate to public and Block.setBurnProperties
Re-added bounce functions to BlockFire for non-forge mods.
Should fix Optifine compatibility.

Fixed a re-name that somehow missed the commit.
Serverside chanceToEncourageFire -> getFireSpreadSpeed

Fixed some rendering issues.



Another mapping update.



Updated mapping for last commit

Mapping updates.



Re-added BlockFire's properties, apparently some people access this by reflection.

Bumping the version number.



Fixed some strange behavior in snow blocks.  Fixed a missing patch checkin.



A minimalistic hook for rendering world effect overlays or other 3D overlay
data.



Major rework of the rendering core.  Added support for custom render context
handling.



Added Item.onDroppedByPlayer hook

Deprecated IUseItemFirst, and made onUseItemFirst work in Creative.



Added server side prototypes for addCreativeItems()s They are unused, but declared for compiling compatibility. 

Added hooks to BlockFire for setting block flame interaction properties.

Replaced dropBlockAsItemWithChance in BlockNetherStalk with getBlockDropped.

Fixed a minor crop fortune bug.



Commit of a hook for adding items into world dungeon generation.
Uses a weighted random selection scheme.
Also a hook for adding custom mobs to the dungeon generation list.

Updated mappings

Implemented ISidedInventory for Brewing Stands.
Top is input, 1 slot
All other sides are output, 3 slots.

Added missing native library path to forge_client project.
Added harvest levels/effectiveness for Axes and Shovels.


Fixed a zLevel bug with custom item renderers.

bumped version numbers

Fixed seeds/wheat not dropping from Crops/TallGrass.
All future Forge code should use proper annotations when Overriding.

Small fix to decrease the number of glBindTexture calls that are immediately overridden.

The install scripts will now only patch the client/server if they are there. 
This allows for people to only worry about getting one side setup correctly if they don't care about the other.

Fixed a infinite recursion loop in spacetoad's commit to Block.java.patch
Added @Deprecated annotations to the 'backwards compatible' functions spacetoad re-added.

Made changes to the install scripts:
-Will overwrite the current MCP mappings and use the ones that ship with forge, this 
    should eliminate all the issues of people not being able to install it because they updated there mcp.cfg
-Will now move fernflower.jar if it is found, so that MCP will not decompile using it.
    Should fix the issues of people trying to use forge with fernflower installed.
-Will call updatemcp/updatenames so that users get the latest mappings for unmapped items.
-Also calls updatemd5s so that the forge API is skipped when spitting out reobfusicated files.

Update the readme to be more accurate.
Added my name to the credits :P
Updated the update_patches/package scripts to account for grabbing the conf folder.
Added GnuWin32's grep


bumped version number

further backward compatibility fixes

Added my EnumHelper classes, this allows for dynamic creation of Enum values at runtime. 
See My post for a example:
http://www.minecraftforum.net/topic/514000-api-minecraft-forge/page__view__findpost__p__10948540

Missed some mappings

For for updated mappings.

added server side of the previous commit

fixed backwards compatibility

Fixed fortune enchant.
This breaks forge's quantityDropped signature, be careful when updating mods.

Cleaned up a few things related to MLProp
Deleted unmaintained fernflower patch.

Added a hoe handler for advanced farming.



Added new tool harvest intercept hook.  Removed mlprop.patch.



Moved dye creative adds to the ItemDye class.

Creative Container population hook.

Fixed missing CraftingManager patches for the repair disable hook.
Fixed smp mlprop.



Added MLprop.java that ST forgot when he merged.
Fixed EntityPlayer.getPlayerStrVsBlock metadata function for 1.0.0 changes in Enchantments/Potions.

bumped version number

merged with pre-1.9p5 branch, for 1.0.0 release

fixed mapping

New block destruction hook.  Deprecated IOverrideReplace.



Updated MCP mapping, backed out a useless patch.



Added some IC2 items.



Changed a field permission for MFR.



Small TileEntity fix.



Added a few more known ingots.



Bugfix for numeric range of mob and window IDs.



Fixed TileEntity caching.



Patch for a small activation glitch in doors.



MCP update.
Fixed a problem with TileEntity sending.



Rolled in a critical MLMP fix, because MLMP is virtually unmaintained.



Added ore dictionary.



Fix for new MCP mappings.
Fixed the distribution of flowers with bonemeal.
Fixed accidentally making obsidian easy to mine.



Fixed line endings in install.sh

Updated the package.sh script to include the patches, the new install.sh, and modLoaderMP/mlprop.patch

Changed the windows setup to use del instead of remove.
Both update patches scripts no longer remove svn entries.
Added the forge_client\bin and forge_server\bin folders to the svn ignore.

bumbed forge minor version

reactivated special armor code

Made the windows setup script a bit more robust, also made both scripts filter out non-patch files. {Issue with svn files}

Fixed a bug in forge_client project that had a hard link to E:/MCP/jars/bin/paul.jar now points to MCP/jars/bin/minecraft.jar {has the same paulsound libraries}
Major refactoring of the patches, now each modified file gets its own patch file.
Rewrote all the scripts to use new multi-patch system.
Added linux install.sh using new system.
Added some required libraries from GNUWin32 for the windows side of the new setup.bat/update_patches.bat http://gnuwin32.sourceforge.net/

Changed a field permission.



Fixed another TileEntity bug.



ISidedInventory is now explicitely an inventory

Fixed the MCP mappings.



- Added an ItemStack parameter to IArmorTextureProvider
- Added ISidedInventory
- Added IBonemealHandler
- Added hooks in grow-on-grass and in break tall grass.
- Fixed furnace output of multiple items.
- Added getBlockDropped().
- Bumped version number to 1.1.1.



Hopefully fixed the major TileEntity bugs.



Fixed TileEntities, bumped version number.



Fixed digging particles.



Added a fix for onItemUse regression.



More MCP mapping fixes.



Undid that.  Whoops.



Code to remove a single block effectiveness.



Metadata-sensitive quantity dropped.



Fixed up a few bugs in the tool path.



Fixed another bug in the furnace patch. Works now.



Small bugfix for furnace patch.



Metadata-sensitive smelting patch.



Fixes for MCP updates.



Fixed the 1.8.1 version for MLMP support.



A bunch of little patches to make it actually build for 1.8.1.



First attempt at a 1.8.1 version.  May not work.



Unrolled a mistaken fix.



Another try for osx.



A small fix to hopefully make the script work on a mac.



Redesigned TileEntity handling.



fixed SMP bug related to BuildCraft issue #226

A few small patches to fix obscure piston rendering bugs.



Optifine compatibility patch.



updated to latest MCP, and added custom item rendering facilities

Improved trapdoor hook.



New lighting hook.



Fixed new MCP mappings.



bumped forge version # to 1.0.6

added ArmorProperties constructors, remove deprecated subprograms (supposedly not used by anyone)

fixed headers, implemented new armor computation for IC2

Fixed the permissions on a couple fields in ItemTool.



temporary reverted to r61

updated credits

Patched the installer again.



Fixed a typo.



Small RedPower-specific patch.



Added armor texture hook.



New install script for Windows.



Fixed the version number.



Changed some field permissions.



Handler for custom block highlight.



Version control logic, improved the destroy handling hook.



Improved BTW compatibility.
Finished the placement hook changes.
Added a sleep handler.
Added a current item destroyed handler.



Checking in the new crafting hook.



Added a little support for two-pass rendering.



Forgot the forge hooks.



Updates:
- Added warning message for non-preloaded textures.
- Documentation
- Ladder fix for SMP.
- Obsoleted IBlockSecondaryProperties
- Added hooks for place-by-side.
- Fixed texture 3 and piston texture bug.
- Added new tool system.



Added patches for decompiled by fernflower source. Client only, and not tested enough. Using is currently not recommended.

Uploaded new install file.



Fixed for the new version of MCP.



Uploaded install fix.



The ladder hook.



Fixed a typo in isBoundingBoxBurning.



updated list of contributers

updated release and package script to take into account credit file

renamed file

initial revision of the credit file, to be completed

Added a comment.



Added a small patch to MovingObjectPosition.



Not really a change.



Added a texture preloader to avoid render glitches on the first render.



New multiple-tessellator texture renderer.



New install script for Linux users.



improved installation and setup scripts

Added secondary block properties patch.



Fixed a little path bug.



Improved the setup scripts.



Fixed bugs in the pickaxe code.



Improved some documentation.



removed inner classes, remove redundant biome control

fixed files for release

additional comments

added comments

fixed exceptions in minecraft code

fixed previous checkin

added sources packaging

add custom armor, for #13

first batch of documentation + minor reformatings

Added explosion resistance hook.



fixed addPixaxeBlockEffectiveAgainst

Added the four new hooks from RedPower, and the TileEntity bugfix.



added missing copyright header

added missing file

added mineable block configuration, for #6

added missing graphical features, added configuration management, for #5

improved previous patch, extracted internal class

fixed compilation errors

fixed setup file

Removed MCForgeEffectRenderer, patched MC EffectRenderer

removed OBE file

fixed setup script for windows and patch

fixed packaging script

fixed patch script and added release scripts

Added OnGameStart hook, added custom effect render to fulfill infinite sprite support. Render needs to be changed a little to cover items also, though.

added headers

added support for infinite sprites, for #4

implement infinite terrain sprites, for #3

fixed style, added biome population support, for #2

initial revision of the license

fixed previous checkin

added basic build script for windows

added missing patch step

made initial setup, implemented custom bucket, for #1

added main project directories

added main source directory

added base directories

